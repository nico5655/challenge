{
    "prob_desc_time_limit": "0.5 seconds",
    "prob_desc_sample_outputs": "[\"-1\", \"bb\\nww\\n\\nbb\\nww\"]",
    "src_uid": "1e8040308997b9497a2c295591992b66",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given a cube of size k × k × k, which consists of unit cubes. Two unit cubes are considered neighbouring, if they have common face.Your task is to paint each of k3 unit cubes one of two colours (black or white), so that the following conditions must be satisfied:  each white cube has exactly 2 neighbouring cubes of white color;  each black cube has exactly 2 neighbouring cubes of black color. ",
    "prob_desc_output_spec": "Print -1 if there is no solution. Otherwise, print the required painting of the cube consequently by layers. Print a k × k matrix in the first k lines, showing how the first layer of the cube should be painted. In the following k lines print a k × k matrix — the way the second layer should be painted. And so on to the last k-th layer. Note that orientation of the cube in the space does not matter. Mark a white unit cube with symbol \"w\" and a black one with \"b\". Use the format of output data, given in the test samples. You may print extra empty lines, they will be ignored.",
    "prob_desc_input_spec": "The first line contains integer k (1 ≤ k ≤ 100), which is size of the cube.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_065.jsonl",
    "code_uid": "2f8169ad33428b60c69d1fa5cd2a6082",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"1\", \"2\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=int(input())\nprint([\"\\n\".join(\"\\n\".join(\"\".join(\"b\" if (i//2+j//2+k)%2 else \"w\" for j in range(n)) for i in range(n))+\"\\n\" for k in range(n)),-1][n%2])\n",
    "prob_desc_created_at": "1372363200",
    "tags": [
        "combinatorics",
        "constructive algorithms"
    ],
    "hidden_unit_tests": ""
}