{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1 1 1\\n4 2 2\\n2 6 6\"]",
    "src_uid": "842a0587147591ea38a20638f3a7960d",
    "prob_desc_notes": null,
    "prob_desc_description": "It is the easy version of the problem. The only difference is that in this version $$$k = 3$$$.You are given a positive integer $$$n$$$. Find $$$k$$$ positive integers $$$a_1, a_2, \\ldots, a_k$$$, such that:  $$$a_1 + a_2 + \\ldots + a_k = n$$$  $$$LCM(a_1, a_2, \\ldots, a_k) \\le \\frac{n}{2}$$$ Here $$$LCM$$$ is the least common multiple of numbers $$$a_1, a_2, \\ldots, a_k$$$.We can show that for given constraints the answer always exists.",
    "prob_desc_output_spec": "For each test case print $$$k$$$ positive integers $$$a_1, a_2, \\ldots, a_k$$$, for which all conditions are satisfied.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ $$$(1 \\le t \\le 10^4)$$$  — the number of test cases. The only line of each test case contains two integers $$$n$$$, $$$k$$$ ($$$3 \\le n \\le 10^9$$$, $$$k = 3$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1200,
    "file_name": "train_087.jsonl",
    "code_uid": "05c5bb718ff8a8626b253d7785829332",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n3 3\\n8 3\\n14 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "#begin of codeforces template\r\n# (don't delete):\r\n#  \r\n# from collections import *\r\n# from heapq import *\r\n# import bisect\r\n#\r\n#t = int(input()) #input number of test cases\r\n#for _ in range(t): #iter for test cases\r\n#    n = int(input()) #input int\r\n#    n,m = map(int,input().split()) #input tuple\r\n#    L = list(map(int,input().split())) #input list\r\n#    s = input() #input string\r\n#    ans = solve(s,L) #solve\r\n#    print(ans)\r\n#\r\n#end of codeforces template\r\n\r\nfrom collections import *\r\n\r\ninf = float(\"inf\")\r\n\r\ndef solve(A):\r\n    print(\" \".join(map(str,A)))\r\n    \r\nt = int(input()) #input number of test cases\r\nfor _ in range(t): #iter for test cases\r\n    n,k = map(int,input().split()) #input tuple\r\n    s = 1\r\n    m = n\r\n    if n%4 == 0:\r\n        print(n//2,n//4,n//4)\r\n    else:\r\n        while m%2 == 0:\r\n            s *= 2\r\n            m //= 2\r\n        print(s,(n-s)//2,(n-s)//2)",
    "prob_desc_created_at": "1615991700",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "hidden_unit_tests": ""
}