{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"3 3 1\", \"0 2 3 0\"]",
    "src_uid": "fad203b52e11706d70e9b2954c295f70",
    "prob_desc_notes": null,
    "prob_desc_description": "The R2 company has n employees working for it. The work involves constant exchange of ideas, sharing the stories of success and upcoming challenging. For that, R2 uses a famous instant messaging program Spyke.R2 has m Spyke chats just to discuss all sorts of issues. In each chat, some group of employees exchanges messages daily. An employee can simultaneously talk in multiple chats. If some employee is in the k-th chat, he can write messages to this chat and receive notifications about messages from this chat. If an employee writes a message in the chat, all other participants of the chat receive a message notification.The R2 company is conducting an audit. Now the specialists study effective communication between the employees. For this purpose, they have a chat log and the description of chat structure. You, as one of audit specialists, are commissioned to write a program that will use this data to determine the total number of message notifications received by each employee.",
    "prob_desc_output_spec": "Print in the single line n space-separated integers, where the i-th integer shows the number of message notifications the i-th employee receives.",
    "prob_desc_input_spec": "The first line contains three space-separated integers n, m and k (2 ≤ n ≤ 2·104; 1 ≤ m ≤ 10; 1 ≤ k ≤ 2·105) — the number of the employees, the number of chats and the number of events in the log, correspondingly.  Next n lines contain matrix a of size n × m, consisting of numbers zero and one. The element of this matrix, recorded in the j-th column of the i-th line, (let's denote it as aij) equals 1, if the i-th employee is the participant of the j-th chat, otherwise the element equals 0. Assume that the employees are numbered from 1 to n and the chats are numbered from 1 to m. Next k lines contain the description of the log events. The i-th line contains two space-separated integers xi and yi (1 ≤ xi ≤ n; 1 ≤ yi ≤ m) which mean that the employee number xi sent one message to chat number yi. It is guaranteed that employee number xi is a participant of chat yi. It is guaranteed that each chat contains at least two employees.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_024.jsonl",
    "code_uid": "ea78f8a064b079e2e56d13637bd5c9a6",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3 4 5\\n1 1 1 1\\n1 0 1 1\\n1 1 0 0\\n1 1\\n3 1\\n1 3\\n2 4\\n3 2\", \"4 3 4\\n0 1 1\\n1 0 1\\n1 1 1\\n0 0 0\\n1 2\\n2 1\\n3 1\\n1 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "R=lambda:map(int,raw_input().split())\nn,m,k=R()\ng=[R() for _ in range(n)]\na=[0]*n\nb=[0]*m\nfor _ in range(k):\n  x,y=R()\n  a[x-1]+=1\n  b[y-1]+=1\nprint ' '.join(map(str,[sum(g[i][j]*b[j] for j in range(m))-a[i] for i in range(n)]))",
    "prob_desc_created_at": "1397977200",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}