{
    "prob_desc_time_limit": "2 секунды",
    "prob_desc_sample_outputs": "[\"180\", \"21\", \"50\"]",
    "src_uid": "c1e952cb7dd158f12df6affcff07b68a",
    "prob_desc_notes": null,
    "prob_desc_description": "Прошло много лет, и на вечеринке снова встретились n друзей. С момента последней встречи техника шагнула далеко вперёд, появились фотоаппараты с автоспуском, и теперь не требуется, чтобы один из друзей стоял с фотоаппаратом, и, тем самым, оказывался не запечатлённым на снимке.Упрощенно процесс фотографирования можно описать следующим образом. На фотографии каждый из друзей занимает прямоугольник из пикселей: в стоячем положении i-й из них занимает прямоугольник ширины wi пикселей и высоты hi пикселей. Но также, при фотографировании каждый человек может лечь, и тогда он будет занимать прямоугольник ширины hi пикселей и высоты wi пикселей.Общая фотография будет иметь размеры W × H, где W — суммарная ширина всех прямоугольников-людей, а H — максимальная из высот. Друзья хотят определить, какую минимальную площадь может иметь общая фотография. Помогите им в этом.",
    "prob_desc_output_spec": "Выведите единственное целое число, равное минимальной возможной площади фотографии, вмещающей всех друзей.",
    "prob_desc_input_spec": "В первой строке следует целое число n (1 ≤ n ≤ 1000) — количество друзей. В последующих n строках следуют по два целых числа wi, hi (1 ≤ wi, hi ≤ 1000), обозначающие размеры прямоугольника, соответствующего i-му из друзей.",
    "prob_desc_output_to": "стандартный вывод",
    "prob_desc_input_from": "стандартный ввод",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_023.jsonl",
    "code_uid": "0116240a4576cc927fabe35720205fe2",
    "prob_desc_memory_limit": "256 мегабайт",
    "prob_desc_sample_inputs": "[\"3\\n10 1\\n20 2\\n30 3\", \"3\\n3 1\\n2 2\\n4 3\", \"1\\n5 10\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input().rstrip())\nd = []\nfor i in range(n):\n    w, h = map(int, input().rstrip().split())\n    d.append([w, h])\ns = '.'    \nfor i in range(len(d)):\n    h = d[i][0]\n    w = d[i][1]\n    f = 1\n    for j in range(len(d)):\n        if j != i:\n            if d[j][0] <= h and d[j][1] <= h:\n                w += min(d[j][0], d[j][1])\n            elif d[j][0] <= h and d[j][1] > h:\n                w += d[j][1]\n            elif d[j][0] > h and d[j][1] <= h:\n                w += d[j][0]\n            else:\n                f = 0\n    if not f == 0:\n        if s == '.' or h * w < s:\n            s = h * w\n    h = d[i][1]\n    w = d[i][0]\n    f = 1\n    for j in range(len(d)):\n        if j != i:\n            if d[j][0] <= h and d[j][1] <= h:\n                w += min(d[j][0], d[j][1])\n            elif d[j][0] <= h and d[j][1] > h:\n                w += d[j][1]\n            elif d[j][0] > h and d[j][1] <= h:\n                w += d[j][0]\n            else:\n                f = 0\n    if not f == 0:\n        if s == '.' or h * w < s:\n            s = h * w            \nprint(s)                \n    ",
    "prob_desc_created_at": "1426946400",
    "tags": [
        "dp",
        "greedy"
    ],
    "hidden_unit_tests": ""
}