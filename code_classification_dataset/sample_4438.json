{
    "prob_desc_time_limit": "1.5 seconds",
    "prob_desc_sample_outputs": "[\"3\\n0\\n28\"]",
    "src_uid": "d6a123dab1263b0e7b297ca2584fe701",
    "prob_desc_notes": "NoteIn the first test case, there are $$$3$$$ different $$$[a,b,c,d]$$$ tuples.$$$p_1 = 5$$$, $$$p_2 = 3$$$, $$$p_3 = 6$$$, $$$p_4 = 1$$$, where $$$p_1 &lt; p_3$$$ and $$$p_2 &gt; p_4$$$ satisfies the inequality, so one of $$$[a,b,c,d]$$$ tuples is $$$[1,2,3,4]$$$.Similarly, other two tuples are $$$[1,2,3,6]$$$, $$$[2,3,5,6]$$$.",
    "prob_desc_description": "Tokitsukaze has a permutation $$$p$$$ of length $$$n$$$. Recall that a permutation $$$p$$$ of length $$$n$$$ is a sequence $$$p_1, p_2, \\ldots, p_n$$$ consisting of $$$n$$$ distinct integers, each of which from $$$1$$$ to $$$n$$$ ($$$1 \\leq p_i \\leq n$$$).She wants to know how many different indices tuples $$$[a,b,c,d]$$$ ($$$1 \\leq a &lt; b &lt; c &lt; d \\leq n$$$) in this permutation satisfy the following two inequalities:  $$$p_a &lt; p_c$$$ and $$$p_b &gt; p_d$$$. Note that two tuples $$$[a_1,b_1,c_1,d_1]$$$ and $$$[a_2,b_2,c_2,d_2]$$$ are considered to be different if $$$a_1 \\ne a_2$$$ or $$$b_1 \\ne b_2$$$ or $$$c_1 \\ne c_2$$$ or $$$d_1 \\ne d_2$$$.",
    "prob_desc_output_spec": "For each test case, print a single integer — the number of different $$$[a,b,c,d]$$$ tuples.",
    "prob_desc_input_spec": "The first line contains one integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases. Each test case consists of two lines. The first line contains a single integer $$$n$$$ ($$$4 \\leq n \\leq 5000$$$) — the length of permutation $$$p$$$. The second line contains $$$n$$$ integers $$$p_1, p_2, \\ldots, p_n$$$ ($$$1 \\leq p_i \\leq n$$$) — the permutation $$$p$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5000$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_097.jsonl",
    "code_uid": "8f31927826470806f8119154361125db",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n\\n6\\n\\n5 3 6 1 4 2\\n\\n4\\n\\n1 2 3 4\\n\\n10\\n\\n5 1 6 2 8 3 4 10 9 7\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\r\ninput = sys.stdin.readline\r\nt = int(input())\r\nfor _ in range(t):\r\n    f = [0] * 5001\r\n    bitf = [0] * 5001\r\n    count = 0\r\n    length = int(input())\r\n    lst = tuple(map(int, input().split()))\r\n    for j in range(length):\r\n        for l in range(j+1, length):\r\n            if lst[j]>lst[l]: f[j]+=1\r\n    for k in range(length):\r\n        for j in range(k):\r\n            if lst[j]>lst[k]: f[j]-= 1\r\n        bitf[0] = 0;\r\n        for i in range(k): bitf[i]=bitf[i-1]+f[i]\r\n        for i in range(k-1): \r\n            if lst[i]<lst[k]: count += bitf[k-1]-bitf[i]\r\n    print(count)\r\n    \r\n\r\n",
    "prob_desc_created_at": "1652020500",
    "tags": [
        "brute force",
        "data structures",
        "dp"
    ],
    "hidden_unit_tests": ""
}