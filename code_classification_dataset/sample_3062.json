{
    "prob_desc_time_limit": "0.5 seconds",
    "prob_desc_sample_outputs": "[\"0\", \"3\"]",
    "src_uid": "80b11670a99f59afc8d58073b9fa7f6d",
    "prob_desc_notes": "NoteIn the first sample you do not need to add anything, the sum of numbers already equals 23 - 1 = 7.In the second sample you need to add numbers 20, 21, 22.",
    "prob_desc_description": "Ivan has got an array of n non-negative integers a1, a2, ..., an. Ivan knows that the array is sorted in the non-decreasing order. Ivan wrote out integers 2a1, 2a2, ..., 2an on a piece of paper. Now he wonders, what minimum number of integers of form 2b (b ≥ 0) need to be added to the piece of paper so that the sum of all integers written on the paper equalled 2v - 1 for some integer v (v ≥ 0). Help Ivan, find the required quantity of numbers.",
    "prob_desc_output_spec": "Print a single integer — the answer to the problem.",
    "prob_desc_input_spec": "The first line contains integer n (1 ≤ n ≤ 105). The second input line contains n space-separated integers a1, a2, ..., an (0 ≤ ai ≤ 2·109). It is guaranteed that a1 ≤ a2 ≤ ... ≤ an.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_040.jsonl",
    "code_uid": "2798b7365fc01e23a7bccb5b5cc4b4cd",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n0 1 1 1\", \"1\\n3\"]",
    "exec_outcome": "PASSED",
    "source_code": "input()\nbits = {}\nfor i in map(int,raw_input().split()):\n    j = i\n    while j in bits and bits[j] == 1:\n        bits[j] = 0\n        j += 1\n    bits[j] = 1\nprint max(bits) - sum(bits.values()) + 1",
    "prob_desc_created_at": "1368968400",
    "tags": [
        "implementation",
        "greedy"
    ],
    "hidden_unit_tests": ""
}