{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2.000000000000000000\", \"0.500000000000000000\", \"3.333333333333333333\"]",
    "src_uid": "7bdd8f0cf42855bebda4ccc56d8fe788",
    "prob_desc_notes": "NoteIn the first example it is necessary to put weights like this:  It is easy to see that the diameter of this tree is $$$2$$$. It can be proved that it is the minimum possible diameter.In the second example it is necessary to put weights like this:  ",
    "prob_desc_description": "You are given a tree (an undirected connected graph without cycles) and an integer $$$s$$$.Vanya wants to put weights on all edges of the tree so that all weights are non-negative real numbers and their sum is $$$s$$$. At the same time, he wants to make the diameter of the tree as small as possible.Let's define the diameter of a weighed tree as the maximum sum of the weights of the edges lying on the path between two some vertices of the tree. In other words, the diameter of a weighed tree is the length of the longest simple path in the tree, where length of a path is equal to the sum of weights over all edges in the path.Find the minimum possible diameter that Vanya can get.",
    "prob_desc_output_spec": "Print the minimum diameter of the tree that Vanya can get by placing some non-negative real weights on its edges with the sum equal to $$$s$$$. Your answer will be considered correct if its absolute or relative error does not exceed $$$10^{-6}$$$. Formally, let your answer be $$$a$$$, and the jury's answer be $$$b$$$. Your answer is considered correct if $$$\\frac {|a-b|} {max(1, b)} \\leq 10^{-6}$$$.",
    "prob_desc_input_spec": "The first line contains two integer numbers $$$n$$$ and $$$s$$$ ($$$2 \\leq n \\leq 10^5$$$, $$$1 \\leq s \\leq 10^9$$$) — the number of vertices in the tree and the sum of edge weights. Each of the following $$$n−1$$$ lines contains two space-separated integer numbers $$$a_i$$$ and $$$b_i$$$ ($$$1 \\leq a_i, b_i \\leq n$$$, $$$a_i \\neq b_i$$$) — the indexes of vertices connected by an edge. The edges are undirected. It is guaranteed that the given edges form a tree.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_019.jsonl",
    "code_uid": "b693d62494d48d4dac2458e83a325761",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4 3\\n1 2\\n1 3\\n1 4\", \"6 1\\n2 1\\n2 3\\n2 5\\n5 4\\n5 6\", \"5 5\\n1 2\\n2 3\\n3 4\\n3 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "n,s = [int(x) for x in input().split()]\nv=[ [] ]\nfor i in range(n):\n\tv.append([])\n\t\nfor i in range(n-1):\n\ta, b =[int(x) for x in input().split()]\n\tv[a].append(b)\n\tv[b].append(a)\n\nans =0\nfor i in range(1,n+1):\n\tif len(v[i])==1:\n\t\tans+=1\n\t\nprint(2*s/ans)\n",
    "prob_desc_created_at": "1545572100",
    "tags": [
        "implementation",
        "greedy",
        "trees"
    ],
    "hidden_unit_tests": ""
}