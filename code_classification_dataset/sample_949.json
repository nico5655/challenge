{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\"]",
    "src_uid": "fa9cc3ba103ed1f940c9e80a7ea75f72",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given n points on a line with their coordinates xi. Find the point x so the sum of distances to the given points is minimal.",
    "prob_desc_output_spec": "Print the only integer x — the position of the optimal point on the line. If there are several optimal points print the position of the leftmost one. It is guaranteed that the answer is always the integer.",
    "prob_desc_input_spec": "The first line contains integer n (1 ≤ n ≤ 3·105) — the number of points on the line. The second line contains n integers xi ( - 109 ≤ xi ≤ 109) — the coordinates of the given n points.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1400,
    "file_name": "train_005.jsonl",
    "code_uid": "ef9b593f73b269c1863c199e0212116f",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n1 2 3 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\n\nn = int(sys.stdin.readline())\ncoords = sorted(map(lambda w: int(w), sys.stdin.readline().split()))\n\nif n%2==1:\n    print coords[(n-1)/2]\nelse:\n    print coords[n/2-1]",
    "prob_desc_created_at": "1471875000",
    "tags": [
        "sortings",
        "brute force"
    ],
    "hidden_unit_tests": ""
}