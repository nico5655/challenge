{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"42\", \"28\"]",
    "src_uid": "e6689123fefea251555e0e096f58f6d1",
    "prob_desc_notes": "NoteIn the first sample Anton has one icosahedron, one cube, one tetrahedron and one dodecahedron. Icosahedron has 20 faces, cube has 6 faces, tetrahedron has 4 faces and dodecahedron has 12 faces. In total, they have 20 + 6 + 4 + 12 = 42 faces.",
    "prob_desc_description": "Anton's favourite geometric figures are regular polyhedrons. Note that there are five kinds of regular polyhedrons:   Tetrahedron. Tetrahedron has 4 triangular faces.  Cube. Cube has 6 square faces.  Octahedron. Octahedron has 8 triangular faces.  Dodecahedron. Dodecahedron has 12 pentagonal faces.  Icosahedron. Icosahedron has 20 triangular faces. All five kinds of polyhedrons are shown on the picture below:  Anton has a collection of n polyhedrons. One day he decided to know, how many faces his polyhedrons have in total. Help Anton and find this number!",
    "prob_desc_output_spec": "Output one number — the total number of faces in all the polyhedrons in Anton's collection.",
    "prob_desc_input_spec": "The first line of the input contains a single integer n (1 ≤ n ≤ 200 000) — the number of polyhedrons in Anton's collection. Each of the following n lines of the input contains a string si — the name of the i-th polyhedron in Anton's collection. The string can look like this:   \"Tetrahedron\" (without quotes), if the i-th polyhedron in Anton's collection is a tetrahedron.  \"Cube\" (without quotes), if the i-th polyhedron in Anton's collection is a cube.  \"Octahedron\" (without quotes), if the i-th polyhedron in Anton's collection is an octahedron.  \"Dodecahedron\" (without quotes), if the i-th polyhedron in Anton's collection is a dodecahedron.  \"Icosahedron\" (without quotes), if the i-th polyhedron in Anton's collection is an icosahedron. ",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_010.jsonl",
    "code_uid": "5f5b99a7173786f22366e38943303554",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\nIcosahedron\\nCube\\nTetrahedron\\nDodecahedron\", \"3\\nDodecahedron\\nOctahedron\\nOctahedron\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\nk = 0\ni = 0\nwhile i != n:\n    x = str(input())\n    if x == 'Tetrahedron':\n        k += 4\n    if x == 'Cube':\n        k += 6\n    if x == 'Octahedron':\n        k += 8\n    if x == 'Dodecahedron':\n        k += 12\n    if x == 'Icosahedron':\n        k += 20\n    i += 1\nprint(k)\n\n# 374 ms по слову for\n# 390 ms по индексу for\n# 467 ms по слову while\n# 467 ms по индексу while \n",
    "prob_desc_created_at": "1489590300",
    "tags": [
        "implementation",
        "strings"
    ],
    "hidden_unit_tests": ""
}