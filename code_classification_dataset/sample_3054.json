{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1\\n2\\n2\"]",
    "src_uid": "305159945f077d5fff514bfd398eb10e",
    "prob_desc_notes": "NoteIn the example, Chtholly initially knew there were 2 sheets, 4 rounds and each number was between 1 and 4. She then received a 2 and decided to write it in the 1st sheet. Then she received a 1 and wrote it in the 2nd sheet. At last, she received a 3 and replaced 1 with 3 in the 2nd sheet. At this time all the sheets were filled with a number and they were non-decreasing, so she won the game. Note that it is required that your program terminate immediately after Chtholly wins and do not read numbers from the input for the remaining rounds. If not, undefined behaviour may arise and it won't be sure whether your program will be accepted or rejected. Also because of this, please be careful when hacking others' codes. In the sample, Chtholly won the game after the 3rd round, so it is required that your program doesn't read the number of the remaining 4th round.The input format for hacking:   The first line contains 3 integers n, m and c;  The following m lines each contains an integer between 1 and c, indicating the number given to Chtholly in each round. ",
    "prob_desc_description": "This is an interactive problem. Refer to the Interaction section below for better understanding.Ithea and Chtholly want to play a game in order to determine who can use the kitchen tonight.Initially, Ithea puts n clear sheets of paper in a line. They are numbered from 1 to n from left to right.This game will go on for m rounds. In each round, Ithea will give Chtholly an integer between 1 and c, and Chtholly needs to choose one of the sheets to write down this number (if there is already a number before, she will erase the original one and replace it with the new one).Chtholly wins if, at any time, all the sheets are filled with a number and the n numbers are in non-decreasing order looking from left to right from sheet 1 to sheet n, and if after m rounds she still doesn't win, she loses the game.Chtholly really wants to win the game as she wants to cook something for Willem. But she doesn't know how to win the game. So Chtholly finds you, and your task is to write a program to receive numbers that Ithea gives Chtholly and help her make the decision on which sheet of paper write this number.",
    "prob_desc_output_spec": null,
    "prob_desc_input_spec": "The first line contains 3 integers n, m and c (,  means  rounded up) — the number of sheets, the number of rounds and the largest possible number Ithea can give to Chtholly respectively. The remaining parts of input are given throughout the interaction process.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2000,
    "file_name": "train_040.jsonl",
    "code_uid": "fb8fb151a719de2279e90dd127b58203",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 4 4\\n2\\n1\\n3\"]",
    "exec_outcome": "PASSED",
    "source_code": "def main():\n    n, m, c = map(int, input().split())\n    middle = ((c + 1) // 2) * 2 + 1\n    xs = [middle for _ in range(n)]\n\n    def value(a, b):\n        # moving from a to b. What is the value of that?\n        if a > middle:\n            return b - a\n        elif a < middle:\n            return a - b\n        return c\n\n    for _ in range(m):\n        sheet = int(input().strip()) * 2\n        best_i = -1\n        best_value = -1\n        for i in range(n):\n            if (i == 0 or xs[i - 1] <= sheet) and (i == n - 1 or sheet <= xs[i + 1]):\n                tmp_value = value(xs[i], sheet)\n                if tmp_value > best_value:\n                    best_value = tmp_value\n                    best_i = i\n        xs[best_i] = sheet\n        print(best_i + 1, flush=True)\n        if not any(x == middle for x in xs):\n            break\n\n\nif __name__ == '__main__':\n    main()\n",
    "prob_desc_created_at": "1512223500",
    "tags": [
        "constructive algorithms",
        "binary search",
        "implementation",
        "interactive"
    ],
    "hidden_unit_tests": ""
}