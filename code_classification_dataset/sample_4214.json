{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"2 2 3 \\n4 4 4 4 5 6\"]",
    "src_uid": "06212223295c56a78a5d4e55c53a63e0",
    "prob_desc_notes": "NoteOne of the ways to give power-ups to minimise the sum of strengths in the first test case:   $$$k = 1: \\{1, 1, 2\\}$$$    $$$k = 2: \\{1, 1\\}, \\{2\\}$$$    $$$k = 3: \\{1\\}, \\{1\\}, \\{2\\}$$$   One of the ways to give power-ups to minimise the sum of strengths in the second test case:   $$$k = 1: \\{1, 2, 2, 2, 4, 5\\}$$$    $$$k = 2: \\{2, 2, 2, 4, 5\\}, \\{1\\}$$$    $$$k = 3: \\{2, 2, 2, 5\\}, \\{1\\}, \\{4\\}$$$    $$$k = 4: \\{2, 2, 2\\}, \\{1\\}, \\{4\\}, \\{5\\}$$$    $$$k = 5: \\{2, 2\\}, \\{1\\}, \\{2\\}, \\{4\\}, \\{5\\}$$$    $$$k = 6: \\{1\\}, \\{2\\}, \\{2\\}, \\{2\\}, \\{4\\}, \\{5\\}$$$   ",
    "prob_desc_description": "Sam is a kindergartener, and there are $$$n$$$ children in his group. He decided to create a team with some of his children to play \"brawl:go 2\".Sam has $$$n$$$ power-ups, the $$$i$$$-th has type $$$a_i$$$. A child's strength is equal to the number of different types among power-ups he has.For a team of size $$$k$$$, Sam will distribute all $$$n$$$ power-ups to $$$k$$$ children in such a way that each of the $$$k$$$ children receives at least one power-up, and each power-up is given to someone.For each integer $$$k$$$ from $$$1$$$ to $$$n$$$, find the minimum sum of strengths of a team of $$$k$$$ children Sam can get.",
    "prob_desc_output_spec": "For every test case print $$$n$$$ integers. The $$$k$$$-th integer should be equal to the minimum sum of strengths of children in the team of size $$$k$$$ that Sam can get.",
    "prob_desc_input_spec": "Each test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 3 \\cdot 10^5$$$) — the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 3 \\cdot 10^5$$$).  The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$) — types of Sam's power-ups. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$3 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_092.jsonl",
    "code_uid": "91cfd476e7f0ed8c19a484c5cb9026d7",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n\\n3\\n\\n1 1 2\\n\\n6\\n\\n5 1 2 2 2 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "for i in range(int(input())):\r\n\t\tn= int(input())\r\n\t\ta=list(map(int,input().split()))\r\n\t\tx=len(set(a))\r\n\t\tz=\" \".join(str(max(j,x)) for j in range(1,n+1) )\r\n\t\tprint(z)",
    "prob_desc_created_at": "1645611000",
    "tags": [
        "greedy"
    ],
    "hidden_unit_tests": ""
}