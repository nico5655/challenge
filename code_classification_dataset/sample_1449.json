{
    "prob_desc_time_limit": "1 секунда",
    "prob_desc_sample_outputs": "[\"2\", \"-1\", \"6\"]",
    "src_uid": "874c4847db340f10ac55259cba259723",
    "prob_desc_notes": "ПримечаниеВ первом примере Аркадий должен взять первый велосипед в первом велопрокате и доехать на нём до второго велопроката. Во втором велопрокате он должен взять новый велосипед, на котором он сможет добраться до четвертого велопроката, рядом с которым и находится его дом. Поэтому Аркадию нужно всего два велосипеда, чтобы добраться от школы до дома.Во втором примере всего два велопроката, расстояние между которыми 10. Но максимальное расстояние, которое можно проехать на одном велосипеде, равно 9. Поэтому Аркадий не сможет добраться от школы до дома только на велосипедах.",
    "prob_desc_description": "Как известно, в теплую погоду многие жители крупных городов пользуются сервисами городского велопроката. Вот и Аркадий сегодня будет добираться от школы до дома, используя городские велосипеды.Школа и дом находятся на одной прямой улице, кроме того, на той же улице есть n точек, где можно взять велосипед в прокат или сдать его. Первый велопрокат находится в точке x1 километров вдоль улицы, второй — в точке x2 и так далее, n-й велопрокат находится в точке xn. Школа Аркадия находится в точке x1 (то есть там же, где и первый велопрокат), а дом — в точке xn (то есть там же, где и n-й велопрокат). Известно, что xi &lt; xi + 1 для всех 1 ≤ i &lt; n.Согласно правилам пользования велопроката, Аркадий может брать велосипед в прокат только на ограниченное время, после этого он должен обязательно вернуть его в одной из точек велопроката, однако, он тут же может взять новый велосипед, и отсчет времени пойдет заново. Аркадий может брать не более одного велосипеда в прокат одновременно. Если Аркадий решает взять велосипед в какой-то точке проката, то он сдаёт тот велосипед, на котором он до него доехал, берёт ровно один новый велосипед и продолжает на нём своё движение.За отведенное время, независимо от выбранного велосипеда, Аркадий успевает проехать не больше k километров вдоль улицы. Определите, сможет ли Аркадий доехать на велосипедах от школы до дома, и если да, то какое минимальное число раз ему необходимо будет взять велосипед в прокат, включая первый велосипед? Учтите, что Аркадий не намерен сегодня ходить пешком.",
    "prob_desc_output_spec": "Если Аркадий не сможет добраться от школы до дома только на велосипедах, выведите -1. В противном случае, выведите минимальное количество велосипедов, которые Аркадию нужно взять в точках проката.",
    "prob_desc_input_spec": "В первой строке следуют два целых числа n и k (2 ≤ n ≤ 1 000, 1 ≤ k ≤ 100 000) — количество велопрокатов и максимальное расстояние, которое Аркадий может проехать на одном велосипеде. В следующей строке следует последовательность целых чисел x1, x2, ..., xn (0 ≤ x1 &lt; x2 &lt; ... &lt; xn ≤ 100 000) — координаты точек, в которых находятся велопрокаты. Гарантируется, что координаты велопрокатов заданы в порядке возрастания.",
    "prob_desc_output_to": "стандартный вывод",
    "prob_desc_input_from": "стандартный ввод",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1400,
    "file_name": "train_009.jsonl",
    "code_uid": "1d3b61a1b48efa4dfbad453601fe8b7a",
    "prob_desc_memory_limit": "256 мегабайт",
    "prob_desc_sample_inputs": "[\"4 4\\n3 6 8 10\", \"2 9\\n10 20\", \"12 3\\n4 6 7 9 10 11 13 15 17 18 20 21\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, k = [int(i) for i in input().split()]\nx = [int(i) for i in input().split()]\ndiff = [x[i] - x[i - 1] for i in range(1, n)]\nif len(list(filter(lambda x: x > k, diff))) > 0:\n\tprint(-1)\n\texit(0)\nans = 1\ncur = 0\nfor i in diff:\n\tif cur + i > k:\n\t\tans += 1\n\t\tcur = i\n\telse:\n\t\tcur += i\nprint(ans)\n",
    "prob_desc_created_at": "1520004900",
    "tags": [
        "implementation",
        "*special",
        "greedy"
    ],
    "hidden_unit_tests": ""
}