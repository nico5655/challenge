{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"0\\n  0 1 0\\n0 1 2 1 0\\n  0 1 0\\n    0\", \"0\\n    0 1 0\\n  0 1 2 1 0\\n0 1 2 3 2 1 0\\n  0 1 2 1 0\\n    0 1 0\\n      0\"]",
    "src_uid": "7896740b6f35010af751d3261b5ef718",
    "prob_desc_notes": null,
    "prob_desc_description": "Vasya's birthday is approaching and Lena decided to sew a patterned handkerchief to him as a present. Lena chose digits from 0 to n as the pattern. The digits will form a rhombus. The largest digit n should be located in the centre. The digits should decrease as they approach the edges. For example, for n = 5 the handkerchief pattern should look like that:           0        0 1 0      0 1 2 1 0    0 1 2 3 2 1 0  0 1 2 3 4 3 2 1 00 1 2 3 4 5 4 3 2 1 0  0 1 2 3 4 3 2 1 0    0 1 2 3 2 1 0      0 1 2 1 0        0 1 0          0Your task is to determine the way the handkerchief will look like by the given n.",
    "prob_desc_output_spec": "Print a picture for the given n. You should strictly observe the number of spaces before the first digit on each line. Every two adjacent digits in the same line should be separated by exactly one space. There should be no spaces after the last digit at the end of each line.",
    "prob_desc_input_spec": "The first line contains the single integer n (2 ≤ n ≤ 9).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_001.jsonl",
    "code_uid": "f7a348b98064b88096373cc2c5bee44c",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\", \"3\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\n\ndef input():    return sys.stdin.readline().strip()\ndef iinput():   return int(input())\ndef rinput():   return map(int, sys.stdin.readline().strip().split()) \ndef get_list(): return list(map(int, sys.stdin.readline().strip().split())) \n\n\nn=iinput()\nrow = 2*n + 1\nans = [] \nspaces = 2*n\n\nfor i in range(n + 1):\n    temp = \" \"*spaces\n    for j in range(0,i):\n        temp += str(j) + \" \"\n    for j in range(i, -1, -1):\n        temp += str(j) + \" \" \n    temp = temp.rstrip()    \n    print(temp)\n    ans.append(temp)\n    spaces-=2\n\nl = len(ans)\nfor i in range(l-2, -1, -1):\n    print(ans[i])",
    "prob_desc_created_at": "1317999600",
    "tags": [
        "constructive algorithms",
        "implementation"
    ],
    "hidden_unit_tests": ""
}