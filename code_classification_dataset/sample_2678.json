{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\\n0 0 0 0 0 0\", \"3\\n101 100 100\", \"5\\n-10 -10 -9 -9 -9 -9 -9\"]",
    "src_uid": "dbbea6784cafdd4244f56729996e9187",
    "prob_desc_notes": "NoteIn the first example Anya can write zeros as here measurements results. The average value is then equal to the average value of Kirill's values, and there are only two equal measurements.In the second example Anya should write two values 100 and one value 101 (in any order), because it is the only possibility to make the average be the equal to the average of Kirill's values. Thus, all three measurements are equal.In the third example the number of equal measurements is 5.",
    "prob_desc_description": "Anya and Kirill are doing a physics laboratory work. In one of the tasks they have to measure some value n times, and then compute the average value to lower the error.Kirill has already made his measurements, and has got the following integer values: x1, x2, ..., xn. It is important that the values are close to each other, namely, the difference between the maximum value and the minimum value is at most 2.Anya does not want to make the measurements, however, she can't just copy the values from Kirill's work, because the error of each measurement is a random value, and this coincidence will be noted by the teacher. Anya wants to write such integer values y1, y2, ..., yn in her work, that the following conditions are met:  the average value of x1, x2, ..., xn is equal to the average value of y1, y2, ..., yn; all Anya's measurements are in the same bounds as all Kirill's measurements, that is, the maximum value among Anya's values is not greater than the maximum value among Kirill's values, and the minimum value among Anya's values is not less than the minimum value among Kirill's values; the number of equal measurements in Anya's work and Kirill's work is as small as possible among options with the previous conditions met. Formally, the teacher goes through all Anya's values one by one, if there is equal value in Kirill's work and it is not strike off yet, he strikes off this Anya's value and one of equal values in Kirill's work. The number of equal measurements is then the total number of strike off values in Anya's work. Help Anya to write such a set of measurements that the conditions above are met.",
    "prob_desc_output_spec": "In the first line print the minimum possible number of equal measurements. In the second line print n integers y1, y2, ..., yn — the values Anya should write. You can print the integers in arbitrary order. Keep in mind that the minimum value among Anya's values should be not less that the minimum among Kirill's values, and the maximum among Anya's values should be not greater than the maximum among Kirill's values. If there are multiple answers, print any of them. ",
    "prob_desc_input_spec": "The first line contains a single integer n (1 ≤ n ≤ 100 000) — the numeber of measurements made by Kirill. The second line contains a sequence of integers x1, x2, ..., xn ( - 100 000 ≤ xi ≤ 100 000) — the measurements made by Kirill. It is guaranteed that the difference between the maximum and minimum values among values x1, x2, ..., xn does not exceed 2.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_028.jsonl",
    "code_uid": "742d1699955f796e4b896e463514550f",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n-1 1 1 0 0 -1\", \"3\\n100 100 101\", \"7\\n-10 -9 -10 -8 -10 -9 -9\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=int(input())\nx=input()\na=list(map(int,x.split()))\nif max(a)-min(a)<2:\n print(n)\n print(x)\n exit()\ns=set(a)\nq=min(a)\ns=max(a)\nr=q+1\nm={}\nm[q]=m[s]=m[r]=0\nfor i in a:m[i]+=1\nif n-2*min(m[q],m[s])<n-m[r]//2*2:\n print(n-2*min(m[q],m[s]))\n e=min(m[q],m[s])\n m[r]+=e+e\n m[q]-=e\n m[s]-=e\nelse:\n print(n-m[r]//2*2)\n e=m[r]//2\n m[r]-=e+e\n m[q]+=e\n m[s]+=e\nb=[r for i in range(m[r])]\nb=b+[q for i in range(m[q])]\nb=b+[s for i in range(m[s])]\nprint(*b)\n\n\n\n\n# Made By Mostafa_Khaled",
    "prob_desc_created_at": "1520177700",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}