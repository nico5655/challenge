{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1\", \"5\"]",
    "src_uid": "c15ad483441864b3222eb62723b598e1",
    "prob_desc_notes": "NoteIn the first example the only element can be removed.",
    "prob_desc_description": "You are given a permutation p of length n. Remove one element from permutation to make the number of records the maximum possible.We remind that in a sequence of numbers a1, a2, ..., ak the element ai is a record if for every integer j (1 ≤ j &lt; i) the following holds: aj &lt; ai. ",
    "prob_desc_output_spec": "Print the only integer — the element that should be removed to make the number of records the maximum possible. If there are multiple such elements, print the smallest one.",
    "prob_desc_input_spec": "The first line contains the only integer n (1 ≤ n ≤ 105) — the length of the permutation. The second line contains n integers p1, p2, ..., pn (1 ≤ pi ≤ n) — the permutation. All the integers are distinct.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_005.jsonl",
    "code_uid": "ce3aabd502c6918c7a3f96acb2c5ac21",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"1\\n1\", \"5\\n5 1 2 3 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\n\ncases = sys.stdin.readline()\nmy_list = [int(a) for a in sys.stdin.readline().split(\" \")]\n#my_list = [4, 5, 3, 2, 1]\n\nmax_val_a = my_list[0]\nmax_val_b = 0\n\nmy_counts = dict()\nfor x in my_list:\n  my_counts[x] = 0\n\nmy_counts[max_val_a] = -1\n\nfor x in my_list:\n  #print(my_counts)\n  if(x > max_val_a):\n    my_counts[x] = my_counts[x] - 1\n    max_val_a, max_val_b = x, max_val_a\n  elif (x < max_val_a and x > max_val_b):\n    my_counts[max_val_a] = my_counts[max_val_a] + 1\n    max_val_b = x\n    \n#print(my_counts)\nhighest = max(my_counts.values())\nprint(min([k for k, v in my_counts.items() if v == highest]))",
    "prob_desc_created_at": "1513008300",
    "tags": [
        "data structures",
        "brute force",
        "math"
    ],
    "hidden_unit_tests": ""
}