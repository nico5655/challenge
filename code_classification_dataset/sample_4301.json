{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1\\n2\\n4\\n4\\n8\\n8\\n15\\n6\"]",
    "src_uid": "d55660b8091bca2211fa1ad56402aebd",
    "prob_desc_notes": "NoteThe first test case contains exactly one subsegment and $$$mex({0}) = 1 &gt; med({0}) = 0$$$ on it.In the third test case, on the following subsegments: $$$[1, 0]$$$, $$$[0]$$$, $$$[1, 0, 2]$$$ and $$$[0, 2]$$$, $$$mex$$$ is greater than $$$med$$$.In the fourth test case, on the following subsegments: $$$[0, 2]$$$, $$$[0]$$$, $$$[0, 2, 1]$$$ and $$$[0, 2, 1, 3]$$$, $$$mex$$$ greater than $$$med$$$.",
    "prob_desc_description": "You are given a permutation $$$p_1, p_2, \\ldots, p_n$$$ of length $$$n$$$ of numbers $$$0, \\ldots, n - 1$$$. Count the number of subsegments $$$1 \\leq l \\leq r \\leq n$$$ of this permutation such that $$$mex(p_l, p_{l+1}, \\ldots, p_r) &gt; med(p_l, p_{l+1}, \\ldots, p_r)$$$.$$$mex$$$ of $$$S$$$ is the smallest non-negative integer that does not occur in $$$S$$$. For example: $$$mex({0, 1, 2, 3}) = 4$$$ $$$mex({0, 4, 1, 3}) = 2$$$ $$$mex({5, 4, 0, 1, 2}) = 3$$$$$$med$$$ of the set $$$S$$$ is the median of the set, i.e. the element that, after sorting the elements in non-decreasing order, will be at position number $$$\\left \\lfloor{ \\frac{|S| + 1}{2} } \\right \\rfloor$$$ (array elements are numbered starting from $$$1$$$ and here $$$\\left \\lfloor{v} \\right \\rfloor$$$ denotes rounding $$$v$$$ down.). For example: $$$med({0, 1, 2, 3}) = 1$$$ $$$med({0, 4, 1, 3}) = 1$$$ $$$med({5, 4, 0, 1, 2}) = 2$$$A sequence of $$$n$$$ numbers is called a permutation if it contains all the numbers from $$$0$$$ to $$$n - 1$$$ exactly once.",
    "prob_desc_output_spec": "For each test case print the answer in a single line: the number of subsegments $$$1 \\leq l \\leq r \\leq n$$$ of this permutation such that $$$mex(p_l, p_{l+1}, \\ldots, p_r) &gt; med(p_l, p_{l+1}, \\ldots, p_r)$$$.",
    "prob_desc_input_spec": "The first line of the input contains a single integer $$$t$$$ $$$(1 \\leq t \\leq 10^4$$$), the number of test cases. The descriptions of the test cases follow. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$), the length of the permutation $$$p$$$. The second line of each test case contains exactly $$$n$$$ integers: $$$p_1, p_2, \\ldots, p_n$$$ ($$$0 \\leq p_i \\leq n - 1$$$), elements of permutation $$$p$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 2000,
    "file_name": "train_094.jsonl",
    "code_uid": "670eb5cd4649deb067d7b6043f13bc46",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"8\\n\\n1\\n\\n0\\n\\n2\\n\\n1 0\\n\\n3\\n\\n1 0 2\\n\\n4\\n\\n0 2 1 3\\n\\n5\\n\\n3 1 0 2 4\\n\\n6\\n\\n2 0 4 1 3 5\\n\\n8\\n\\n3 7 2 6 0 1 5 4\\n\\n4\\n\\n2 0 1 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "m=int(input())\r\nfor _ in range(m):\r\n    n=int(input())\r\n    s=dict(zip(map(int,input().split()),range(n)))\r\n    mi=s[0]\r\n    ma=mi\r\n    lists=0\r\n    n0=int(n/2)+n%2\r\n    for i in range(n0):\r\n        si=s[i]\r\n        mi=min(mi,si)\r\n        ma=max(ma,si)\r\n        b1=2*i+1\r\n        b2=b1+1\r\n        a1=min(b1-ma+mi,mi+1,n-ma,n-b1+1)\r\n        a2=min(b2-ma+mi,mi+1,n-ma,n-b2+1)\r\n        if b2<=n and a2>0:\r\n            lists=lists+a2\r\n        if a1>0:\r\n            lists=lists+a1\r\n    print(lists)\r\n\r\n    \r\n\r\n",
    "prob_desc_created_at": "1665930900",
    "tags": [
        "math",
        "two pointers"
    ],
    "hidden_unit_tests": ""
}