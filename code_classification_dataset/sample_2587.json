{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"4\", \"1\", \"48\"]",
    "src_uid": "52e1fd9d3c82cd70c686e575c92c1442",
    "prob_desc_notes": "NoteIn the first example, the suitable pairs of indices are: $$$(1, 3)$$$, $$$(2, 2)$$$, $$$(2, 3)$$$ and $$$(2, 4)$$$.",
    "prob_desc_description": "You are given a permutation $$$p_1, p_2, \\dots, p_n$$$. A permutation of length $$$n$$$ is a sequence such that each integer between $$$1$$$ and $$$n$$$ occurs exactly once in the sequence.Find the number of pairs of indices $$$(l, r)$$$ ($$$1 \\le l \\le r \\le n$$$) such that the value of the median of $$$p_l, p_{l+1}, \\dots, p_r$$$ is exactly the given number $$$m$$$.The median of a sequence is the value of the element which is in the middle of the sequence after sorting it in non-decreasing order. If the length of the sequence is even, the left of two middle elements is used.For example, if $$$a=[4, 2, 7, 5]$$$ then its median is $$$4$$$ since after sorting the sequence, it will look like $$$[2, 4, 5, 7]$$$ and the left of two middle elements is equal to $$$4$$$. The median of $$$[7, 1, 2, 9, 6]$$$ equals $$$6$$$ since after sorting, the value $$$6$$$ will be in the middle of the sequence.Write a program to find the number of pairs of indices $$$(l, r)$$$ ($$$1 \\le l \\le r \\le n$$$) such that the value of the median of $$$p_l, p_{l+1}, \\dots, p_r$$$ is exactly the given number $$$m$$$.",
    "prob_desc_output_spec": "Print the required number.",
    "prob_desc_input_spec": "The first line contains integers $$$n$$$ and $$$m$$$ ($$$1 \\le n \\le 2\\cdot10^5$$$, $$$1 \\le m \\le n$$$) â€” the length of the given sequence and the required value of the median. The second line contains a permutation $$$p_1, p_2, \\dots, p_n$$$ ($$$1 \\le p_i \\le n$$$). Each integer between $$$1$$$ and $$$n$$$ occurs in $$$p$$$ exactly once.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1800,
    "file_name": "train_025.jsonl",
    "code_uid": "0424acc6d67a83a6b15006cd72c3b0df",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5 4\\n2 4 5 3 1\", \"5 5\\n1 2 3 4 5\", \"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\"]",
    "exec_outcome": "PASSED",
    "source_code": "ma = {0:1}\nn, m = [int(x) for x in input().split()]\narr  = [int(x) for x in input().split()]\ns, fla, ans=0,False,0\nfor v in arr:\n    if v == m: fla = True\n    elif v < m: s-= 1\n    elif v > m: s+= 1\n    if fla:\n        ans += ma.get(s, 0) + ma.get(s-1, 0)\n    else:\n            ma[s] = ma.get(s, 0) + 1\nprint(ans)",
    "prob_desc_created_at": "1531150500",
    "tags": [
        "sortings"
    ],
    "hidden_unit_tests": ""
}