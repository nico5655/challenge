{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"6\", \"-1\"]",
    "src_uid": "86e5a5beca82ac3f5d5fb44a9cb24885",
    "prob_desc_notes": null,
    "prob_desc_description": "There are two main kinds of events in the life of top-model: fashion shows and photo shoots. Participating in any of these events affects the rating of appropriate top-model. After each photo shoot model's rating increases by a and after each fashion show decreases by b (designers do too many experiments nowadays). Moreover, sometimes top-models participates in talk shows. After participating in talk show model becomes more popular and increasing of her rating after photo shoots become c and decreasing of her rating after fashion show becomes d.Izabella wants to participate in a talk show, but she wants to do it in such a way that her rating will never become negative. Help her to find a suitable moment for participating in the talk show. Let's assume that model's career begins in moment 0. At that moment Izabella's rating was equal to start. If talk show happens in moment t if will affect all events in model's life in interval of time [t..t + len) (including t and not including t + len), where len is duration of influence.Izabella wants to participate in a talk show, but she wants to do it in such a way that her rating will not become become negative before talk show or during period of influence of talk show. Help her to find a suitable moment for participating in the talk show. ",
    "prob_desc_output_spec": "Print one non-negative integer t — the moment of time in which talk show should happen to make Izabella's rating non-negative before talk show and during period of influence of talk show. If there are multiple answers print smallest of them. If there are no such moments, print  - 1.",
    "prob_desc_input_spec": "In first line there are 7 positive integers n, a, b, c, d, start, len (1 ≤ n ≤ 3·105, 0 ≤ start ≤ 109, 1 ≤ a, b, c, d, len ≤ 109), where n is a number of fashion shows and photo shoots, a, b, c and d are rating changes described above, start is an initial rating of model and len is a duration of influence of talk show. In next n lines descriptions of events are given. Each of those lines contains two integers ti and qi (1 ≤ ti ≤ 109, 0 ≤ q ≤ 1) — moment, in which event happens and type of this event. Type 0 corresponds to the fashion show and type 1 — to photo shoot.  Events are given in order of increasing ti, all ti are different.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2400,
    "file_name": "train_063.jsonl",
    "code_uid": "7c26f782801755f0c7494cb37cc9f7d8",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5 1 1 1 4 0 5\\n1 1\\n2 1\\n3 1\\n4 0\\n5 0\", \"1 1 2 1 2 1 2\\n1 0\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin\nfrom collections import deque\ndef main():\n    n, a, b, c, d, st, l = map(int, input().split())\n    q = deque()\n    po = q.popleft\n    pu = q.append\n    mq = deque()\n    mpop = mq.pop\n    mpo = mq.popleft\n    mpu = mq.append\n    sb = [0] * (n + 1)\n    mst = st\n    pu((0, 0, mst, st))\n    pp = 0\n    for i, line in enumerate(stdin):\n        line = line.split()\n        t = int(line[0], 10)\n        while q and q[0][0] + l <= t:\n            p, j, ma, sa = po()\n            if ma < 0:\n                print (-1)\n                return\n            while mq and mq[0][1] < p:\n                mpo()\n            sa += (-sb[j] + mq[0][0]) if mq else 0\n            if ma > sa:\n                ma = sa\n            if ma >= 0:\n                print (min(pp, p))\n                return\n            pp = p + 1\n        pu((t, i, mst, st))\n        if line[1] == '1':\n            st += a\n            x = sb[i] + c\n        else:\n            st -= b\n            x = sb[i] - d\n        if mst > st:\n            mst = st\n        while mq and mq[-1][0] > x:\n            mpop()\n        mpu((x, t))\n        sb[i+1] = x\n    pu((t + 1, n, mst, st))\n    while q:\n        p, j, ma, sa = po()\n        if ma < 0:\n            print (-1)\n            return\n        while mq and mq[0][1] < p:\n            mpo()\n        sa += (-sb[j] + mq[0][0]) if mq else 0\n        if ma > sa:\n            ma = sa\n        if ma >= 0:\n            print (min(pp, p))\n            return\n        pp = p + 1\n    print (-1)\nmain()",
    "prob_desc_created_at": "1509725100",
    "tags": [
        "data structures",
        "two pointers"
    ],
    "hidden_unit_tests": ""
}