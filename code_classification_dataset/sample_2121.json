{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"4\", \"0\"]",
    "src_uid": "eaa768dc1024df6449e89773234cc0c3",
    "prob_desc_notes": "NoteIn the first sample, one of the best permutations is $$$[1, 5, 5, 3, 10, 1, 1]$$$. On the positions from second to fifth the elements became larger, so the answer for this permutation is 4.In the second sample, there is no way to increase any element with a permutation, so the answer is 0.",
    "prob_desc_description": "You are given an array of integers. Vasya can permute (change order) its integers. He wants to do it so that as many as possible integers will become on a place where a smaller integer used to stand. Help Vasya find the maximal number of such integers.For instance, if we are given an array $$$[10, 20, 30, 40]$$$, we can permute it so that it becomes $$$[20, 40, 10, 30]$$$. Then on the first and the second positions the integers became larger ($$$20&gt;10$$$, $$$40&gt;20$$$) and did not on the third and the fourth, so for this permutation, the number that Vasya wants to maximize equals $$$2$$$. Read the note for the first example, there is one more demonstrative test case.Help Vasya to permute integers in such way that the number of positions in a new array, where integers are greater than in the original one, is maximal.",
    "prob_desc_output_spec": "Print a single integer — the maximal number of the array's elements which after a permutation will stand on the position where a smaller element stood in the initial array.",
    "prob_desc_input_spec": "The first line contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$) — the length of the array. The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) — the elements of the array.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_017.jsonl",
    "code_uid": "957e1a825015b4c3be9a8781b24bbba6",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"7\\n10 1 1 1 5 5 3\", \"5\\n1 1 1 1 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "from collections import *\n\nprint( int(input()) - max(Counter(map(int, input().split())).values()) )",
    "prob_desc_created_at": "1531492500",
    "tags": [
        "combinatorics",
        "two pointers",
        "math",
        "sortings",
        "data structures"
    ],
    "hidden_unit_tests": ""
}