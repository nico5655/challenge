{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\"]",
    "src_uid": "5db2ae5b2c91b29e4fe4a45ab864e3f1",
    "prob_desc_notes": "NoteThe subsegment $$$[3, 4]$$$ is the longest among all subsegments with maximum arithmetic mean.",
    "prob_desc_description": "You are given array $$$a_1, a_2, \\dots, a_n$$$. Find the subsegment $$$a_l, a_{l+1}, \\dots, a_r$$$ ($$$1 \\le l \\le r \\le n$$$) with maximum arithmetic mean $$$\\frac{1}{r - l + 1}\\sum\\limits_{i=l}^{r}{a_i}$$$ (in floating-point numbers, i.e. without any rounding).If there are many such subsegments find the longest one.",
    "prob_desc_output_spec": "Print the single integer — the length of the longest subsegment with maximum possible arithmetic mean.",
    "prob_desc_input_spec": "The first line contains single integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$) — length of the array $$$a$$$. The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$0 \\le a_i \\le 10^9$$$) — the array $$$a$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1100,
    "file_name": "train_013.jsonl",
    "code_uid": "99eb0d33ab3caad5421514caf206c448",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n6 1 6 6 0\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin\n    \nn=int(stdin.readline())\narr=list(map(int,stdin.readline().split()))\na=max(arr)\nans=[]\ncount=0\nfor i in range(n):\n    if arr[i]==a:\n        count+=1\n    else:\n        count=0\n    ans.append(count)\nprint(max(ans))\n",
    "prob_desc_created_at": "1550504400",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}