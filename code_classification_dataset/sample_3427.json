{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1.500000\", \"1.000000\"]",
    "src_uid": "25494129e5358072efc58906b5102652",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given an array a consisting of n positive integers. You pick two integer numbers l and r from 1 to n, inclusive (numbers are picked randomly, equiprobably and independently). If l &gt; r, then you swap values of l and r. You have to calculate the expected value of the number of unique elements in segment of the array from index l to index r, inclusive (1-indexed).",
    "prob_desc_output_spec": "Print one number — the expected number of unique elements in chosen segment.  Your answer will be considered correct if its absolute or relative error doesn't exceed 10 - 4 — formally, the answer is correct if , where x is jury's answer, and y is your answer.",
    "prob_desc_input_spec": "The first line contains one integer number n (1 ≤ n ≤ 106). The second line contains n integer numbers a1, a2, ... an (1 ≤ ai ≤ 106) — elements of the array.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1800,
    "file_name": "train_059.jsonl",
    "code_uid": "224b91dfd8c9a839405aa10757467402",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n1 2\", \"2\\n2 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=int(input())\na=list(map(int,input().split()))\n\nlastocc=[0]*1000006\nans=[0]*n\nans[0]=1\nlastocc[a[0]]=1\n\nfor i in range(1,n):\n    ans[i]=ans[i-1]+(i+1-lastocc[a[i]])\n    lastocc[a[i]]=i+1\n\nprint((2*sum(ans)-n)/(n*n))\n",
    "prob_desc_created_at": "1504623900",
    "tags": [
        "data structures",
        "two pointers",
        "probabilities",
        "math"
    ],
    "hidden_unit_tests": ""
}