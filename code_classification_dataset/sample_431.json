{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"12\\n1 0\\n2 0\\n0 1\\n1 1\\n2 1\\n3 1\\n0 2\\n1 2\\n2 2\\n3 2\\n1 3\\n2 3\"]",
    "src_uid": "d87c40ae942f3c378bde372f3320a09f",
    "prob_desc_notes": "NoteThe answer for the sample is pictured below:  ",
    "prob_desc_description": "Leo Jr. draws pictures in his notebook with checkered sheets (that is, each sheet has a regular square grid printed on it). We can assume that the sheets are infinitely large in any direction.To draw a picture, Leo Jr. colors some of the cells on a sheet gray. He considers the resulting picture beautiful if the following conditions are satisfied: The picture is connected, that is, it is possible to get from any gray cell to any other by following a chain of gray cells, with each pair of adjacent cells in the path being neighbours (that is, sharing a side). Each gray cell has an even number of gray neighbours. There are exactly $$$n$$$ gray cells with all gray neighbours. The number of other gray cells can be arbitrary (but reasonable, so that they can all be listed).Leo Jr. is now struggling to draw a beautiful picture with a particular choice of $$$n$$$. Help him, and provide any example of a beautiful picture.To output cell coordinates in your answer, assume that the sheet is provided with a Cartesian coordinate system such that one of the cells is chosen to be the origin $$$(0, 0)$$$, axes $$$0x$$$ and $$$0y$$$ are orthogonal and parallel to grid lines, and a unit step along any axis in any direction takes you to a neighbouring cell.",
    "prob_desc_output_spec": "In the first line, print a single integer $$$k$$$ — the number of gray cells in your picture. For technical reasons, $$$k$$$ should not exceed $$$5 \\cdot 10^5$$$. Each of the following $$$k$$$ lines should contain two integers — coordinates of a gray cell in your picture. All listed cells should be distinct, and the picture should satisdfy all the properties listed above. All coordinates should not exceed $$$10^9$$$ by absolute value. One can show that there exists an answer satisfying all requirements with a small enough $$$k$$$.",
    "prob_desc_input_spec": "The only line contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 500$$$) — the number of gray cells with all gray neighbours in a beautiful picture.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1500,
    "file_name": "train_002.jsonl",
    "code_uid": "4002a27c09eb81ffa73a6191431af998",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"4\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\ndp = [[0 for _ in range(n+2)] for _ in  range(n+2)]\nfor i in range(n+2):\n    dp[i][i] = 1\nfor i in range(n+1):\n    dp[i+1][i] = 1\nfor i in range(n+1):\n    dp[i][i+1] = 1\nk = 0\nansw = []\nfor i in range(n+2):\n    for j in range(n+2):\n        if dp[i][j] == 1:\n            k += 1\n            answ.append((i, j))\n\nprint(k)\nfor line in answ:\n    print(*line)\n",
    "prob_desc_created_at": "1592491500",
    "tags": [
        "constructive algorithms"
    ],
    "hidden_unit_tests": ""
}