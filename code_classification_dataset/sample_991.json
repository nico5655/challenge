{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2 1 3 1 1 2\", \"-1\"]",
    "src_uid": "1f4c057dff45f229b4dca49cd4e0438d",
    "prob_desc_notes": "NoteIn the first example, the first $$$n$$$ elements have sum $$$2+1+3=6$$$ while the last $$$n$$$ elements have sum $$$1+1+2=4$$$. The sums aren't equal.In the second example, there's no solution.",
    "prob_desc_description": "You're given an array $$$a$$$ of length $$$2n$$$. Is it possible to reorder it in such way so that the sum of the first $$$n$$$ elements isn't equal to the sum of the last $$$n$$$ elements?",
    "prob_desc_output_spec": "If there's no solution, print \"-1\" (without quotes). Otherwise, print a single line containing $$$2n$$$ space-separated integers. They must form a reordering of $$$a$$$. You are allowed to not change the order.",
    "prob_desc_input_spec": "The first line contains an integer $$$n$$$ ($$$1 \\le n \\le 1000$$$), where $$$2n$$$ is the number of elements in the array $$$a$$$. The second line contains $$$2n$$$ space-separated integers $$$a_1$$$, $$$a_2$$$, $$$\\ldots$$$, $$$a_{2n}$$$ ($$$1 \\le a_i \\le 10^6$$$) — the elements of the array $$$a$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_005.jsonl",
    "code_uid": "005cfe9cd78405b2aebe974c639f4caa",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n1 2 2 1 3 1\", \"1\\n1 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nif sum(l[0:n])!=sum(l[n:]):\n    print(*l)\nelse:\n    print(-1)",
    "prob_desc_created_at": "1559570700",
    "tags": [
        "constructive algorithms",
        "sortings",
        "greedy"
    ],
    "hidden_unit_tests": ""
}