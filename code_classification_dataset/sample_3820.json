{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"4\", \"10\", \"16\"]",
    "src_uid": "da2fb0ea61808905a133021223f6148d",
    "prob_desc_notes": "NoteExample $$$1$$$: you can subtract $$$a_1$$$ from $$$b_1$$$, and add $$$a_3$$$, $$$a_4$$$, and $$$a_5$$$ to $$$b_3$$$, $$$b_4$$$, and $$$b_5$$$ respectively. The final array will be [$$$-1$$$, $$$0$$$, $$$3$$$, $$$4$$$, $$$5$$$] after $$$4$$$ moves.Example $$$2$$$: you can reach [$$$-3$$$, $$$-2$$$, $$$-1$$$, $$$0$$$, $$$1$$$, $$$2$$$, $$$3$$$] in $$$10$$$ moves.",
    "prob_desc_description": "You are given an array $$$a$$$ consisting of $$$n$$$ positive integers, and an array $$$b$$$, with length $$$n$$$. Initially $$$b_i=0$$$ for each $$$1 \\leq i \\leq n$$$.In one move you can choose an integer $$$i$$$ ($$$1 \\leq i \\leq n$$$), and add $$$a_i$$$ to $$$b_i$$$ or subtract $$$a_i$$$ from $$$b_i$$$. What is the minimum number of moves needed to make $$$b$$$ increasing (that is, every element is strictly greater than every element before it)?",
    "prob_desc_output_spec": "Print a single integer, the minimum number of moves to make $$$b$$$ increasing.",
    "prob_desc_input_spec": "The first line contains a single integer $$$n$$$ ($$$2 \\leq n \\leq 5000$$$). The second line contains $$$n$$$ integers, $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) â€” the elements of the array $$$a$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_084.jsonl",
    "code_uid": "756614fc06ef48dd47bf82310eec8489",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n1 2 3 4 5\", \"7\\n1 2 1 2 1 2 1\", \"8\\n1 8 2 7 3 6 4 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\r\na = list(map(int, input().split()))\r\nMin = 1e18\r\nfor l in range(n - 1):\r\n    m = a[l]\r\n    answer = 1\r\n    for i in range(l-1, -1, -1):\r\n        answer += (m + a[i]) // a[i]\r\n        m = a[i] * ((m + a[i]) // a[i])\r\n   # if l + 1 < n:\r\n    m = 0\r\n    for i in range(l + 2, n):\r\n        answer += (m + a[i]) // a[i]\r\n        m = a[i] * ((m + a[i]) // a[i])\r\n    Min = min(answer, Min)\r\nprint(Min)",
    "prob_desc_created_at": "1650378900",
    "tags": [
        "brute force",
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}