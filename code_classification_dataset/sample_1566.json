{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\\n0\\n3\"]",
    "src_uid": "bfc2e7de37db4a0a74cdd55f2124424a",
    "prob_desc_notes": "NoteIn the first test case, if you select indices $$$3, 4$$$ at the $$$1$$$-st second and $$$4$$$ at the $$$2$$$-nd second, then $$$a$$$ will become $$$[1, 7, 7, 8]$$$. There are some other possible ways to make $$$a$$$ nondecreasing in $$$2$$$ seconds, but you can't do it faster.In the second test case, $$$a$$$ is already nondecreasing, so answer is $$$0$$$.In the third test case, if you do nothing at first $$$2$$$ seconds and select index $$$2$$$ at the $$$3$$$-rd second, $$$a$$$ will become $$$[0, 0]$$$.",
    "prob_desc_description": "You have an array $$$a$$$ of length $$$n$$$. For every positive integer $$$x$$$ you are going to perform the following operation during the $$$x$$$-th second:  Select some distinct indices $$$i_{1}, i_{2}, \\ldots, i_{k}$$$ which are between $$$1$$$ and $$$n$$$ inclusive, and add $$$2^{x-1}$$$ to each corresponding position of $$$a$$$. Formally, $$$a_{i_{j}} := a_{i_{j}} + 2^{x-1}$$$ for $$$j = 1, 2, \\ldots, k$$$. Note that you are allowed to not select any indices at all. You have to make $$$a$$$ nondecreasing as fast as possible. Find the smallest number $$$T$$$ such that you can make the array nondecreasing after at most $$$T$$$ seconds.Array $$$a$$$ is nondecreasing if and only if $$$a_{1} \\le a_{2} \\le \\ldots \\le a_{n}$$$.You have to answer $$$t$$$ independent test cases.",
    "prob_desc_output_spec": "For each test case, print the minimum number of seconds in which you can make $$$a$$$ nondecreasing.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^{4}$$$) — the number of test cases. The first line of each test case contains single integer $$$n$$$ ($$$1 \\le n \\le 10^{5}$$$) — the length of array $$$a$$$. It is guaranteed that the sum of values of $$$n$$$ over all test cases in the input does not exceed $$$10^{5}$$$. The second line of each test case contains $$$n$$$ integers $$$a_{1}, a_{2}, \\ldots, a_{n}$$$ ($$$-10^{9} \\le a_{i} \\le 10^{9}$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1500,
    "file_name": "train_010.jsonl",
    "code_uid": "199130a00997bbfa57cd8fe0621e5b2f",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n4\\n1 7 6 5\\n5\\n1 2 3 4 5\\n2\\n0 -4\"]",
    "exec_outcome": "PASSED",
    "source_code": "#logic#####maintain two pointer that will maintain the maximum difference between\n#two values and values that are not follwing the a<=b condition\ndef powerof2(x):\n    i=0\n    while 2**i<=x:\n        i+=1\n    return i\nfrom sys import stdout\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    maz,miz=l[0],l[0]\n    cnt_max=0\n    for i in range(1,n):\n        cnt=0\n        if l[i]<maz:\n            if l[i]<miz:\n                miz=l[i]\n        else:\n            cnt=powerof2(maz-miz)\n            maz,miz=l[i],l[i]\n            if cnt>cnt_max:\n                cnt_max=cnt\n        if i==n-1 and maz-miz>0:\n            cnt=powerof2(maz-miz)\n            if cnt>cnt_max:\n                cnt_max=cnt\n    stdout.write(str(cnt_max) + \"\\n\")\n            \n        \n",
    "prob_desc_created_at": "1586700300",
    "tags": [
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}