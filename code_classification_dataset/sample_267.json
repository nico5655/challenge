{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1\\n0\\n2\\n2\\n1\"]",
    "src_uid": "fcd55a1ca29e96c05a3b65b7a8103842",
    "prob_desc_notes": "NoteIn the first test case, you can just add $$$1$$$.In the second test case, you don't need to do anything.In the third test case, you can add $$$1$$$ two times.In the fourth test case, you can subtract $$$4$$$ and add $$$1$$$.In the fifth test case, you can just subtract $$$6$$$.",
    "prob_desc_description": "You are given two positive integers $$$a$$$ and $$$b$$$.In one move, you can change $$$a$$$ in the following way:  Choose any positive odd integer $$$x$$$ ($$$x &gt; 0$$$) and replace $$$a$$$ with $$$a+x$$$;  choose any positive even integer $$$y$$$ ($$$y &gt; 0$$$) and replace $$$a$$$ with $$$a-y$$$. You can perform as many such operations as you want. You can choose the same numbers $$$x$$$ and $$$y$$$ in different moves.Your task is to find the minimum number of moves required to obtain $$$b$$$ from $$$a$$$. It is guaranteed that you can always obtain $$$b$$$ from $$$a$$$.You have to answer $$$t$$$ independent test cases.",
    "prob_desc_output_spec": "For each test case, print the answer — the minimum number of moves required to obtain $$$b$$$ from $$$a$$$ if you can perform any number of moves described in the problem statement. It is guaranteed that you can always obtain $$$b$$$ from $$$a$$$.",
    "prob_desc_input_spec": "The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Then $$$t$$$ test cases follow. Each test case is given as two space-separated integers $$$a$$$ and $$$b$$$ ($$$1 \\le a, b \\le 10^9$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_001.jsonl",
    "code_uid": "b30489b19004696f28726ff02b504522",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "\nif __name__ == \"__main__\":\n   n = int(input())\n   k = 0\n   s = []\n   for i in  range(n):\n      s.append(list(map(int,input().split())))\n   while k<n:\n      count = 0\n      if s[k][0]==s[k][1]:\n         pass\n      elif s[k][0]>s[k][1]:\n         diff = s[k][0]-s[k][1]\n         count+=1\n         if diff % 2 != 0:\n            count+=1\n      elif s[k][0]<s[k][1]:\n         diff = s[k][1]-s[k][0]\n         count+=1\n         if diff % 2 != 1:\n            count+=1\n\n      print(count)\n      count = 0\n      k+=1\n",
    "prob_desc_created_at": "1582554900",
    "tags": [
        "implementation",
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}