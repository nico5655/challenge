{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2 0 1\", \"3 2 0 0 0\", \"1 1 2 0 1 1\"]",
    "src_uid": "82176739a1dd4fe85ec059058a00fbb9",
    "prob_desc_notes": "NoteThe first example is described in the statement.In the second example, during the first step Vasya will move the books $$$[3, 1, 4]$$$. After that only books $$$2$$$ and $$$5$$$ remain in the stack ($$$2$$$ is above $$$5$$$). During the second step Vasya will take the books $$$2$$$ and $$$5$$$. After that the stack becomes empty, so during next steps Vasya won't move any books.",
    "prob_desc_description": "Vasya has got $$$n$$$ books, numbered from $$$1$$$ to $$$n$$$, arranged in a stack. The topmost book has number $$$a_1$$$, the next one — $$$a_2$$$, and so on. The book at the bottom of the stack has number $$$a_n$$$. All numbers are distinct.Vasya wants to move all the books to his backpack in $$$n$$$ steps. During $$$i$$$-th step he wants to move the book number $$$b_i$$$ into his backpack. If the book with number $$$b_i$$$ is in the stack, he takes this book and all the books above the book $$$b_i$$$, and puts them into the backpack; otherwise he does nothing and begins the next step. For example, if books are arranged in the order $$$[1, 2, 3]$$$ (book $$$1$$$ is the topmost), and Vasya moves the books in the order $$$[2, 1, 3]$$$, then during the first step he will move two books ($$$1$$$ and $$$2$$$), during the second step he will do nothing (since book $$$1$$$ is already in the backpack), and during the third step — one book (the book number $$$3$$$). Note that $$$b_1, b_2, \\dots, b_n$$$ are distinct.Help Vasya! Tell him the number of books he will put into his backpack during each step.",
    "prob_desc_output_spec": "Print $$$n$$$ integers. The $$$i$$$-th of them should be equal to the number of books Vasya moves to his backpack during the $$$i$$$-th step.",
    "prob_desc_input_spec": "The first line contains one integer $$$n~(1 \\le n \\le 2 \\cdot 10^5)$$$ — the number of books in the stack. The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n~(1 \\le a_i \\le n)$$$ denoting the stack of books. The third line contains $$$n$$$ integers $$$b_1, b_2, \\dots, b_n~(1 \\le b_i \\le n)$$$ denoting the steps Vasya is going to perform. All numbers $$$a_1 \\dots a_n$$$ are distinct, the same goes for $$$b_1 \\dots b_n$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_006.jsonl",
    "code_uid": "fee23f1c01060fc218f4d9b159277683",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n1 2 3\\n2 1 3\", \"5\\n3 1 4 2 5\\n4 5 1 3 2\", \"6\\n6 5 4 3 2 1\\n6 5 3 4 2 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = raw_input()\ns1_list = raw_input().split(' ')\ns2_list = raw_input().split(' ')\nhas_dict = {}\nres = []\nindex = 0\nfor number in s2_list:\n    if has_dict.has_key(number):\n        res.append(str(0))\n    else:\n        cnt = 1\n        while (index < len(s1_list) and s1_list[index] != number):\n            tmp_number = s1_list[index]\n            has_dict[tmp_number] = True\n            index += 1\n            cnt += 1\n        res.append(str(cnt))\n        index += 1\n\nprint ' '.join(res)",
    "prob_desc_created_at": "1540478100",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}