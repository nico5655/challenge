{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"? 3 5 6\\n? 32 24 37\\n! 5\"]",
    "src_uid": "c7f31e0c57cf15f71c401d826c3ee0ef",
    "prob_desc_notes": "NoteThe example of interaction is not correct â€” you should sumbit exactly $$$100$$$ integers in each query. Everything else is correct.Hacks are forbidden in this problem.",
    "prob_desc_description": "This is an interactive problem. Remember to flush your output while communicating with the testing program. You may use fflush(stdout) in C++, system.out.flush() in Java, stdout.flush() in Python or flush(output) in Pascal to flush the output. If you use some other programming language, consult its documentation. You may also refer to the guide on interactive problems: https://codeforces.com/blog/entry/45307.The jury picked an integer $$$x$$$ not less than $$$0$$$ and not greater than $$$2^{14} - 1$$$. You have to guess this integer.To do so, you may ask no more than $$$2$$$ queries. Each query should consist of $$$100$$$ integer numbers $$$a_1$$$, $$$a_2$$$, ..., $$$a_{100}$$$ (each integer should be not less than $$$0$$$ and not greater than $$$2^{14} - 1$$$). In response to your query, the jury will pick one integer $$$i$$$ ($$$1 \\le i \\le 100$$$) and tell you the value of $$$a_i \\oplus x$$$ (the bitwise XOR of $$$a_i$$$ and $$$x$$$). There is an additional constraint on the queries: all $$$200$$$ integers you use in the queries should be distinct.It is guaranteed that the value of $$$x$$$ is fixed beforehand in each test, but the choice of $$$i$$$ in every query may depend on the integers you send.",
    "prob_desc_output_spec": "To give the answer, your program should print one line $$$!$$$ $$$x$$$ with a line break in the end. After that, it should flush the output and terminate gracefully.",
    "prob_desc_input_spec": null,
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_030.jsonl",
    "code_uid": "e5909c1623b5df2aa9435eca9539946b",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"0\\n32\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\nimport math\nimport bisect\nimport atexit\nimport io\nimport heapq\nfrom collections import defaultdict, Counter\nMOD = int(1e9+7)\n\n\n\n# n = map(int, raw_input().split())\n# input = map(int, raw_input().split())\n\n\n\ndef main():\n    print '?',\n    for i in range(1, 101):\n        print i*(2**7),\n    n1 = map(int, raw_input().split())[0]\n    print '\\n'\n    # sys.stdout.flush()\n    print '?',\n    for i in range(1, 101):\n        print i,\n    print '\\n'\n    n2 = map(int, raw_input().split())[0]\n    # n1, n2 = 128^16383, 1^16383\n    sys.stdout.flush()\n\n    # print n1,n2\n    # print bin(n1), bin(n2)\n\n    n1 = '0'*20 + bin(n1)[2:]\n    if bin(n2)[2:] <=7:\n        n2 = '000000000000000000000'\n    else:\n        n2 = bin(n2)[2:]\n    ans = n2[:-7] + n1[-7:]\n    ans = int(ans, 2)\n    print '!', ans\n\nmain()\n",
    "prob_desc_created_at": "1566484500",
    "tags": [
        "interactive",
        "bitmasks",
        "math"
    ],
    "hidden_unit_tests": ""
}