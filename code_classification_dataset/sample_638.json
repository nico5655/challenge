{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1\\n0\\n0\"]",
    "src_uid": "0ba97bcfb5f539c848f2cd097b34ff33",
    "prob_desc_notes": "NoteIn the first test case we can delete any character in string &lt;&gt;.In the second test case we don't need to delete any characters. The string &gt; &lt; &lt; is good, because we can perform the following sequence of operations: &gt; &lt; &lt; $$$\\rightarrow$$$ &lt; &lt; $$$\\rightarrow$$$ &lt;.",
    "prob_desc_description": "You have a string $$$s$$$ of length $$$n$$$ consisting of only characters &gt; and &lt;. You may do some operations with this string, for each operation you have to choose some character that still remains in the string. If you choose a character &gt;, the character that comes right after it is deleted (if the character you chose was the last one, nothing happens). If you choose a character &lt;, the character that comes right before it is deleted (if the character you chose was the first one, nothing happens).For example, if we choose character &gt; in string &gt; &gt; &lt; &gt;, the string will become to &gt; &gt; &gt;. And if we choose character &lt; in string &gt; &lt;, the string will become to &lt;.The string is good if there is a sequence of operations such that after performing it only one character will remain in the string. For example, the strings &gt;, &gt; &gt; are good. Before applying the operations, you may remove any number of characters from the given string (possibly none, possibly up to $$$n - 1$$$, but not the whole string). You need to calculate the minimum number of characters to be deleted from string $$$s$$$ so that it becomes good.",
    "prob_desc_output_spec": "For each test case print one line. For $$$i$$$-th test case print the minimum number of characters to be deleted from string $$$s$$$ so that it becomes good.",
    "prob_desc_input_spec": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) – the number of test cases. Each test case is represented by two lines. The first line of $$$i$$$-th test case contains one integer $$$n$$$ ($$$1 \\le n \\le 100$$$) – the length of string $$$s$$$. The second line of $$$i$$$-th test case contains string $$$s$$$, consisting of only characters &gt; and &lt;.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1200,
    "file_name": "train_003.jsonl",
    "code_uid": "1aeb8a70844e40040a2694416b79a313",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n2\\n&lt;&gt;\\n3\\n&gt;&lt;&lt;\\n1\\n&gt;\"]",
    "exec_outcome": "PASSED",
    "source_code": "for _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    ans = 0\n    i = 0\n    while(i < n and s[i] == \"<\"):\n        ans += 1\n        i += 1\n    ans1 = 0\n    i = n - 1\n    while(i > -1 and s[i] == \">\"):\n        ans1 += 1\n        i -= 1\n    print(min(ans, ans1))\n",
    "prob_desc_created_at": "1553267100",
    "tags": [
        "implementation",
        "strings"
    ],
    "hidden_unit_tests": ""
}