{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"0\\n12\\n5\\n0\\n16\", \"3\\n0\\n3\"]",
    "src_uid": "859d66fc2c204a8c002012b1fb206645",
    "prob_desc_notes": null,
    "prob_desc_description": "Shaass has decided to hunt some birds. There are n horizontal electricity wires aligned parallel to each other. Wires are numbered 1 to n from top to bottom. On each wire there are some oskols sitting next to each other. Oskol is the name of a delicious kind of birds in Shaass's territory. Supposed there are ai oskols sitting on the i-th wire.  Sometimes Shaass shots one of the birds and the bird dies (suppose that this bird sat at the i-th wire). Consequently all the birds on the i-th wire to the left of the dead bird get scared and jump up on the wire number i - 1, if there exists no upper wire they fly away. Also all the birds to the right of the dead bird jump down on wire number i + 1, if there exists no such wire they fly away. Shaass has shot m birds. You're given the initial number of birds on each wire, tell him how many birds are sitting on each wire after the shots.",
    "prob_desc_output_spec": "On the i-th line of the output print the number of birds on the i-th wire.",
    "prob_desc_input_spec": "The first line of the input contains an integer n, (1 ≤ n ≤ 100). The next line contains a list of space-separated integers a1, a2, ..., an, (0 ≤ ai ≤ 100).  The third line contains an integer m, (0 ≤ m ≤ 100). Each of the next m lines contains two integers xi and yi. The integers mean that for the i-th time Shaass shoot the yi-th (from left) bird on the xi-th wire, (1 ≤ xi ≤ n, 1 ≤ yi). It's guaranteed there will be at least yi birds on the xi-th wire at that moment.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_000.jsonl",
    "code_uid": "ee56c03ada685ee50fc42b7e71105e4a",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n10 10 10 10 10\\n5\\n2 5\\n3 13\\n2 12\\n1 13\\n4 6\", \"3\\n2 4 1\\n1\\n2 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = input()\na = map(int, raw_input().split())\nm = input()\n\ndef shoot(m):\n    x = m[0]\n    y = m[1]\n    x -= 1\n\n    if x < (n - 1):\n        a[x + 1] += a[x] - y\n    if x > 0:\n        a[x - 1] += y - 1\n    a[x] = 0\n\n\n\nmap(shoot, [map(int, raw_input().split()) for i in range(m)])\nfor i in a:\n    print i",
    "prob_desc_created_at": "1365348600",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}