{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"8\", \"7\"]",
    "src_uid": "9a56288d8bd4e4e7ef3329e102f745a5",
    "prob_desc_notes": null,
    "prob_desc_description": "Once Bob got to a sale of old TV sets. There were n TV sets at that sale. TV set with index i costs ai bellars. Some TV sets have a negative price — their owners are ready to pay Bob if he buys their useless apparatus. Bob can «buy» any TV sets he wants. Though he's very strong, Bob can carry at most m TV sets, and he has no desire to go to the sale for the second time. Please, help Bob find out the maximum sum of money that he can earn.",
    "prob_desc_output_spec": "Output the only number — the maximum sum of money that Bob can earn, given that he can carry at most m TV sets.",
    "prob_desc_input_spec": "The first line contains two space-separated integers n and m (1 ≤ m ≤ n ≤ 100) — amount of TV sets at the sale, and amount of TV sets that Bob can carry. The following line contains n space-separated integers ai ( - 1000 ≤ ai ≤ 1000) — prices of the TV sets. ",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_001.jsonl",
    "code_uid": "973b3a74c7cea18957ca74199b9082bc",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5 3\\n-6 0 35 -2 4\", \"4 2\\n7 0 0 -7\"]",
    "exec_outcome": "PASSED",
    "source_code": "k=raw_input()\nn,m=map(int,k.split(\" \"))\nprice=raw_input()\narr=[int(x) for x in price.split(\" \")]\nearned=0\ncarry=0\nwhile carry<m:\n    if min(arr)<0:\n        earned-=min(arr)\n        arr[arr.index(min(arr))]=0\n        carry+=1\n    else:\n        break\nprint earned\n",
    "prob_desc_created_at": "1286802000",
    "tags": [
        "sortings",
        "greedy"
    ],
    "hidden_unit_tests": ""
}