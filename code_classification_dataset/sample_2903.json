{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1.3333333333\"]",
    "src_uid": "b64f1667a8fd29d1de81414259a626c9",
    "prob_desc_notes": "NoteIn the first sample the people will come in the following orders:   (1, 2, 3) — there will be two people in the restaurant;  (1, 3, 2) — there will be one person in the restaurant;  (2, 1, 3) — there will be two people in the restaurant;  (2, 3, 1) — there will be one person in the restaurant;  (3, 1, 2) — there will be one person in the restaurant;  (3, 2, 1) — there will be one person in the restaurant. In total we get (2 + 1 + 2 + 1 + 1 + 1) / 6 = 8 / 6 = 1.(3).",
    "prob_desc_description": "Maxim has opened his own restaurant! The restaurant has got a huge table, the table's length is p meters.Maxim has got a dinner party tonight, n guests will come to him. Let's index the guests of Maxim's restaurant from 1 to n. Maxim knows the sizes of all guests that are going to come to him. The i-th guest's size (ai) represents the number of meters the guest is going to take up if he sits at the restaurant table.Long before the dinner, the guests line up in a queue in front of the restaurant in some order. Then Maxim lets the guests in, one by one. Maxim stops letting the guests in when there is no place at the restaurant table for another guest in the queue. There is no place at the restaurant table for another guest in the queue, if the sum of sizes of all guests in the restaurant plus the size of this guest from the queue is larger than p. In this case, not to offend the guest who has no place at the table, Maxim doesn't let any other guest in the restaurant, even if one of the following guests in the queue would have fit in at the table.Maxim is now wondering, what is the average number of visitors who have come to the restaurant for all possible n! orders of guests in the queue. Help Maxim, calculate this number.",
    "prob_desc_output_spec": "In a single line print a real number — the answer to the problem. The answer will be considered correct, if the absolute or relative error doesn't exceed 10 - 4.",
    "prob_desc_input_spec": "The first line contains integer n (1 ≤ n ≤ 50) — the number of guests in the restaurant. The next line contains integers a1, a2, ..., an (1 ≤ ai ≤ 50) — the guests' sizes in meters. The third line contains integer p (1 ≤ p ≤ 50) — the table's length in meters.  The numbers in the lines are separated by single spaces.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_035.jsonl",
    "code_uid": "15a40d18e6e386f66a4b09b281c632a7",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n1 2 3\\n3\"]",
    "exec_outcome": "PASSED",
    "source_code": "from math import *\n\nn = input()\na = map(int, raw_input().split())\np = input()\nf = [factorial(i) for i in range(n + 1)]\nif sum(a) <= p:\n\tprint n\nelse:\n\tr = 0\n\tfor i in range(n):\n\t\td = [[0] * (p + 1) for _ in range(n + 1)]\n\t\td[0][0] = 1.\n\t\tfor j in range(n):\n\t\t\tif i != j:\n\t\t\t\tfor c in range(j, -1, -1):\n\t\t\t\t\tfor v in range(p - a[j] + 1):\n\t\t\t\t\t\td[c + 1][v + a[j]] += d[c][v]\n\t\tr += sum(d[c][v] * f[c] * f[n - 1 - c] * c for c in range(n) for v in range(max(0, p - a[i] + 1), p + 1))\n\tprint r / f[n]",
    "prob_desc_created_at": "1358091000",
    "tags": [
        "dp",
        "combinatorics"
    ],
    "hidden_unit_tests": ""
}