{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"3\\n1\\n5\\n77\"]",
    "src_uid": "8b50a0eb2e1c425455b132683d3e6047",
    "prob_desc_notes": "NoteConsider the first test case of the example: the first floor contains apartments with numbers $$$1$$$ and $$$2$$$, the second one contains apartments with numbers $$$3$$$, $$$4$$$ and $$$5$$$, the third one contains apartments with numbers $$$6$$$, $$$7$$$ and $$$8$$$. Therefore, Petya lives on the third floor.In the second test case of the example, Petya lives in the apartment $$$1$$$ which is on the first floor.",
    "prob_desc_description": "Vasya goes to visit his classmate Petya. Vasya knows that Petya's apartment number is $$$n$$$. There is only one entrance in Petya's house and the distribution of apartments is the following: the first floor contains $$$2$$$ apartments, every other floor contains $$$x$$$ apartments each. Apartments are numbered starting from one, from the first floor. I.e. apartments on the first floor have numbers $$$1$$$ and $$$2$$$, apartments on the second floor have numbers from $$$3$$$ to $$$(x + 2)$$$, apartments on the third floor have numbers from $$$(x + 3)$$$ to $$$(2 \\cdot x + 2)$$$, and so on.Your task is to find the number of floor on which Petya lives. Assume that the house is always high enough to fit at least $$$n$$$ apartments.You have to answer $$$t$$$ independent test cases.",
    "prob_desc_output_spec": "For each test case, print the answer: the number of floor on which Petya lives.",
    "prob_desc_input_spec": "The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. Then $$$t$$$ test cases follow. The only line of the test case contains two integers $$$n$$$ and $$$x$$$ ($$$1 \\le n, x \\le 1000$$$) — the number of Petya's apartment and the number of apartments on each floor of the house except the first one (there are two apartments on the first floor).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_004.jsonl",
    "code_uid": "5fdcbc4ae35caab25b1b53bb94caef45",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n7 3\\n1 5\\n22 5\\n987 13\"]",
    "exec_outcome": "PASSED",
    "source_code": "for _ in range(int(input())):\n    n,x=map(int,raw_input().split())\n\n    def solve(n,x):\n        if n==1 or n==2:\n            return 1\n        ans1=((n-3)/x)+2\n        ans2=((n-2)/x)+1\n        return max(ans1,ans2)\n    print(solve(n,x))",
    "prob_desc_created_at": "1601280300",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}