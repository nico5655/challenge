{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2 2\", \"1 3\"]",
    "src_uid": "d3b9ffa76436b957ca959cf9204f9873",
    "prob_desc_notes": "NoteIn the first sample the sorted sequence for the given array looks as: (1, 1), (1, 2), (2, 1), (2, 2). The 4-th of them is pair (2, 2).The sorted sequence for the array from the second sample is given in the statement. The 2-nd pair there is (1, 3).",
    "prob_desc_description": "You've got another problem dealing with arrays. Let's consider an arbitrary sequence containing n (not necessarily different) integers a1, a2, ..., an. We are interested in all possible pairs of numbers (ai, aj), (1 ≤ i, j ≤ n). In other words, let's consider all n2 pairs of numbers, picked from the given array.For example, in sequence a = {3, 1, 5} are 9 pairs of numbers: (3, 3), (3, 1), (3, 5), (1, 3), (1, 1), (1, 5), (5, 3), (5, 1), (5, 5).Let's sort all resulting pairs lexicographically by non-decreasing. Let us remind you that pair (p1, q1) is lexicographically less than pair (p2, q2) only if either p1 &lt; p2, or p1 = p2 and q1 &lt; q2.Then the sequence, mentioned above, will be sorted like that: (1, 1), (1, 3), (1, 5), (3, 1), (3, 3), (3, 5), (5, 1), (5, 3), (5, 5)Let's number all the pair in the sorted list from 1 to n2. Your task is formulated like this: you should find the k-th pair in the ordered list of all possible pairs of the array you've been given.",
    "prob_desc_output_spec": "In the single line print two numbers — the sought k-th pair.",
    "prob_desc_input_spec": "The first line contains two integers n and k (1 ≤ n ≤ 105, 1 ≤ k ≤ n2). The second line contains the array containing n integers a1, a2, ..., an ( - 109 ≤ ai ≤ 109). The numbers in the array can coincide. All numbers are separated with spaces. Please do not use the %lld specificator to read or write 64-bit integers in С++. It is preferred to use cin, cout, streams or the %I64d specificator instead.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_010.jsonl",
    "code_uid": "6df805207ae15aed30874055fb0fdf91",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 4\\n2 1\", \"3 2\\n3 1 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, k = map(int, input().split())\na = sorted(map(int, input().split()))\nx = a[(k - 1) // n]\np, c = a.index(x), a.count(x)\ny = ((k - 1) - p * n) // c\nprint(x, a[y])",
    "prob_desc_created_at": "1331046000",
    "tags": [
        "implementation",
        "sortings",
        "math"
    ],
    "hidden_unit_tests": ""
}