{
    "prob_desc_time_limit": "6 seconds",
    "prob_desc_sample_outputs": "[\"1 2\\n2 3\\n5 2\", \"\"]",
    "src_uid": "3cb19ef77e9cb919a2f0a1d687b2845d",
    "prob_desc_notes": "Note Consider all 10 steps for the first test in detail: $$$[1, 2, 3, 4, 5]$$$ — on the first operation, $$$A$$$ and $$$B$$$ are $$$1$$$ and $$$2$$$, respectively.So, $$$2$$$ we write to the beginning of the deque, and $$$1$$$ — to the end.We get the following status of the deque: $$$[2, 3, 4, 5, 1]$$$. $$$[2, 3, 4, 5, 1] \\Rightarrow A = 2, B = 3$$$. $$$[3, 4, 5, 1, 2]$$$ $$$[4, 5, 1, 2, 3]$$$ $$$[5, 1, 2, 3, 4]$$$ $$$[5, 2, 3, 4, 1]$$$ $$$[5, 3, 4, 1, 2]$$$ $$$[5, 4, 1, 2, 3]$$$ $$$[5, 1, 2, 3, 4]$$$ $$$[5, 2, 3, 4, 1] \\Rightarrow A = 5, B = 2$$$. ",
    "prob_desc_description": "Recently, on the course of algorithms and data structures, Valeriy learned how to use a deque. He built a deque filled with $$$n$$$ elements. The $$$i$$$-th element is $$$a_i$$$ ($$$i$$$ = $$$1, 2, \\ldots, n$$$). He gradually takes the first two leftmost elements from the deque (let's call them $$$A$$$ and $$$B$$$, respectively), and then does the following: if $$$A &gt; B$$$, he writes $$$A$$$ to the beginning and writes $$$B$$$ to the end of the deque, otherwise, he writes to the beginning $$$B$$$, and $$$A$$$ writes to the end of the deque. We call this sequence of actions an operation.For example, if deque was $$$[2, 3, 4, 5, 1]$$$, on the operation he will write $$$B=3$$$ to the beginning and $$$A=2$$$ to the end, so he will get $$$[3, 4, 5, 1, 2]$$$.The teacher of the course, seeing Valeriy, who was passionate about his work, approached him and gave him $$$q$$$ queries. Each query consists of the singular number $$$m_j$$$ $$$(j = 1, 2, \\ldots, q)$$$. It is required for each query to answer which two elements he will pull out on the $$$m_j$$$-th operation.Note that the queries are independent and for each query the numbers $$$A$$$ and $$$B$$$ should be printed in the order in which they will be pulled out of the deque.Deque is a data structure representing a list of elements where insertion of new elements or deletion of existing elements can be made from both sides.",
    "prob_desc_output_spec": "For each teacher's query, output two numbers $$$A$$$ and $$$B$$$ — the numbers that Valeriy pulls out of the deque for the $$$m_j$$$-th operation.",
    "prob_desc_input_spec": "The first line contains two integers $$$n$$$ and $$$q$$$ ($$$2 \\leq n \\leq 10^5$$$, $$$0 \\leq q \\leq 3 \\cdot 10^5$$$) — the number of elements in the deque and the number of queries. The second line contains $$$n$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$, where $$$a_i$$$ $$$(0 \\leq a_i \\leq 10^9)$$$ — the deque element in $$$i$$$-th position. The next $$$q$$$ lines contain one number each, meaning $$$m_j$$$ ($$$1 \\leq m_j \\leq 10^{18}$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1500,
    "file_name": "train_019.jsonl",
    "code_uid": "24fbf930265ad2a124b2f2bbe14aecdc",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5 3\\n1 2 3 4 5\\n1\\n2\\n10\", \"2 0\\n0 0\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, q = list(map(int, input().split()))\n\narr = list(map(int, input().split()))\n\nmaxi = max(arr[0], arr[1])\nreste = [min(arr[0], arr[1])]\n\nhist_maxi = [maxi]\nfor i in range(2, n):\n    if arr[i] > maxi:\n        reste.append(maxi)\n        maxi = arr[i]\n    else:\n        reste.append(arr[i])\n    hist_maxi.append(maxi)\n\n\n\nfor qi in range(q):\n    r = int(input()) - 1\n    if r == 0:\n        print(arr[0], arr[1])\n        continue\n    \n    if r > n-2:\n        print(maxi, reste[r%len(reste)])\n    else:\n        if hist_maxi[r-1] == hist_maxi[r]:\n            print(hist_maxi[r], reste[r])\n        else:\n            print(reste[r], hist_maxi[r])\n            \n    ",
    "prob_desc_created_at": "1561136700",
    "tags": [
        "data structures",
        "implementation"
    ],
    "hidden_unit_tests": ""
}