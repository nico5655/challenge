{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"3\", \"2\"]",
    "src_uid": "dd84c2c3c429501208649ffaf5d91cee",
    "prob_desc_notes": null,
    "prob_desc_description": "Bob is preparing to pass IQ test. The most frequent task in this test is to find out which one of the given n numbers differs from the others. Bob observed that one number usually differs from the others in evenness. Help Bob — to check his answers, he needs a program that among the given n numbers finds one that is different in evenness.",
    "prob_desc_output_spec": "Output index of number that differs from the others in evenness. Numbers are numbered from 1 in the input order.",
    "prob_desc_input_spec": "The first line contains integer n (3 ≤ n ≤ 100) — amount of numbers in the task. The second line contains n space-separated natural numbers, not exceeding 100. It is guaranteed, that exactly one of these numbers differs from the others in evenness.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_001.jsonl",
    "code_uid": "263ca60942935c0796684a6dc15de982",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n2 4 7 8 10\", \"4\\n1 2 1 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\nN = [int(x) for x in input().split()]\neven = 0\nodd = 0\nlastEven = 0\nlastOdd = 0\nfor i in range(n):\n    if N[i] % 2 == 0:\n        even += 1\n        lastEven = i+1\n    else:\n        odd += 1\n        lastOdd = i+1\nif even == 1:\n    print(lastEven)\nelse:\n    print(lastOdd)\n",
    "prob_desc_created_at": "1280761200",
    "tags": [
        "brute force"
    ],
    "hidden_unit_tests": ""
}