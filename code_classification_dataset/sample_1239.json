{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"10\\n1\\n9\\n45\\n12\\n81\"]",
    "src_uid": "99a5b21a5984d5248e82f843f82e9420",
    "prob_desc_notes": "NoteIn the first test case of the example beautiful years are $$$1$$$, $$$2$$$, $$$3$$$, $$$4$$$, $$$5$$$, $$$6$$$, $$$7$$$, $$$8$$$, $$$9$$$ and $$$11$$$.",
    "prob_desc_description": "Hooray! Polycarp turned $$$n$$$ years old! The Technocup Team sincerely congratulates Polycarp!Polycarp celebrated all of his $$$n$$$ birthdays: from the $$$1$$$-th to the $$$n$$$-th. At the moment, he is wondering: how many times he turned beautiful number of years?According to Polycarp, a positive integer is beautiful if it consists of only one digit repeated one or more times. For example, the following numbers are beautiful: $$$1$$$, $$$77$$$, $$$777$$$, $$$44$$$ and $$$999999$$$. The following numbers are not beautiful: $$$12$$$, $$$11110$$$, $$$6969$$$ and $$$987654321$$$.Of course, Polycarpus uses the decimal numeral system (i.e. radix is 10).Help Polycarpus to find the number of numbers from $$$1$$$ to $$$n$$$ (inclusive) that are beautiful.",
    "prob_desc_output_spec": "Print $$$t$$$ integers — the answers to the given test cases in the order they are written in the test. Each answer is an integer: the number of beautiful years between $$$1$$$ and $$$n$$$, inclusive.",
    "prob_desc_input_spec": "The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases in the input. Then $$$t$$$ test cases follow. Each test case consists of one line, which contains a positive integer $$$n$$$ ($$$1 \\le n \\le 10^9$$$) — how many years Polycarp has turned.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_007.jsonl",
    "code_uid": "d0b3d9cd2b706eea0872d7092a07ab5f",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n18\\n1\\n9\\n100500\\n33\\n1000000000\"]",
    "exec_outcome": "PASSED",
    "source_code": "t = int(input())\n\nfor i in range(t):\n    n = int(input())\n\n    if n < 10:\n        print(n // 1)\n    elif n > 9 and n < 100:\n        print(9 + n // 11)\n    elif n > 99 and n < 1000:\n        print(18 + n // 111)\n    elif n > 999 and n < 10000:\n        print(27 + n // 1111)\n    elif n > 9999 and n < 100000:\n        print(36 + n // 11111)\n    elif n > 99999 and n < 1000000:\n        print(45 + n // 111111)\n    elif n > 999999 and n < 10000000:\n        print(54 + n // 1111111)\n    elif n > 9999999 and n < 100000000:\n        print(63 + n // 11111111)\n    elif n > 99999999 and n < 1000000000:\n        print(72 + n // 111111111)\n    else:\n        print(81)\n",
    "prob_desc_created_at": "1576321500",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}