{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1\", \"3\", \"1\"]",
    "src_uid": "71be4cccd3b8c494ad7cc2d8a00cf5ed",
    "prob_desc_notes": "NoteIn the first example, the first bus of the first route arrives at time $$$6$$$, and the first bus of the second route arrives at time $$$9$$$, so the first route is the answer.In the second example, a bus of the third route arrives at time $$$5$$$, so it is the answer.In the third example, buses of the first route come at times $$$2$$$, $$$4$$$, $$$6$$$, $$$8$$$, and so fourth, buses of the second route come at times $$$2$$$, $$$5$$$, $$$8$$$, and so fourth and buses of the third route come at times $$$2$$$, $$$6$$$, $$$10$$$, and so on, so $$$1$$$ and $$$2$$$ are both acceptable answers while $$$3$$$ is not.",
    "prob_desc_description": "It is raining heavily. But this is the first day for Serval, who just became 3 years old, to go to the kindergarten. Unfortunately, he lives far from kindergarten, and his father is too busy to drive him there. The only choice for this poor little boy is to wait for a bus on this rainy day. Under such circumstances, the poor boy will use the first bus he sees no matter where it goes. If several buses come at the same time, he will choose one randomly.Serval will go to the bus station at time $$$t$$$, and there are $$$n$$$ bus routes which stop at this station. For the $$$i$$$-th bus route, the first bus arrives at time $$$s_i$$$ minutes, and each bus of this route comes $$$d_i$$$ minutes later than the previous one.As Serval's best friend, you wonder which bus route will he get on. If several buses arrive at the same time, you can print any of them.",
    "prob_desc_output_spec": "Print one number — what bus route Serval will use. If there are several possible answers, you can print any of them.",
    "prob_desc_input_spec": "The first line contains two space-separated integers $$$n$$$ and $$$t$$$ ($$$1\\leq n\\leq 100$$$, $$$1\\leq t\\leq 10^5$$$) — the number of bus routes and the time Serval goes to the station.  Each of the next $$$n$$$ lines contains two space-separated integers $$$s_i$$$ and $$$d_i$$$ ($$$1\\leq s_i,d_i\\leq 10^5$$$) — the time when the first bus of this route arrives and the interval between two buses of this route.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_001.jsonl",
    "code_uid": "dca683145e7ebb13458fa3e446bc2c5b",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 2\\n6 4\\n9 5\", \"5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1\", \"3 7\\n2 2\\n2 3\\n2 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "line1 = input()\nbusRoutes = int(line1.split()[0])\nstartTime = int(line1.split()[1])\n\narrivals = []\nintervals = []\nfor x in range(busRoutes):\n    line = input()\n    arrival = int(line.split()[0])\n    interval = int(line.split()[1])\n\n    if arrival in arrivals and interval in intervals:\n        arrivals.append(0)\n        intervals.append(0)\n    else:\n        arrivals.append(arrival)\n        intervals.append(interval)\n\nselectedBus = 0\ntime = startTime\n\ncountNonZero = 0\nfor i in range(len(arrivals)):\n    if not(arrivals[i] == 0 and intervals[i] == 0):\n        countNonZero += 1\n    \n    if countNonZero >= 2:\n        break\n\nif countNonZero == 1:\n    selectedBus = 1\n        \n\nwhile selectedBus == 0:\n    for i in range(len(arrivals)):\n        if arrivals[i] == 0 and intervals[i] == 0:\n            continue\n\n        while arrivals[i] < time:\n            arrivals[i] = arrivals[i] + intervals[i]\n\n        if arrivals[i] != time:\n            continue\n        \n        selectedBus = i + 1\n        break\n\n    if selectedBus == 0:\n        minimum = 0\n        for i in range(len(arrivals)):\n            if minimum == 0 and arrivals[i] > 0:\n                minimum = arrivals[i]\n            elif arrivals[i] > 0 and arrivals[i] < minimum:\n                minimum = arrivals[i]\n\n        time = minimum\n\nprint(selectedBus)\n",
    "prob_desc_created_at": "1555164300",
    "tags": [
        "brute force",
        "math"
    ],
    "hidden_unit_tests": ""
}