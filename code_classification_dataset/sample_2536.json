{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"6\", \"12\", \"0\", \"2588544\"]",
    "src_uid": "0ff34aebe5e06774b1ad0eadad022ace",
    "prob_desc_notes": "NoteTwo partitions of an array are considered different if the sets of indices of elements included in the subsequence $$$p$$$ are different.In the first example, there are two correct partitions of the array $$$a$$$:  $$$p = [1]$$$, $$$q = [4]$$$, then $$$x = [1]$$$, $$$y = [4]$$$, $$$f(p, q) = |1 - 4| = 3$$$;  $$$p = [4]$$$, $$$q = [1]$$$, then $$$x = [4]$$$, $$$y = [1]$$$, $$$f(p, q) = |4 - 1| = 3$$$. In the second example, there are six valid partitions of the array $$$a$$$:   $$$p = [2, 1]$$$, $$$q = [2, 1]$$$ (elements with indices $$$1$$$ and $$$2$$$ in the original array are selected in the subsequence $$$p$$$);  $$$p = [2, 2]$$$, $$$q = [1, 1]$$$;  $$$p = [2, 1]$$$, $$$q = [1, 2]$$$ (elements with indices $$$1$$$ and $$$4$$$ are selected in the subsequence $$$p$$$);  $$$p = [1, 2]$$$, $$$q = [2, 1]$$$;  $$$p = [1, 1]$$$, $$$q = [2, 2]$$$;  $$$p = [2, 1]$$$, $$$q = [2, 1]$$$ (elements with indices $$$3$$$ and $$$4$$$ are selected in the subsequence $$$p$$$). ",
    "prob_desc_description": "You are given an array $$$a$$$ of length $$$2n$$$. Consider a partition of array $$$a$$$ into two subsequences $$$p$$$ and $$$q$$$ of length $$$n$$$ each (each element of array $$$a$$$ should be in exactly one subsequence: either in $$$p$$$ or in $$$q$$$).Let's sort $$$p$$$ in non-decreasing order, and $$$q$$$ in non-increasing order, we can denote the sorted versions by $$$x$$$ and $$$y$$$, respectively. Then the cost of a partition is defined as $$$f(p, q) = \\sum_{i = 1}^n |x_i - y_i|$$$.Find the sum of $$$f(p, q)$$$ over all correct partitions of array $$$a$$$. Since the answer might be too big, print its remainder modulo $$$998244353$$$.",
    "prob_desc_output_spec": "Print one integer — the answer to the problem, modulo $$$998244353$$$.",
    "prob_desc_input_spec": "The first line contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 150\\,000$$$). The second line contains $$$2n$$$ integers $$$a_1, a_2, \\ldots, a_{2n}$$$ ($$$1 \\leq a_i \\leq 10^9$$$) — elements of array $$$a$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_024.jsonl",
    "code_uid": "9cadb9938df0de9a660b124048a01212",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"1\\n1 4\", \"2\\n2 1 2 1\", \"3\\n2 2 2 2 2 2\", \"5\\n13 8 35 94 9284 34 54 69 123 846\"]",
    "exec_outcome": "PASSED",
    "source_code": "'''Author- Akshit Monga'''\nfrom sys import stdin,stdout\ninput=stdin.readline\nm=998244353\ndef ncr(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = (num * (n - i)) % p\n        den = (den * (i + 1)) % p\n    return (num * pow(den,\n            p - 2, p)) % p\nt =1\nfor _ in range(t):\n    n=int(input())\n    arr=[int(x) for x in input().split()]\n    arr=sorted(arr)\n    ans=((abs(sum(arr[0:n])-sum(arr[n:])))%m*ncr(2*n,n,m))%m\n    print(ans)",
    "prob_desc_created_at": "1604228700",
    "tags": [
        "combinatorics",
        "sortings",
        "math"
    ],
    "hidden_unit_tests": ""
}