{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"2\\n11\\n14\\n29\\n80\\n100\\n100\\n100\\n118\\n190\\n196\\n3000000094\\n3000060094\\n3000060400\\n3000060952\\n3000061270\\n3000061366\\n3000061366\"]",
    "src_uid": "d15cffca07768f8ce6fab7e13a6e7976",
    "prob_desc_notes": "NoteIn the first test case, the array $$$a = [2]$$$ after the first query.In the third test case, the array $$$a$$$ is modified as follows: $$$[1, 3, 2, 4, 10, 48]$$$ $$$\\rightarrow$$$ $$$[7, 9, 2, 4, 10, 48]$$$ $$$\\rightarrow$$$ $$$[7, 9, 7, 9, 15, 53]$$$ $$$\\rightarrow$$$ $$$[7, 9, 7, 9, 15, 53]$$$ $$$\\rightarrow$$$ $$$[10, 12, 10, 12, 18, 56]$$$ $$$\\rightarrow$$$ $$$[22, 24, 22, 24, 30, 68]$$$ $$$\\rightarrow$$$ $$$[23, 25, 23, 25, 31, 69]$$$.",
    "prob_desc_description": "You are given $$$n$$$ of integers $$$a_1, a_2, \\ldots, a_n$$$. Process $$$q$$$ queries of two types: query of the form \"0 $$$x_j$$$\": add the value $$$x_j$$$ to all even elements of the array $$$a$$$, query of the form \"1 $$$x_j$$$\": add the value $$$x_j$$$ to all odd elements of the array $$$a$$$.Note that when processing the query, we look specifically at the odd/even value of $$$a_i$$$, not its index.After processing each query, print the sum of the elements of the array $$$a$$$.Please note that the answer for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like long long for C++).",
    "prob_desc_output_spec": "For each test case, print $$$q$$$ numbers: the sum of the elements of the array $$$a$$$ after processing a query.",
    "prob_desc_input_spec": "The first line of the input contains an integer $$$t$$$ $$$(1 \\leq t \\leq 10^4$$$) — the number of test cases. The descriptions of the test cases follow. The first line of each test case contains two integers $$$n$$$ and $$$q$$$ ($$$1 \\leq n$$$, $$$q \\leq 10^5$$$) — the length of array $$$a$$$ and the number of queries. The second line of each test case contains exactly $$$n$$$ integers: $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) — elements of the array $$$a$$$. The following $$$q$$$ lines contain queries as two integers $$$type_j$$$ and $$$x_j$$$ $$$(0 \\leq type_j \\leq 1$$$, $$$1 \\leq x_j \\leq 10^4$$$). It is guaranteed that the sum of values $$$n$$$ over all test cases in a test does not exceed $$$10^5$$$. Similarly, the sum of values $$$q$$$ over all test cases does not exceed $$$10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_094.jsonl",
    "code_uid": "fab543a1be575a368d7f292c5d70f849",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n\\n1 1\\n\\n1\\n\\n1 1\\n\\n3 3\\n\\n1 2 4\\n\\n0 2\\n\\n1 3\\n\\n0 5\\n\\n6 7\\n\\n1 3 2 4 10 48\\n\\n1 6\\n\\n0 5\\n\\n0 4\\n\\n0 5\\n\\n1 3\\n\\n0 12\\n\\n0 1\\n\\n6 7\\n\\n1000000000 1000000000 1000000000 11 15 17\\n\\n0 17\\n\\n1 10000\\n\\n1 51\\n\\n0 92\\n\\n0 53\\n\\n1 16\\n\\n0 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "t = int(input())\nfor _ in range(t):\n    n, q = [int(i) for i in input().split()]\n    a = [int(j) for j in input().split()]\n    n0 = 0\n    n1 = 0\n    suma = sum(a)\n    for j in range(n):\n        if a[j] % 2 == 0:\n            n0 += 1\n        else:\n            n1 += 1\n    for _ in range(q):\n        operation, number = [int(i) for i in input().split()]\n        if operation == 0:\n            suma += (n0 * number)\n            print(suma)\n        if operation == 1:\n            suma += (n1 * number)\n            print(suma)\n        if number % 2 != 0:\n            if operation == 1:\n                n0 += n1\n                n1 = 0\n            elif operation == 0:\n                n1 += n0\n                n0 = 0\n\n",
    "prob_desc_created_at": "1665930900",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}