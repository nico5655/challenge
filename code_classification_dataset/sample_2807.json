{
    "prob_desc_time_limit": "2 секунды",
    "prob_desc_sample_outputs": "[\"1 5\\n2 4\\n3 3\", \"1 2\\n2 1\\n1 2\"]",
    "src_uid": "99dd93970b66c886297082d28a46c022",
    "prob_desc_notes": null,
    "prob_desc_description": "Вася купил стол, у которого n ножек. Каждая ножка состоит из двух частей, которые соединяются друг с другом. Каждая часть может быть произвольной положительной длины, но гарантируется, что из всех 2n частей возможно составить n ножек одинаковой длины. При составлении ножки любые две части могут быть соединены друг с другом. Изначально все ножки стола разобраны, а вам заданы длины 2n частей в произвольном порядке.Помогите Васе собрать все ножки стола так, чтобы все они были одинаковой длины, разбив заданные 2n части на пары правильным образом. Каждая ножка обязательно должна быть составлена ровно из двух частей, не разрешается использовать как ножку только одну часть.",
    "prob_desc_output_spec": "Выведите n строк по два целых числа в каждой — длины частей ножек, которые надо соединить друг с другом. Гарантируется, что всегда возможно собрать n ножек одинаковой длины. Если ответов несколько, разрешается вывести любой из них.",
    "prob_desc_input_spec": "В первой строке задано число n (1 ≤ n ≤ 1000) — количество ножек у стола, купленного Васей. Во второй строке следует последовательность из 2n целых положительных чисел a1, a2, ..., a2n (1 ≤ ai ≤ 100 000) — длины частей ножек стола в произвольном порядке.",
    "prob_desc_output_to": "стандартный вывод",
    "prob_desc_input_from": "стандартный ввод",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_032.jsonl",
    "code_uid": "40c34273d4ec027b5b41d136b4051f5e",
    "prob_desc_memory_limit": "256 мегабайт",
    "prob_desc_sample_inputs": "[\"3\\n1 3 2 4 5 3\", \"3\\n1 1 1 2 2 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\ns = list(map(int, input().split()))\ns.sort()\nfor i in range(n):\n    print(s[i], s[2 * n - i - 1])\n\n\n\n",
    "prob_desc_created_at": "1458745200",
    "tags": [
        "constructive algorithms",
        "sortings"
    ],
    "hidden_unit_tests": ""
}