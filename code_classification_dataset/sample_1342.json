{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"3\", \"0\", \"inf\"]",
    "src_uid": "749c290c48272a53e2e79730dab0538e",
    "prob_desc_notes": "NoteIn the first sample case, Masha will write integers 3, 12, 24. Progression term 6 will be skipped because it is a \"bad\" integer. Terms bigger than 24 won't be written because they exceed l by absolute value.In the second case, Masha won't write any number because all terms are equal 123 and this is a \"bad\" integer.In the third case, Masha will write infinitely integers 123. ",
    "prob_desc_description": "Masha really loves algebra. On the last lesson, her strict teacher Dvastan gave she new exercise.You are given geometric progression b defined by two integers b1 and q. Remind that a geometric progression is a sequence of integers b1, b2, b3, ..., where for each i &gt; 1 the respective term satisfies the condition bi = bi - 1·q, where q is called the common ratio of the progression. Progressions in Uzhlyandia are unusual: both b1 and q can equal 0. Also, Dvastan gave Masha m \"bad\" integers a1, a2, ..., am, and an integer l.Masha writes all progression terms one by one onto the board (including repetitive) while condition |bi| ≤ l is satisfied (|x| means absolute value of x). There is an exception: if a term equals one of the \"bad\" integers, Masha skips it (doesn't write onto the board) and moves forward to the next term.But the lesson is going to end soon, so Masha has to calculate how many integers will be written on the board. In order not to get into depression, Masha asked you for help: help her calculate how many numbers she will write, or print \"inf\" in case she needs to write infinitely many integers.",
    "prob_desc_output_spec": "Print the only integer, meaning the number of progression terms that will be written on the board if it is finite, or \"inf\" (without quotes) otherwise.",
    "prob_desc_input_spec": "The first line of input contains four integers b1, q, l, m (-109 ≤ b1, q ≤ 109, 1 ≤ l ≤ 109, 1 ≤ m ≤ 105) — the initial term and the common ratio of progression, absolute value of maximal number that can be written on the board and the number of \"bad\" integers, respectively. The second line contains m distinct integers a1, a2, ..., am (-109 ≤ ai ≤ 109) — numbers that will never be written on the board.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_008.jsonl",
    "code_uid": "ad6b114a251dfc728156c85cc083b945",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3 2 30 4\\n6 14 25 48\", \"123 1 2143435 4\\n123 11 -5453 141245\", \"123 1 2143435 4\\n54343 -13 6 124\"]",
    "exec_outcome": "PASSED",
    "source_code": "b1, q, l, m = [int(x) for x in raw_input().split()]\nlst = [int(x) for x in raw_input().split()]\n\nst = set(lst)\n\ncur = b1\nans = 0\nok = False\n\nif abs(b1) > l:\n\tprint 0\n\texit()\n\nfor _ in xrange(64):\n\tif cur not in st:\n\t\tans += 1\n\tcur *= q\n\tif abs(cur) > l:\n\t\tok = True\n\t\tbreak\n\nif not ok and q == 0:\n\tif 0 in st:\n\t\tprint ans\n\telse:\n\t\tprint \"inf\"\nelif not ok and abs(q) == 1:\n\tif ans == 0:\n\t\tprint 0\n\telse:\n\t\tprint \"inf\"\nelif not ok and b1 == 0:\n    if 0 in st:\n        print 0\n    else:\n        print \"inf\"\nelse:\n\tprint ans",
    "prob_desc_created_at": "1490803500",
    "tags": [
        "implementation",
        "brute force",
        "math"
    ],
    "hidden_unit_tests": ""
}