{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"I become the guy.\", \"Oh, my keyboard!\"]",
    "src_uid": "044ade01d2de1486735742369227ae1d",
    "prob_desc_notes": "NoteIn the first sample, Little X can pass levels [1 2 3], and Little Y can pass level [2 4], so they can pass all the levels both.In the second sample, no one can pass level 4.",
    "prob_desc_description": "There is a game called \"I Wanna Be the Guy\", consisting of n levels. Little X and his friend Little Y are addicted to the game. Each of them wants to pass the whole game.Little X can pass only p levels of the game. And Little Y can pass only q levels of the game. You are given the indices of levels Little X can pass and the indices of levels Little Y can pass. Will Little X and Little Y pass the whole game, if they cooperate each other?",
    "prob_desc_output_spec": "If they can pass all the levels, print \"I become the guy.\". If it's impossible, print \"Oh, my keyboard!\" (without the quotes).",
    "prob_desc_input_spec": "The first line contains a single integer n (1 ≤  n ≤ 100).  The next line contains an integer p (0 ≤ p ≤ n) at first, then follows p distinct integers a1, a2, ..., ap (1 ≤ ai ≤ n). These integers denote the indices of levels Little X can pass. The next line contains the levels Little Y can pass in the same format. It's assumed that levels are numbered from 1 to n.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_001.jsonl",
    "code_uid": "677567eb65bc1e5c1f326461f5d610b8",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n3 1 2 3\\n2 2 4\", \"4\\n3 1 2 3\\n2 2 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=int(input())\np=[int(x) for x in input().split()]\np.pop(0)\nq=[int(x) for x in input().split()]\nq.pop(0)\ns=set(p+q)\ns.discard(0)\nprint([\"Oh, my keyboard!\",\"I become the guy.\"][len(s)==n])",
    "prob_desc_created_at": "1411218000",
    "tags": [
        "implementation",
        "greedy"
    ],
    "hidden_unit_tests": ""
}