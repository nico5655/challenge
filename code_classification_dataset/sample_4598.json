{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"9\\n12\\n16\\n12\\n9\\n1\"]",
    "src_uid": "9070e0d4f8071d1ee8df5189b7c17bfa",
    "prob_desc_notes": "NoteIn the first test case, we can take a substring $$$111$$$. It contains $$$3$$$ characters 1 and $$$0$$$ characters 0. So $$$a = 3$$$, $$$b = 0$$$ and its cost is $$$3^2 = 9$$$.In the second test case, we can take the whole string. It contains $$$4$$$ characters 1 and $$$3$$$ characters 0. So $$$a = 4$$$, $$$b = 3$$$ and its cost is $$$4 \\cdot 3 = 12$$$.In the third test case, we can can take a substring $$$1111$$$ and its cost is $$$4^2 = 16$$$.In the fourth test case, we can take the whole string and cost is $$$4 \\cdot 3 = 12$$$.In the fifth test case, we can take a substring $$$000$$$ and its cost is $$$3 \\cdot 3 = 9$$$.In the sixth test case, we can only take the substring $$$0$$$ and its cost is $$$1 \\cdot 1 = 1$$$.",
    "prob_desc_description": "A binary string is a string consisting only of the characters 0 and 1. You are given a binary string $$$s$$$.For some non-empty substring$$$^\\dagger$$$ $$$t$$$ of string $$$s$$$ containing $$$x$$$ characters 0 and $$$y$$$ characters 1, define its cost as:  $$$x \\cdot y$$$, if $$$x &gt; 0$$$ and $$$y &gt; 0$$$;  $$$x^2$$$, if $$$x &gt; 0$$$ and $$$y = 0$$$;  $$$y^2$$$, if $$$x = 0$$$ and $$$y &gt; 0$$$. Given a binary string $$$s$$$ of length $$$n$$$, find the maximum cost across all its non-empty substrings.$$$^\\dagger$$$ A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.",
    "prob_desc_output_spec": "For each test case, print a single integer — the maximum cost across all substrings.",
    "prob_desc_input_spec": "Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^5$$$) — the number of test cases. The description of test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) — the length of the string $$$s$$$. The second line of each test case contains a binary string $$$s$$$ of length $$$n$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_101.jsonl",
    "code_uid": "d78e346425f7fe2c6b550f780c0fbf93",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n\\n5\\n\\n11100\\n\\n7\\n\\n1100110\\n\\n6\\n\\n011110\\n\\n7\\n\\n1001010\\n\\n4\\n\\n1000\\n\\n1\\n\\n0\"]",
    "exec_outcome": "PASSED",
    "source_code": "for i in range(int(input())):\r\n    n=int(input())\r\n    s=input()\r\n    ans=max(s.count('1')*s.count('0'),1)\r\n    st=1\r\n    s=s.strip()\r\n    for j in range(1,n):\r\n        if s[j]==s[j-1]:\r\n            st+=1\r\n        else:\r\n            st=1\r\n        ans=max(ans,st*st)\r\n    print(ans)",
    "prob_desc_created_at": "1667745300",
    "tags": [
        "brute force",
        "greedy",
        "implementation"
    ],
    "hidden_unit_tests": ""
}