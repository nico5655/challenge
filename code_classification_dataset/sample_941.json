{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"0\", \"1\", \"7\"]",
    "src_uid": "430486b13b2f3be12cf47fac105056ae",
    "prob_desc_notes": "NoteIn the first sample Moriarty can take any substring of length 3, and it will be equal to the required message u, so Moriarty won't have to make any changes.In the second sample you should take a substring consisting of characters from second to fourth (\"bca\") or from fifth to sixth (\"bc\"). Then you will only have to make one change: to change or to add the last character.In the third sample the initial string s doesn't contain any character that the message should contain, so, whatever string you choose, you will have to make at least 7 changes to obtain the required message.",
    "prob_desc_description": "Dr. Moriarty is about to send a message to Sherlock Holmes. He has a string s. String p is called a substring of string s if you can read it starting from some position in the string s. For example, string \"aba\" has six substrings: \"a\", \"b\", \"a\", \"ab\", \"ba\", \"aba\".Dr. Moriarty plans to take string s and cut out some substring from it, let's call it t. Then he needs to change the substring t zero or more times. As a result, he should obtain a fixed string u (which is the string that should be sent to Sherlock Holmes). One change is defined as making one of the following actions:   Insert one letter to any end of the string.  Delete one letter from any end of the string.  Change one letter into any other one. Moriarty is very smart and after he chooses some substring t, he always makes the minimal number of changes to obtain u. Help Moriarty choose the best substring t from all substrings of the string s. The substring t should minimize the number of changes Moriarty should make to obtain the string u from it.",
    "prob_desc_output_spec": "Print the only integer â€” the minimum number of changes that Dr. Moriarty has to make with the string that you choose.",
    "prob_desc_input_spec": "The first line contains a non-empty string s, consisting of lowercase Latin letters. The second line contains a non-empty string u, consisting of lowercase Latin letters. The lengths of both strings are in the range from 1 to 2000, inclusive.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_005.jsonl",
    "code_uid": "c65caec5bb3a4c9c7c9a8d9d4bf80872",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"aaaaa\\naaa\", \"abcabc\\nbcd\", \"abcdef\\nklmnopq\"]",
    "exec_outcome": "PASSED",
    "source_code": "# http://codeforces.com/problemset/problem/156/A\n\n# main\n\ns = raw_input()\nt = raw_input()\n\n\nminn = 300000\nfor i in range(len(s)):\n    temp = 0\n    for j, k in zip(s[i:], t):\n        if j != k:\n            temp += 1\n    if i + len(t) > len(s):\n        temp += i + len(t) - len(s)\n    minn = min(minn, temp)\n\nfor i in range(len(t)):\n    temp = 0\n    for j, k in zip(t[i:], s):\n\tif j != k:\n            temp += 1\n    if i:\n\ttemp += i\n    if i + len(s) < len(t):\n\ttemp += len(t) - i - len(s)\n    minn = min(minn, temp)\nprint minn\n",
    "prob_desc_created_at": "1330536600",
    "tags": [
        "brute force"
    ],
    "hidden_unit_tests": ""
}