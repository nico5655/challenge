{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"bab\", \"cabab\", \"zscoder\"]",
    "src_uid": "1f38c88f89786f118c65215d7df7bc9c",
    "prob_desc_notes": null,
    "prob_desc_description": "zscoder loves simple strings! A string t is called simple if every pair of adjacent characters are distinct. For example ab, aba, zscoder are simple whereas aa, add are not simple.zscoder is given a string s. He wants to change a minimum number of characters so that the string s becomes simple. Help him with this task!",
    "prob_desc_output_spec": "Print the simple string s' — the string s after the minimal number of changes. If there are multiple solutions, you may output any of them. Note that the string s' should also consist of only lowercase English letters.",
    "prob_desc_input_spec": "The only line contains the string s (1 ≤ |s| ≤ 2·105) — the string given to zscoder. The string s consists of only lowercase English letters.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_002.jsonl",
    "code_uid": "69c91a05454d60233a97f65a8882c610",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"aab\", \"caaab\", \"zscoder\"]",
    "exec_outcome": "PASSED",
    "source_code": "lis=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\ns = list(input())+['#']\nn=len(s)\nfor i in range(1,n):\n    if s[i]==s[i-1]:\n        for j in lis:\n            if j!=s[i] and j!=s[i+1]:\n                s[i]=j\n                break\nprint(''.join(s[:-1]))            \n\n\n",
    "prob_desc_created_at": "1461164400",
    "tags": [
        "dp",
        "greedy",
        "strings"
    ],
    "hidden_unit_tests": ""
}