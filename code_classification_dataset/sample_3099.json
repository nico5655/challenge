{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"/\\u2009\\n\\n\\\\\\n     \\n  \\n\\u2009/\\u2009\\n\\n\\\\\\n\\n\\u2009/\\u2009\\n  \\n\\\\\\n    \\n \\n\\u2009/\\u2009\\n      \\n\\\\\\n   \\n\\n\\u2009/\\u2009\\n        \\n\\\\\\n  \\n          \\n\\\\\\n\\n\\u2009/\", \"/\\u2009\\n\\n\\\\\\n     \\n  \\n\\\\\\n    \\n   \\n\\\\\\n   \\n    \\n\\\\\\n  \\n     \\n\\\\\\n\\n\\u2009/\"]",
    "src_uid": "76285a60c21538db17d268a5e06c2270",
    "prob_desc_notes": "NoteDue to the technical reasons the answers for the samples cannot be copied from the statement. We've attached two text documents with the answers below.http://assets.codeforces.com/rounds/435/1.txthttp://assets.codeforces.com/rounds/435/2.txt",
    "prob_desc_description": "In this problem, your task is to use ASCII graphics to paint a cardiogram. A cardiogram is a polyline with the following corners:That is, a cardiogram is fully defined by a sequence of positive integers a1, a2, ..., an.Your task is to paint a cardiogram by given sequence ai.",
    "prob_desc_output_spec": "Print max |yi - yj| lines (where yk is the y coordinate of the k-th point of the polyline), in each line print  characters. Each character must equal either « / » (slash), « \\ » (backslash), « » (space). The printed image must be the image of the given polyline. Please study the test samples for better understanding of how to print a cardiogram. Note that in this problem the checker checks your answer taking spaces into consideration. Do not print any extra characters. Remember that the wrong answer to the first pretest doesn't give you a penalty.",
    "prob_desc_input_spec": "The first line contains integer n (2 ≤ n ≤ 1000). The next line contains the sequence of integers a1, a2, ..., an (1 ≤ ai ≤ 1000). It is guaranteed that the sum of all ai doesn't exceed 1000.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_041.jsonl",
    "code_uid": "9fd808c7f52dff5fade40ea846058b53",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n3 1 2 5 1\", \"3\\n1 5 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\na = list(map(int, input().split()))\n\nMax = 1000\nMin = 1000\n\nsum = 0\nfor i in range(len(a)):\n    sum += a[i]\n\nmyMap = [[\" \"] * 2020 for i in range(2020)]\n\nx, y = 1000, 0\nfor i in range(n):\n    if (i & 1) == 0:\n        for j in range(a[i]):\n            myMap[x][y] = \"/\"\n            x -= 1\n            y += 1\n        x += 1\n    else:\n        for j in range(a[i]):\n            myMap[x][y] = \"\\\\\"\n            x += 1\n            y += 1\n        x -= 1\n    Max = max(Max, x)\n    Min = min(Min, x)\n\n\n    \nfor i in range(Min, Max + 1):\n    print(\"\".join(myMap[i][:y]))\n",
    "prob_desc_created_at": "1401463800",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}