{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"6\\n5 50 7 15 6 100\", \"4\\n10 100 1000 10000\"]",
    "src_uid": "f5588694b1d800271ccdcf14b0ba8f67",
    "prob_desc_notes": "NoteIn the output of the first example case, the remaining subsequences after removing those with Maximum_element_of_the_subsequence  -  Minimum_element_of_subsequence  ≥ 5 are [5], [5, 7], [5, 6], [5, 7, 6], [50], [7], [7, 6], [15], [6], [100]. There are 10 of them. Hence, the array [5, 50, 7, 15, 6, 100] is valid.Similarly, in the output of the second example case, the remaining sub-sequences after removing those with Maximum_element_of_the_subsequence  -  Minimum_element_of_subsequence  ≥ 2 are [10], [100], [1000], [10000]. There are 4 of them. Hence, the array [10, 100, 1000, 10000] is valid.",
    "prob_desc_description": "Pikachu had an array with him. He wrote down all the non-empty subsequences of the array on paper. Note that an array of size n has 2n - 1 non-empty subsequences in it. Pikachu being mischievous as he always is, removed all the subsequences in which Maximum_element_of_the_subsequence  -  Minimum_element_of_subsequence  ≥ dPikachu was finally left with X subsequences. However, he lost the initial array he had, and now is in serious trouble. He still remembers the numbers X and d. He now wants you to construct any such array which will satisfy the above conditions. All the numbers in the final array should be positive integers less than 1018. Note the number of elements in the output array should not be more than 104. If no answer is possible, print  - 1.",
    "prob_desc_output_spec": "Output should consist of two lines. First line should contain a single integer n (1 ≤ n ≤ 10 000)— the number of integers in the final array. Second line should consist of n space separated integers — a1, a2, ... , an (1 ≤ ai &lt; 1018). If there is no answer, print a single integer -1. If there are multiple answers, print any of them.",
    "prob_desc_input_spec": "The only line of input consists of two space separated integers X and d (1 ≤ X, d ≤ 109).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_010.jsonl",
    "code_uid": "e1e46d489ebbcdfd2a9f7ad82f9ebd18",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"10 5\", \"4 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "x, d = map(int,input().split())\n \ndef get_next(x):\n    if bin(x + 1).count('1') == 1:\n        return bin(x).count('1')\n    return len(bin(x)) - 3\n \na = []\nw = 1\nwhile x:\n    c = get_next(x)\n    a += c * [w]\n    w += d + 1\n    x -= 2**c-1\nprint(len(a))\nprint(*a)",
    "prob_desc_created_at": "1523117100",
    "tags": [
        "constructive algorithms",
        "implementation",
        "bitmasks",
        "greedy"
    ],
    "hidden_unit_tests": ""
}