{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"5\\n5\\n6\", \"3\\n3\\n3\\n1\", \"0\\n0\\n-1\"]",
    "src_uid": "85f5033a045d331c12fc62f9b7816bed",
    "prob_desc_notes": "NoteIn the first test:  The initial sequence $$$a = (2, -1, 7, 3)$$$. Two sequences $$$b=(-3,-3,5,5),c=(5,2,2,-2)$$$ is a possible choice.  After the first change $$$a = (2, -4, 4, 0)$$$. Two sequences $$$b=(-3,-3,5,5),c=(5,-1,-1,-5)$$$ is a possible choice.  After the second change $$$a = (2, -4, 6, 2)$$$. Two sequences $$$b=(-4,-4,6,6),c=(6,0,0,-4)$$$ is a possible choice. ",
    "prob_desc_description": "You are given a sequence of $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$.You have to construct two sequences of integers $$$b$$$ and $$$c$$$ with length $$$n$$$ that satisfy:  for every $$$i$$$ ($$$1\\leq i\\leq n$$$) $$$b_i+c_i=a_i$$$  $$$b$$$ is non-decreasing, which means that for every $$$1&lt;i\\leq n$$$, $$$b_i\\geq b_{i-1}$$$ must hold  $$$c$$$ is non-increasing, which means that for every $$$1&lt;i\\leq n$$$, $$$c_i\\leq c_{i-1}$$$ must hold You have to minimize $$$\\max(b_i,c_i)$$$. In other words, you have to minimize the maximum number in sequences $$$b$$$ and $$$c$$$.Also there will be $$$q$$$ changes, the $$$i$$$-th change is described by three integers $$$l,r,x$$$. You should add $$$x$$$ to $$$a_l,a_{l+1}, \\ldots, a_r$$$. You have to find the minimum possible value of $$$\\max(b_i,c_i)$$$ for the initial sequence and for sequence after each change.",
    "prob_desc_output_spec": "Print $$$q+1$$$ lines. On the $$$i$$$-th ($$$1 \\leq i \\leq q+1$$$) line, print the answer to the problem for the sequence after $$$i-1$$$ changes.",
    "prob_desc_input_spec": "The first line contains an integer $$$n$$$ ($$$1\\leq n\\leq 10^5$$$). The secound line contains $$$n$$$ integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$1\\leq i\\leq n$$$, $$$-10^9\\leq a_i\\leq 10^9$$$). The third line contains an integer $$$q$$$ ($$$1\\leq q\\leq 10^5$$$). Each of the next $$$q$$$ lines contains three integers $$$l,r,x$$$ ($$$1\\leq l\\leq r\\leq n,-10^9\\leq x\\leq 10^9$$$), desribing the next change. ",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2200,
    "file_name": "train_031.jsonl",
    "code_uid": "36035d5dc9f123fbbd08532683a38e75",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n2 -1 7 3\\n2\\n2 4 -3\\n3 4 2\", \"6\\n-9 -10 -9 -6 -5 4\\n3\\n2 6 -9\\n1 2 -10\\n4 6 -3\", \"1\\n0\\n2\\n1 1 -1\\n1 1 -1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=int(input())\na=list(map(int,input().split()))\nq=int(input())\nb=[0]*n\nc=[0]*n\ndifn=0\ndiff=[0]*n\nfor i in range(1,n):\n    if a[i]-a[i-1]>0:\n        difn+=a[i]-a[i-1]\n    diff[i]=a[i]-a[i-1]\nbo=(a[0]-difn)//2\nans=max(bo+difn,a[0]-bo)\nprint(ans)\ntd=difn\nfor i in range(q):\n    l,r,x=map(int,input().split())\n    if l!=1:\n        if diff[l-1]+x>0:\n            td-=max(0,diff[l-1])\n            diff[l-1]=diff[l-1]+x\n            td+=diff[l-1]\n        else:\n            td=td-max(0,diff[l-1])\n            diff[l-1]=diff[l-1]+x\n    elif l==1:\n        a[0]+=x\n    if r!=n:\n        if diff[r]-x>0:\n            td-=max(0,diff[r])\n            diff[r]=diff[r]-x\n            td+=diff[r]\n        else:\n            td=td-max(0,diff[r])\n            diff[r]=diff[r]-x\n    bo=(a[0]-td)//2\n    ans=max(bo+td,a[0]-bo)\n    print(ans)\n\n            \n",
    "prob_desc_created_at": "1599918300",
    "tags": [
        "data structures",
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}