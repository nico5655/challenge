{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"YES\\n1\\n4\\n3\\n6\\n5\\n2\\n7\", \"NO\"]",
    "src_uid": "8b61e354ece0242eff539163f76cabde",
    "prob_desc_notes": "NoteFor the second sample, there are no valid sequences.",
    "prob_desc_description": "Consider a sequence [a1, a2, ... , an]. Define its prefix product sequence .Now given n, find a permutation of [1, 2, ..., n], such that its prefix product sequence is a permutation of [0, 1, ..., n - 1].",
    "prob_desc_output_spec": "In the first output line, print \"YES\" if such sequence exists, or print \"NO\" if no such sequence exists. If any solution exists, you should output n more lines. i-th line contains only an integer ai. The elements of the sequence should be different positive integers no larger than n. If there are multiple solutions, you are allowed to print any of them.",
    "prob_desc_input_spec": "The only input line contains an integer n (1 ≤ n ≤ 105).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2300,
    "file_name": "train_024.jsonl",
    "code_uid": "36434f52a2f75fc580ec4d1c674127c2",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"7\", \"6\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\nif n == 4:\n    print (\"YES\\n1 3 2 4\")\nelif [i for i in range(2,n) if n%i==0]:\n    print(\"NO\")\nelse:\n    print(\"YES\\n1 %s\"%(\" \".join(str((pow(x+1,n-2,n)*(x+2))%n or n) for x in range(n-1))))\n\n",
    "prob_desc_created_at": "1416590400",
    "tags": [
        "constructive algorithms",
        "number theory",
        "math"
    ],
    "hidden_unit_tests": ""
}