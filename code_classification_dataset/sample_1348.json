{
    "prob_desc_time_limit": "2.5 seconds",
    "prob_desc_sample_outputs": "[\"0.680000000000000\"]",
    "src_uid": "9b05933b72dc24d743cb59978f35c8f3",
    "prob_desc_notes": null,
    "prob_desc_description": "The rules of Sith Tournament are well known to everyone. n Sith take part in the Tournament. The Tournament starts with the random choice of two Sith who will fight in the first battle. As one of them loses, his place is taken by the next randomly chosen Sith who didn't fight before. Does it need to be said that each battle in the Sith Tournament ends with a death of one of opponents? The Tournament ends when the only Sith remains alive.Jedi Ivan accidentally appeared in the list of the participants in the Sith Tournament. However, his skills in the Light Side of the Force are so strong so he can influence the choice of participants either who start the Tournament or who take the loser's place after each battle. Of course, he won't miss his chance to take advantage of it. Help him to calculate the probability of his victory.",
    "prob_desc_output_spec": "Output a real number — the probability that Jedi Ivan will stay alive after the Tournament. Absolute or relative error of the answer must not exceed 10 - 6.",
    "prob_desc_input_spec": "The first line contains a single integer n (1 ≤ n ≤ 18) — the number of participants of the Sith Tournament. Each of the next n lines contains n real numbers, which form a matrix pij (0 ≤ pij ≤ 1). Each its element pij is the probability that the i-th participant defeats the j-th in a duel. The elements on the main diagonal pii are equal to zero. For all different i, j the equality pij + pji = 1 holds. All probabilities are given with no more than six decimal places. Jedi Ivan is the number 1 in the list of the participants.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 2200,
    "file_name": "train_008.jsonl",
    "code_uid": "21239c08c39f13a58961faf8ad7cba0e",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n0.0 0.5 0.8\\n0.5 0.0 0.4\\n0.2 0.6 0.0\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\nimport sys\nn=int(raw_input())\nA=[]\n#print \"hi\"\n#sys.stdout.flush()\nfor j in range(n):\n    A+=[[float(x) for x in raw_input().split()]]\n#print \"hi\"\nwhile(True):\n    #print n\n    #print A\n    if n==1:\n        print \"1.0\"\n        break\n    if n==2:\n        print A[0][1]\n        break\n    M=0\n    j0=1\n    for j in range(1,n):\n        if A[0][j]>M:\n            j0=j\n            M=A[0][j]\n    B=[]\n    for i in range(n):\n        if i==j0:\n            continue\n        B+=[[]]\n        for j in range(n):\n            if j==j0:\n                continue\n            if i!=0 and j!=0:\n                B[-1]+=[A[i][j]]\n            elif i==0 and j==0:\n                B[-1]+=[0]\n            elif i==0 and j!=0:\n                B[-1]+=[A[0][j]*A[j][j0]+A[0][j0]*A[j0][j]]\n            elif i!=0 and j==0:\n                B[-1]+=[A[j][0]*A[j][j0]+A[j0][0]*A[j0][j]]\n    A=B\n    n-=1\n\n            \n            ",
    "prob_desc_created_at": "1465834200",
    "tags": [
        "dp",
        "bitmasks",
        "probabilities",
        "math"
    ],
    "hidden_unit_tests": ""
}