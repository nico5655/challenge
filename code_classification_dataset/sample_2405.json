{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"5\"]",
    "src_uid": "fcb6a715dfe302d7ae5a6695ca8976aa",
    "prob_desc_notes": "NoteIn the example all the numbers equal to 1 and 3 should be replaced by 2.",
    "prob_desc_description": "There is a given sequence of integers a1, a2, ..., an, where every number is from 1 to 3 inclusively. You have to replace the minimum number of numbers in it so that all the numbers in the sequence are equal to each other.",
    "prob_desc_output_spec": "Print the minimum number of replacements needed to be performed to make all the numbers in the sequence equal.",
    "prob_desc_input_spec": "The first line contains an integer n (1 ≤ n ≤ 106). The second line contains a sequence of integers a1, a2, ..., an (1 ≤ ai ≤ 3).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_022.jsonl",
    "code_uid": "ed801a389add7fe1b293ba15eb4748af",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"9\\n1 3 2 2 2 1 1 2 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=int(input())\nmax1=1;count=0\nar=sorted(list(map(int,input().split())))\nfor i in range(n-1):\n    if ar[i]==ar[i+1]:\n        count+=1\n    else:\n        count=0\n    max1=max(max1,count+1)\nprint(n-max1)    ",
    "prob_desc_created_at": "1294160400",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}