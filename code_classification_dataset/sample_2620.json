{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"12 14\", \"8\"]",
    "src_uid": "9eccd64bb49b74ed0eed3dbf6636f07d",
    "prob_desc_notes": "NoteIn the first example, for $$$f(3)$$$, we consider four possible polygons:   ($$$p_1, p_2, p_3$$$), with perimeter $$$12$$$.  ($$$p_1, p_2, p_4$$$), with perimeter $$$8$$$.  ($$$p_1, p_3, p_4$$$), with perimeter $$$12$$$.  ($$$p_2, p_3, p_4$$$), with perimeter $$$12$$$. For $$$f(4)$$$, there is only one option, taking all the given points. Its perimeter $$$14$$$.In the second example, there is only one possible polygon. Its perimeter is $$$8$$$.",
    "prob_desc_description": "You are given $$$n$$$ points on the plane. The polygon formed from all the $$$n$$$ points is strictly convex, that is, the polygon is convex, and there are no three collinear points (i.e. lying in the same straight line). The points are numbered from $$$1$$$ to $$$n$$$, in clockwise order.We define the distance between two points $$$p_1 = (x_1, y_1)$$$ and $$$p_2 = (x_2, y_2)$$$ as their Manhattan distance: $$$$$$d(p_1, p_2) = |x_1 - x_2| + |y_1 - y_2|.$$$$$$Furthermore, we define the perimeter of a polygon, as the sum of Manhattan distances between all adjacent pairs of points on it; if the points on the polygon are ordered as $$$p_1, p_2, \\ldots, p_k$$$ $$$(k \\geq 3)$$$, then the perimeter of the polygon is $$$d(p_1, p_2) + d(p_2, p_3) + \\ldots + d(p_k, p_1)$$$.For some parameter $$$k$$$, let's consider all the polygons that can be formed from the given set of points, having any $$$k$$$ vertices, such that the polygon is not self-intersecting. For each such polygon, let's consider its perimeter. Over all such perimeters, we define $$$f(k)$$$ to be the maximal perimeter.Please note, when checking whether a polygon is self-intersecting, that the edges of a polygon are still drawn as straight lines. For instance, in the following pictures:  In the middle polygon, the order of points ($$$p_1, p_3, p_2, p_4$$$) is not valid, since it is a self-intersecting polygon. The right polygon (whose edges resemble the Manhattan distance) has the same order and is not self-intersecting, but we consider edges as straight lines. The correct way to draw this polygon is ($$$p_1, p_2, p_3, p_4$$$), which is the left polygon.Your task is to compute $$$f(3), f(4), \\ldots, f(n)$$$. In other words, find the maximum possible perimeter for each possible number of points (i.e. $$$3$$$ to $$$n$$$).",
    "prob_desc_output_spec": "For each $$$i$$$ ($$$3\\leq i\\leq n$$$), output $$$f(i)$$$.",
    "prob_desc_input_spec": "The first line contains a single integer $$$n$$$ ($$$3 \\leq n \\leq 3\\cdot 10^5$$$) — the number of points.  Each of the next $$$n$$$ lines contains two integers $$$x_i$$$ and $$$y_i$$$ ($$$-10^8 \\leq x_i, y_i \\leq 10^8$$$) — the coordinates of point $$$p_i$$$. The set of points is guaranteed to be convex, all points are distinct, the points are ordered in clockwise order, and there will be no three collinear points.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 2100,
    "file_name": "train_026.jsonl",
    "code_uid": "bd41715d0639fbd0991e1924adcb4216",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n2 4\\n4 3\\n3 0\\n1 3\", \"3\\n0 0\\n0 2\\n2 0\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(raw_input())\nX = []\nY = []\nfor _ in range(n):\n    x,y = map(int,raw_input().strip(' ').strip('\\n').split(' '))\n    X.append(x)\n    Y.append(y)\nmaxx,minx = max(X),min(X)\nmaxy,miny = max(Y),min(Y)\n\nans = -10e18\nfor i in range(n):\n    dx = max(maxx-X[i],X[i]-minx)\n    dy = max(maxy-Y[i],Y[i]-miny)\n    ans = max(ans,dx+dy)\nans = str(2*ans)+' '\nrec = 2*(maxx+maxy-minx-miny)\nfor i in range(3,n):\n    ans += str(rec)+' '\nans = ans.strip('')\nprint ans",
    "prob_desc_created_at": "1541355000",
    "tags": [
        "dp",
        "geometry"
    ],
    "hidden_unit_tests": ""
}