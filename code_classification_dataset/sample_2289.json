{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1\", \"0\"]",
    "src_uid": "5606799ab5345bb9501fa6535e5abef9",
    "prob_desc_notes": "NoteIn both samples Vasya has got two turns — 1 and 5. In the first sample, Vasya could have drunk a glass of juice during the fifth turn if he had pointed at the next person with a nod. In this case, the sequence of moves would look like \"abbbb\". In the second sample Vasya wouldn't drink a single glass of juice as the moves performed during turns 3 and 4 are different.",
    "prob_desc_description": "Everybody knows that the Berland citizens are keen on health, especially students. Berland students are so tough that all they drink is orange juice!Yesterday one student, Vasya and his mates made some barbecue and they drank this healthy drink only. After they ran out of the first barrel of juice, they decided to play a simple game. All n people who came to the barbecue sat in a circle (thus each person received a unique index bi from 0 to n - 1). The person number 0 started the game (this time it was Vasya). All turns in the game were numbered by integers starting from 1. If the j-th turn was made by the person with index bi, then this person acted like that:  he pointed at the person with index (bi + 1) mod n either with an elbow or with a nod (x mod y is the remainder after dividing x by y);  if j ≥ 4 and the players who had turns number j - 1, j - 2, j - 3, made during their turns the same moves as player bi on the current turn, then he had drunk a glass of juice;  the turn went to person number (bi + 1) mod n. The person who was pointed on the last turn did not make any actions.The problem was, Vasya's drunk too much juice and can't remember the goal of the game. However, Vasya's got the recorded sequence of all the participants' actions (including himself). Now Vasya wants to find out the maximum amount of juice he could drink if he played optimally well (the other players' actions do not change). Help him.You can assume that in any scenario, there is enough juice for everybody.",
    "prob_desc_output_spec": "Print a single integer — the number of glasses of juice Vasya could have drunk if he had played optimally well.",
    "prob_desc_input_spec": "The first line contains a single integer n (4 ≤ n ≤ 2000) — the number of participants in the game. The second line describes the actual game: the i-th character of this line equals 'a', if the participant who moved i-th pointed at the next person with his elbow, and 'b', if the participant pointed with a nod. The game continued for at least 1 and at most 2000 turns. ",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_019.jsonl",
    "code_uid": "d48bd6132e0b635afd6cbf7da8a482fb",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\nabbba\", \"4\\nabbab\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(raw_input())\ns = raw_input()\ni = 0\nsa = 'aaa'\nsb = 'bbb'\nres = 0\nwhile i + n < len(s):\n    ss = s[i:i+n][n-3:]\n    if ss == sa or ss == sb:\n        res += 1\n    i += n\nprint res\n",
    "prob_desc_created_at": "1374679800",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}