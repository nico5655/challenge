{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"70\", \"74\"]",
    "src_uid": "bfd7aabf195321249db8760c3cb6998d",
    "prob_desc_notes": "NoteIn the first example Vasya destroys three figures first and gets 3·1·10 = 30 points. Then the factor will become equal to 2 and after destroying the last two figures Vasya will get 2·2·10 = 40 points. As a result Vasya will get 70 points.In the second example all 8 figures will be destroyed with factor 1, so Vasya will get (3·8 + 5·10)·1 = 74 points.",
    "prob_desc_description": "Vasya plays the Geometry Horse.The game goal is to destroy geometric figures of the game world. A certain number of points is given for destroying each figure depending on the figure type and the current factor value. There are n types of geometric figures. The number of figures of type ki and figure cost ci is known for each figure type. A player gets ci·f  points for destroying one figure of type i, where f is the current factor. The factor value can be an integer number from 1 to t + 1, inclusive. At the beginning of the game the factor value is equal to 1. The factor is set to i + 1 after destruction of pi (1 ≤ i ≤ t) figures, so the (pi + 1)-th figure to be destroyed is considered with factor equal to i + 1.Your task is to determine the maximum number of points Vasya can get after he destroys all figures. Take into account that Vasya is so tough that he can destroy figures in any order chosen by him.",
    "prob_desc_output_spec": "Print the only number — the maximum number of points Vasya can get.",
    "prob_desc_input_spec": "The first line contains the only integer number n (1 ≤ n ≤ 100) — the number of figure types. Each of the following n lines contains two integer numbers ki and ci (1 ≤ ki ≤ 109, 0 ≤ ci ≤ 1000), separated with space — the number of figures of the i-th type and the cost of one i-type figure, correspondingly. The next line contains the only integer number t (1 ≤ t ≤ 100) — the number that describe the factor's changes.  The next line contains t integer numbers pi (1 ≤ p1 &lt; p2 &lt; ... &lt; pt ≤ 1012), separated with spaces. Please, do not use the %lld specificator to read or write 64-bit integers in С++. It is preferred to use cin, cout streams or the %I64d specificator.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_017.jsonl",
    "code_uid": "eee6f4b207d112dc1897032c00c59369",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"1\\n5 10\\n2\\n3 6\", \"2\\n3 8\\n5 10\\n1\\n20\"]",
    "exec_outcome": "PASSED",
    "source_code": "# coding=utf-8\nimport math\nimport sys\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline().strip())\n    fig = []\n    for i in range(n):\n        cnt, cst = map(int, sys.stdin.readline().split())\n        fig.append((cst, cnt))\n    fig = sorted(fig)\n    t = int(sys.stdin.readline().strip())\n    p = map(int, sys.stdin.readline().split())\n    p.append(10**13)\n\n    fcnt = 0\n    score = 0\n    f = 1\n    while fig:\n        cst, cnt = fig[0]\n        cnt = min(cnt, p[0] - fcnt)\n        score += f * cnt * cst\n\n        fcnt += cnt\n        fig[0] = cst, fig[0][1]-cnt\n        if fig[0][1] == 0:\n            fig.pop(0)\n        if p[0] == fcnt:\n            p.pop(0)\n            f += 1\n    print(score)\n\n",
    "prob_desc_created_at": "1334390400",
    "tags": [
        "two pointers",
        "implementation",
        "sortings",
        "greedy"
    ],
    "hidden_unit_tests": ""
}