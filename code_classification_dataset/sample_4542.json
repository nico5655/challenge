{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1\\n2\\n3\\n5\\n358642921\"]",
    "src_uid": "0337ff9d7c3d8e0813ab4d47736308e5",
    "prob_desc_notes": "NoteIn the first test case there is only $$$1$$$ different permutation of $$$a$$$:  $$$[1, 1, 1, 1]$$$ has $$$1$$$ component.  Therefore the expected value of components is $$$\\frac{1}{1} = 1$$$ In the second test case there are $$$4$$$ ways to permute the cyclic array $$$a$$$, but there is only $$$1$$$ different permutation of $$$a$$$:  $$$[1, 1, 1, 2]$$$, $$$[1, 1, 2, 1]$$$, $$$[1, 2, 1, 1]$$$ and $$$[2, 1, 1, 1]$$$ are the same permutation and have $$$2$$$ components.  Therefore the expected value of components is $$$\\frac{2}{1} = 2$$$ In the third test case there are $$$6$$$ ways to permute the cyclic array $$$a$$$, but there are only $$$2$$$ different permutations of $$$a$$$:  $$$[1, 1, 2, 2]$$$, $$$[2, 1, 1, 2]$$$, $$$[2, 2, 1, 1]$$$ and $$$[1, 2, 2, 1]$$$ are the same permutation and have $$$2$$$ components.  $$$[1, 2, 1, 2]$$$ and $$$[2, 1, 2, 1]$$$ are the same permutation and have $$$4$$$ components.  Therefore the expected value of components is $$$\\frac{2+4}{2} = \\frac{6}{2} = 3$$$ In the fourth test case there are $$$120$$$ ways to permute the cyclic array $$$a$$$, but there are only $$$24$$$ different permutations of $$$a$$$:  Any permutation of $$$a$$$ has $$$5$$$ components.  Therefore the expected value of components is $$$\\frac{24\\cdot 5}{24} = \\frac{120}{24} = 5$$$ ",
    "prob_desc_description": "Given a cyclic array $$$a$$$ of size $$$n$$$, where $$$a_i$$$ is the value of $$$a$$$ in the $$$i$$$-th position, there may be repeated values. Let us define that a permutation of $$$a$$$ is equal to another permutation of $$$a$$$ if and only if their values are the same for each position $$$i$$$ or we can transform them to each other by performing some cyclic rotation. Let us define for a cyclic array $$$b$$$ its number of components as the number of connected components in a graph, where the vertices are the positions of $$$b$$$ and we add an edge between each pair of adjacent positions of $$$b$$$ with equal values (note that in a cyclic array the first and last position are also adjacents).Find the expected value of components of a permutation of $$$a$$$ if we select it equiprobably over the set of all the different permutations of $$$a$$$.",
    "prob_desc_output_spec": "For each test case print a single integer — the expected value of components of a permutation of $$$a$$$ if we select it equiprobably over the set of all the different permutations of $$$a$$$ modulo $$$998\\,244\\,353$$$.  Formally, let $$$M = 998\\,244\\,353$$$. It can be shown that the answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output such an integer $$$x$$$ that $$$0 \\le x &lt; M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$.",
    "prob_desc_input_spec": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^5$$$) — the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^6$$$) — the size of the cyclic array $$$a$$$. The second line of each test case contains $$$n$$$ integers, the $$$i$$$-th of them is the value $$$a_i$$$ ($$$1 \\le a_i \\le n$$$). It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^6$$$. It is guaranteed that the total number of different permutations of $$$a$$$ is not divisible by $$$M$$$",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 2900,
    "file_name": "train_100.jsonl",
    "code_uid": "59af864140ec64ea27598a20b8e6e42f",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n\\n4\\n\\n1 1 1 1\\n\\n4\\n\\n1 1 2 1\\n\\n4\\n\\n1 2 1 2\\n\\n5\\n\\n4 3 2 5 1\\n\\n12\\n\\n1 3 2 3 2 1 3 3 1 3 3 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\r\nimport sys\r\nr=range\r\nm=lambda x:pow(x,M-2,M)\r\nM=998244353\r\nf=[1]\r\nF=[1]*10**6\r\nfor i in r(1,1000001):f.append(f[-1]*i%M)\r\nF.append(m(f[-1]))\r\nfor i in r(10**6,1,-1):F[i-1]=F[i]*(i)%M\r\nI=sys.stdin.readline\r\nfor _ in[0]*int(I()):\r\n\tn=int(I());a=[*map(int,I().split())];C=[0]*n;P,c=0,0;A={}\r\n\tfor g in a:C[g-1]+=1\r\n\tC=[g for g in C if g>0]\r\n\tx=C[0]\r\n\tfor g in C:x=math.gcd(x,g)\r\n\tif x==n:print(1);continue\r\n\tfor i in r(1,n):\r\n\t\tif x%i<1:A[i]=0\r\n\tfor i in r(1,n):\r\n\t\tif x%i<1:\r\n\t\t\tX=n//i;p=f[X];s=0;e=i-A[i]\r\n\t\t\tfor g in C:y=g//i;s+=y*(y-1);p=p*F[y]%M\r\n\t\t\tP+=p*e;c+=e*((X)*(X-1)-s)*i*m(X-1)*p%M\r\n\t\t\tfor g in A:\r\n\t\t\t\tif g%i<1:A[g]+=e\r\n\tprint(c*m(P)%M)",
    "prob_desc_created_at": "1643294100",
    "tags": [
        "combinatorics",
        "math",
        "number theory",
        "probabilities"
    ],
    "hidden_unit_tests": ""
}