{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"3\", \"4\", \"1\", \"1\"]",
    "src_uid": "17fff01f943ad467ceca5dce5b962169",
    "prob_desc_notes": "NoteIn the first example there are two beautiful sequences of width $$$3$$$: they are $$$\\{1, 2, 5\\}$$$ and $$$\\{1, 4, 5\\}$$$.In the second example the beautiful sequence with the maximum width is $$$\\{1, 5\\}$$$.In the third example there is exactly one beautiful sequence — it is $$$\\{1, 2, 3, 4, 5\\}$$$.In the fourth example there is exactly one beautiful sequence — it is $$$\\{1, 2\\}$$$.",
    "prob_desc_description": "Your classmate, whom you do not like because he is boring, but whom you respect for his intellect, has two strings: $$$s$$$ of length $$$n$$$ and $$$t$$$ of length $$$m$$$.A sequence $$$p_1, p_2, \\ldots, p_m$$$, where $$$1 \\leq p_1 &lt; p_2 &lt; \\ldots &lt; p_m \\leq n$$$, is called beautiful, if $$$s_{p_i} = t_i$$$ for all $$$i$$$ from $$$1$$$ to $$$m$$$. The width of a sequence is defined as $$$\\max\\limits_{1 \\le i &lt; m} \\left(p_{i + 1} - p_i\\right)$$$.Please help your classmate to identify the beautiful sequence with the maximum width. Your classmate promised you that for the given strings $$$s$$$ and $$$t$$$ there is at least one beautiful sequence.",
    "prob_desc_output_spec": "Output one integer — the maximum width of a beautiful sequence.",
    "prob_desc_input_spec": "The first input line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\leq m \\leq n \\leq 2 \\cdot 10^5$$$) — the lengths of the strings $$$s$$$ and $$$t$$$. The following line contains a single string $$$s$$$ of length $$$n$$$, consisting of lowercase letters of the Latin alphabet. The last line contains a single string $$$t$$$ of length $$$m$$$, consisting of lowercase letters of the Latin alphabet. It is guaranteed that there is at least one beautiful sequence for the given strings.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1500,
    "file_name": "train_109.jsonl",
    "code_uid": "1a425e5de388a4bc532013eb9babb917",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"5 3\\nabbbc\\nabc\", \"5 2\\naaaaa\\naa\", \"5 5\\nabcdf\\nabcdf\", \"2 2\\nab\\nab\"]",
    "exec_outcome": "PASSED",
    "source_code": "# RANK1ZEN; 3966 PEAK NA FLEX SUPPORT; Battlenet ID: Knuckles#11791\r\n# region -----------------------------------------------------------------------------------------|\r\n# oooo+oshdy+/smooyNMNNMMMmo/::----/dNsomMMMNNMy/::--::/mNoodNdmdo/:-://////::::::::.        \r\n# ooooyNMMMyssNyosmMMMMMMNs+::----::++//+oooooo/::----:/ys+oNNdMMo/:-/+mmdy+///::::::.       \r\n# ooooNMMMdyoNdoosNmmdyhyo/::------:::::::::::::-------::::/+++so/:::/+dMMNhydosso+///.``````\r\n# oo/yNmMms+oyo///++///:::::-.------------------------------::::::::-:/odmNhyNsdMNmmy+/......\r\n# o//oooo+/-:::::::::::::::---------------------.---------------:::-.::://+++yohMMMMNs+-.....\r\n# +:::::::--::::::::::--::-.-::::::::----------.-:----:-----------:---:-::::::/ohhNMNo+-.....\r\n# ::::::::.-:::::::::-:::-`.:::::::::-:::::::----::::::--::::::-::::d:---::::::://+os//-`.`..\r\n# --------.:::::::--:::::. -::::::::--::::::--o/:::::::-::::::::::-yNs-:.::::::::::::::-..`..\r\n# --------.:-::::-::::::- `::::::::-:::::::-:ym:::::::-:::::::::::+NMN+---:::::::::::::-.....\r\n# --------.-----::::::::. .:://///::////:::+dMy//////:////////:::/mMMMm/:-:::::::::::::--....\r\n# --------.----:::::::::``://////:///////+yNMM+++++//++++/////://hmmNNNd::-::::::::::::--....\r\n# --------.----::::::::-``://++//+++++++ymmNMd+oo+++ooo++++++/++dNmdhhhys:-::::::::::::-:`...\r\n# --------.----::::::::-``//++//++++++hNMMMMMoso++ooooooooo++o+dmNNNMMMMMm+://:::::://::/....\r\n# --------:----::::::::-``////++++++/--+smNNhsooosssssoooo+oosmNMMMMMMMMMMN///////////-:/....\r\n# -------/o-----:::::::-``://+++:. :NMydhohhooosssssssso+osodMNMNhyssyyhdmMo++++++++++./+....\r\n# -------sd-----:::::::-`.:/oo/.://.-hddMMh+ossssssssss+soyNms/.`  `:- `  `:++++/++++/ /+-.-.\r\n# -------ym/-----:::::::/shhyh:/ymddo./mdysssssssssoyyossmMMh-     .mMhdNds:ooo/ooooo- ++---.\r\n# -------hhy----------:-sNNNNmhysyssoyysssoossssoshmyosdMMMMs ..///`-hysMMh/oo/ooooo/ `oo----\r\n# ----`-..od/---::::::::oNNNNNNNNmdysoooooooooyhmNdsymMMMMMMm:/oydds+:ymmMhoo+oooooo` `oo----\r\n# ----``-  `-.---:::::::+dddddhyo++++oooosyhmNMNhshNMMMMMMMMMNmmhhyo+sydNmoo++ooooo.  -oo----\r\n# ----- ``    ----:::::::ooooooosssyhhdNNNMMNdyydNMMmMMMMMMMMNNNNmNmmmNmmoohsoooo+.   :++.---\r\n# -----.      `----:::::-mNNNNmNNMMMMMMMNmdhhdNMMMMMMMMMMMMMMNMNNmNmmmmmhshs:ooo/`   `/+:----\r\n# ------`      .::::::::-yMMMMNNNNmmddhyhdNNMMMMMMMMMMMMMMMMMMMMNNNNNmmNh+-`/o+-     .//--::-\r\n# .------`      -::-::::::osssssyhhdmNNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMh`  -/-`      ://--::-\r\n#  `.-----`      ---------yNNNMMMMMMMMNNmmmmmmNNNMMMMMMMMMMMMMMMMMMMMMh.  `. .      `:::--::-\r\n# /` `-----`     `--:-----+MMMMMMMMMMMh++++++++ooosyhNMMMMMMMMMMMMMMMy`     `-      -::--::::\r\n# o+.  `.---`     `-::-----mMMMMMMMMMMNy+ssyyyyso++/+dMMMMMMMMMMMMMN+`      -.     .:::-:::::\r\n# -//-`  `.--.`    `-------oMMMMMMMMMMMMNmdddmmmmmhdNMMMMMMMMMMMMmo.       `:.    `:::-::::::\r\n# :-```     `..`     .------ymNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmy/`         -:.    -:::-::::::\r\n# ooo+//:-.`    `     .-----:ddddmNMMMMMMMMMMMMMMMMMMMMMMMNho:`           -::`   .///-:::::::\r\n# oooooo+++-           `-:::-+ddddhddmNMMMMMMMMMMMMMMNdy+-`             `-:::`  `////-:::::::\r\n# oooooo++:              .::::.+dddddddhddmmMMMMNds+-`               `.-:::::` `/+++-::::::::\r\n# oooooo+:                `:/// `sdmddddddddhdy-`                 .-:::::::::  /ooo/-::::::/:\r\n\r\n# ----..../hNMMMMNNNmyyhdddyhmmmmdddmmmmmmmNmy- `.-+hmdsmmNmmmmhydmmmhs/.+NNNMh-...------:/+y\r\n# --....+mMMMMMNNNmyydmmhosddmmdoyhymmmmmmmm+``-/shmmhsddmmmmmmmdsydmmmmmyodNNMNy.`...----:+s\r\n# -...omMMNNNNNNNyydmhyosdmmmmyohs/hmmmmmmm/-:ohmmNmhymhsdmmmsddmdhsddmmdhhdNNMMMNs-`....-:+o\r\n# ..+dMNNNmdmmmhshhyys:hdmmmdohdyymNNmmmmmmdddmmmhsdommmohdmmdohddddshdmmmmdhmMMMMMNh/....:/o\r\n# :dNdNNNmmdydsyysyy+sdysdmssddsdNNNmmmmdmmmdmmm:.-hdmddhoddddd+hddddsyddmmmmhhdNMMMMMd+.`-/o\r\n# NNy+Nmmmmmdoyyhy/+hdmddh+shdsdNNmmmmhydds:hmm:``.ydmmddyoddddh+ysdddyyddddmdddyhdmNMMMNy//o\r\n# +.`ommmmmh+yhhs+ydddddh-+ydohmNNmmmyyhs-`-mmo``..ymmmmmdssdddm+yysdddsshddddddddhyydNMMMMNd\r\n# ``-mmmmmy/ydyoyddmdddy.-yhoydhmmmmohs-```+Nd.....smNmmdddosdddh:h+yddhssdddddddddmdhydmNMMM\r\n# `.dNmmmoshysydmdddddy.`+dysdhsNNd/+-..```hNs.....+mmmmyhdd+sddm/hohshhhoydddhddddmmmmdyhNMM\r\n# `yNmmmsysoyddmmdddmd.`.hdomhsmNd-``.``.:-mN:``..`.mmmmmddddoodm+hoddsyhdohddsoydmmmmmmmhhMM\r\n# +NNNmsooysosddmddddo``:mohNodNm-````.-+o:Nm. -`.``smmmmmmmmmo:s/oodmdsydd/ohdh+/shmmmmmmdNM\r\n# NNmhyosoy+hdddddddd...oh/Nh+Nm:````-+oso:md`-o/```-mmmmmmmmmmh:`-/ddhdyymy.-odmy/:odmddmNNM\r\n# yoo+yhdmhydmdddmddy`::hosNohNs```./oymNd:mh`shs/. `smmdsmmmmmNm/-`+s+/syymo`.:ymNs-/yy+dNMM\r\n# y/ooNNNm+/ydddmmmdh-/sd/dN+dN-`./ohmMMMN/my:NMMmy:`.hds+:odNNNNy`/-.-.-/++m/`.-/dNh--+//mMM\r\n# :`:/so+:.:dmmmmmmmdo:hy+NN/mh.-+ohmmmddd:y+oNMMMMmy/:hs/+.-+hNN/-Nmy:...../d-``-:smh....oMM\r\n# ` ---..``-mmmmmmmdyy.y+yNN.d/ohmNNNNmmdd+o-:oodMMMMNy/y::+.`.:o`yMMMmh+:...:/```--+dy..-/mM\r\n# - ---.-h+.dmmmmmdmho++/dMm -`:/:://ososy+/:oNNNMMMMMMmos-:/-.  `+ymNNmdhy+:-` ..`-:/ho.-+hM\r\n# -`---:mMd-dmmmmmdmmms/`++-             ./-++hmMMMMMMMMNs+.s+-`  ``.-/syhhso+:.````::/o.-+yN\r\n# -`-:-:NMMssmmmmmmdmmNh+./-.-`.   ``  /-..:-sMMMMMMMMMMMMd:ohyo:.`-//:--:+yhhs/-.` .:::.-+yh\r\n# /-./:-+NMm-dmmdddddmmmmho-om- ://s+ /Nddmmo:MMMMMMMMMMMMMh``-::/:.`-osyyso.:.-:...-:....+sy\r\n# :-.:/:-/Nm-+mmmmddddmmmmmhosy.ssy++yNMMMMMN/mMMMMMMMMMMMy.`     ..  -yNNmy....::.`:-.-``/hM\r\n#    `-::-+mmohmmmddddddddmmmdy+yNMMMMMMMMMMMdoNNNNNNNNMMMy`.`..  sd: `+MNo.--.`://`..---`-hM\r\n# :::-.` ``:dMyymmmdddddddddddddysymNMMMMMMMMNyodmdmmmmNNNy/oo::.oMMmhdmy-...:.`:/:`-//:-``hM\r\n# ``    `...-oy:ymmmhsddddddddhdhyysyhmNMMMNNNmyddddsydmmNNhhyshNMMMMMN+.``:.`.`:/-://///:.:y\r\n#    .://:..-:-.`yNNd+-ohdddddddho+ssssshmNNNNmmdddh`-ydmNNMMMMMMMMMMh-...`.:-  :://::///:/ss\r\n#  ./++/--::`:-. `hNNm+`.odmmmdddhsosyso+osdNNNmmmmh`.hmNMMMMMMMMMMMs..---.`.-. -.-::::-:/+yh\r\n# -+///--:::`---. .dNNN+  -sdmdmdddhyshNdy+/ohNNNmdy:yNNMMMMMMMMMMN+..--:::::-. .--`.-//-:+yd\r\n# /::::`-:::-`-`/ `-mMMm-`  .ohmmdddddysdNNho/+ymdhdMMMMMMMMMMMMMN/..---:::::/:-:-..`.----:yd\r\n# h:::-``.----`.:``.+NNNo``   -/yddmmdddyyNMMdo-oNMMMMMMMMMMMMMMd:.----::::::/-:///:.``..``:y\r\n# Ms---.`...--.:.`:o:mMNd```  -//:osshdddyoyNNNy`sMMMMMMMMMMMMNs..---:::::::/::////+:` :/:--.\r\n# sNh/-.````` .`./oo/yNMN-``` :+++/:+/:ydddo+dmNy-MMMMMMMMMNdo-.---:::::::://:///+++/  ./++o+\r\n# -omMh/.     ./++++:hNNN: `` :oooo+///./hddoyNMN/MMMMMNmy+-.---::::::://///////+++/.. ./+oyh\r\n# `-:smmo:+o+osss+/:-mNNs` ` `///+ooo+-: -hmm/dMMsMNho/-.---:::::::///////////+++/--/+`/++oys\r\n# endregion---------------------------------------------------------------------------------------|\r\n\r\nimport sys\r\nfrom heapq import *\r\nfrom bisect import *\r\nfrom collections import *\r\nfrom math import ceil, floor, log, sqrt, gcd\r\n\r\nmod  = 1000000007\r\nmod9 = 998244353\r\nMX   = 200003\r\nnl   = \"\\n\"\r\n\r\ndef file_io():\r\n    sys.stdin = open(r\"\", \"r\")\r\n    sys.stdout = open(r\"\", \"w\")\r\n\r\ndef re(data=str): return data(sys.stdin.readline().rstrip())\r\ndef mp(data=str): return map(data, sys.stdin.readline().split())\r\n\r\ndef solve():\r\n    n, m = mp(int)\r\n    s = re()\r\n    t = re()\r\n    left = [0] * m\r\n    right = [0] * m\r\n    cur = 0\r\n    for i in range(n):\r\n        if s[i] == t[cur]:\r\n            left[cur] = i\r\n            cur += 1\r\n        if cur == m: break\r\n\r\n    cur = m - 1\r\n    for i in range(n - 1, -1, -1):\r\n        if s[i] == t[cur]:\r\n            right[cur] = i\r\n            cur -= 1\r\n        if cur == -1: break\r\n\r\n    ans = -1e18\r\n    for i in range(m - 1):\r\n        ans = max(ans, right[i + 1] - left[i])\r\n    print(ans)\r\n\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n    return None\r\n\r\ndef main():\r\n    # file_io()\r\n    tests = 1; # tests = re(int)\r\n    for tc in range(1, tests + 1): solve()\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n",
    "prob_desc_created_at": "1614071100",
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "two pointers"
    ],
    "hidden_unit_tests": ""
}