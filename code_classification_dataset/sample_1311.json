{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\", \"4\", \"13\"]",
    "src_uid": "3b3b2408609082fa5c3a0d55bb65d29a",
    "prob_desc_notes": "NoteIn the first example, you can change $$$1$$$ to $$$-1$$$ or $$$-1$$$ to $$$1$$$ in $$$2$$$ coins.In the second example, you have to apply at least $$$4$$$ operations for the product not to be $$$0$$$.In the third example, you can change $$$-5$$$ to $$$-1$$$ in $$$4$$$ coins, $$$-3$$$ to $$$-1$$$ in $$$2$$$ coins, $$$5$$$ to $$$1$$$ in $$$4$$$ coins, $$$3$$$ to $$$1$$$ in $$$2$$$ coins, $$$0$$$ to $$$1$$$ in $$$1$$$ coin.",
    "prob_desc_description": "You are given $$$n$$$ numbers $$$a_1, a_2, \\dots, a_n$$$. With a cost of one coin you can perform the following operation:Choose one of these numbers and add or subtract $$$1$$$ from it.In particular, we can apply this operation to the same number several times.We want to make the product of all these numbers equal to $$$1$$$, in other words, we want $$$a_1 \\cdot a_2$$$ $$$\\dots$$$ $$$\\cdot a_n = 1$$$. For example, for $$$n = 3$$$ and numbers $$$[1, -3, 0]$$$ we can make product equal to $$$1$$$ in $$$3$$$ coins: add $$$1$$$ to second element, add $$$1$$$ to second element again, subtract $$$1$$$ from third element, so that array becomes $$$[1, -1, -1]$$$. And $$$1\\cdot (-1) \\cdot (-1) = 1$$$.What is the minimum cost we will have to pay to do that?",
    "prob_desc_output_spec": "Output a single number — the minimal number of coins you need to pay to make the product equal to $$$1$$$.",
    "prob_desc_input_spec": "The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$) — the number of numbers. The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$-10^9 \\le a_i \\le 10^9$$$) — the numbers.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_008.jsonl",
    "code_uid": "9446b47bf88e949ff6e257463f2317f9",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n-1 1\", \"4\\n0 0 0 0\", \"5\\n-5 -3 5 3 0\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\na = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    ans += abs(1 - a[i])\ncount = 0\nfor i in range(n):\n    if a[i] < 0 :\n        count += 1\nif count%2 != 0 :\n    for i in range(n):\n        if a[i] == 0 :\n            ans -= 2\n            break\nprint(ans - (count//2)*4)",
    "prob_desc_created_at": "1566135900",
    "tags": [
        "dp",
        "implementation"
    ],
    "hidden_unit_tests": ""
}