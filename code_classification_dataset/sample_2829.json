{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1 2 3\", \"1 2\"]",
    "src_uid": "2e6e21ce00b438f51ae4b503ca7c0a1e",
    "prob_desc_notes": null,
    "prob_desc_description": "On a history lesson the teacher asked Vasya to name the dates when n famous events took place. He doesn't remembers the exact dates but he remembers a segment of days [li, ri] (inclusive) on which the event could have taken place. However Vasya also remembers that there was at most one event in one day. Help him choose such n dates of famous events that will fulfill both conditions. It is guaranteed that it is possible.",
    "prob_desc_output_spec": "Print n numbers — the dates on which the events took place. If there are several solutions, print any of them. It is guaranteed that a solution exists.",
    "prob_desc_input_spec": "The first line contains one integer n (1 ≤ n ≤ 100) — the number of known events. Then follow n lines containing two integers li and ri each (1 ≤ li ≤ ri ≤ 107) — the earliest acceptable date and the latest acceptable date of the i-th event.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_032.jsonl",
    "code_uid": "1b232dfdfd8c33982d40adda6b2df1d2",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n1 2\\n2 3\\n3 4\", \"2\\n1 3\\n1 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "import collections\n\ndef process(input):\n\tdates = []\n\tn = int(next(input))\n\tfor i, line in enumerate(input):\n\t\tline = line.rstrip(\"\\r\\n\")\n\t\tstart, end = line.split(\" \")\n\t\tdates.append([int(start), int(end), i])\n\n\td = {}\n\tfor i in xrange(n):\n\t\tstart, index = min_date(dates)\n\t\td[index] = start\n\tkeys = sorted(d)\n\treturn \" \".join(str(d[key]) for key in keys)\n\n\t\ndef min_date(dates):\n\tstart_min, end_min, j_min = dates[0]\n\ti_min = 0\n\tfor i, date in enumerate(dates):\n\t\tstart, end, j = date\n\t\tif start < start_min or (start == start_min and end < end_min):\n\t\t\tstart_min, end_min, i_min, j_min = start, end, i, j\n\t\t\n\tdates.pop(i_min)\n\t\n\tfor date in dates:\n\t\tdate[0] = max(date[0], start_min + 1)\n\n\treturn start_min, j_min\n\n\n#~ if __name__ == \"__main__\":\n\t#~ for i in range(1, 8):\n\t\t#~ expected = next(open(\"output\" + str(i))).rstrip(\"\\r\\n\")\n\t\t#~ actual = process(open(\"input\" + str(i))).rstrip(\"\\r\\n\")\n\t\t#~ print \"test %s\" % i,\n\t\t#~ try:\n\t\t\t#~ assert actual == expected\n\t\t#~ except:\n\t\t\t#~ print actual\n\t\t#~ else:\n\t\t\t#~ print \"ok\"\nimport sys\nprint process(sys.stdin)\n",
    "prob_desc_created_at": "1289646000",
    "tags": [
        "meet-in-the-middle",
        "sortings",
        "greedy"
    ],
    "hidden_unit_tests": ""
}