{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1 5 2 4 3\", \"1 2 3\", \"3 2 1\"]",
    "src_uid": "75cc5b55c51217966cbdd639a68f0724",
    "prob_desc_notes": null,
    "prob_desc_description": "Permutation p is an ordered set of integers p1,  p2,  ...,  pn, consisting of n distinct positive integers, each of them doesn't exceed n. We'll denote the i-th element of permutation p as pi. We'll call number n the size or the length of permutation p1,  p2,  ...,  pn.The decreasing coefficient of permutation p1, p2, ..., pn is the number of such i (1 ≤ i &lt; n), that pi &gt; pi + 1.You have numbers n and k. Your task is to print the permutation of length n with decreasing coefficient k.",
    "prob_desc_output_spec": "In a single line print n space-separated integers: p1, p2, ..., pn — the permutation of length n with decreasing coefficient k.  If there are several permutations that meet this condition, print any of them. It is guaranteed that the permutation with the sought parameters exists.",
    "prob_desc_input_spec": "The single line contains two space-separated integers: n, k (1 ≤ n ≤ 105, 0 ≤ k &lt; n) — the permutation length and the decreasing coefficient.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1100,
    "file_name": "train_005.jsonl",
    "code_uid": "718845b51f84c893a6ae9334e503d454",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5 2\", \"3 0\", \"3 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "n,k=map(int,raw_input().split())\nfor i in range(1,n-k):print i\nfor i in reversed(range(n-k,n+1)):print i",
    "prob_desc_created_at": "1363879800",
    "tags": [
        "implementation",
        "greedy"
    ],
    "hidden_unit_tests": ""
}