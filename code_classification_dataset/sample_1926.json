{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1 2 3 \\n6 5 4 \\n3 \\n1 \\n2\"]",
    "src_uid": "0eab9d2dd60d38f68d49f30cff918fce",
    "prob_desc_notes": "NoteConsider the first test case. The matrix is $$$2 \\times 3$$$. You are given the rows and columns in arbitrary order.One of the rows is $$$[6, 5, 4]$$$. One of the rows is $$$[1, 2, 3]$$$.One of the columns is $$$[1, 6]$$$. One of the columns is $$$[2, 5]$$$. One of the columns is $$$[3, 4]$$$.You are to reconstruct the matrix. The answer is given in the output.",
    "prob_desc_description": "All techniques in the ninja world consist of hand seals. At the moment Naruto is learning a new technique, which consists of $$$n\\cdot m$$$ different seals, denoted by distinct numbers. All of them were written in an $$$n\\times m$$$ table.The table is lost now. Naruto managed to remember elements of each row from left to right, and elements of each column from top to bottom, but he doesn't remember the order of rows and columns. Please restore the table consistent with this data so that Naruto will be able to learn the new technique.",
    "prob_desc_output_spec": "For each test case, output $$$n$$$ lines with $$$m$$$ space-separated integers each, denoting the restored table. One can show that the answer is always unique.",
    "prob_desc_input_spec": "The first line of the input contains the only integer $$$t$$$ ($$$1\\leq t\\leq 100\\,000$$$) denoting the number of test cases. Their descriptions follow. The first line of each test case description consists of two space-separated integers $$$n$$$ and $$$m$$$ ($$$1 \\leq n, m \\leq 500$$$) standing for the number of rows and columns in the table, respectively. All hand seals are encoded by the positive integers from $$$1$$$ to $$$n\\cdot m$$$. The following $$$n$$$ lines contain $$$m$$$ space separated integers each, denoting elements of an arbitrary row in the table left to right. The following $$$m$$$ lines contain $$$n$$$ space separated integers each, denoting elements of an arbitrary column in the table top to bottom. Sum of $$$nm$$$ over all test cases does not exceed $$$250\\,000$$$. It is guaranteed that each row occurs in the input exactly once, as well as each column. It is also guaranteed that each number from $$$1$$$ to $$$nm$$$ occurs exactly once in all rows, as well as in all columns. Finally, it is guaranteed that a table consistent with the input exists.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1100,
    "file_name": "train_014.jsonl",
    "code_uid": "dfe0a61113d7bfd3c865ef9834e54612",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n2 3\\n6 5 4\\n1 2 3\\n1 6\\n2 5\\n3 4\\n3 1\\n2\\n3\\n1\\n3 1 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n , m = map(int, input().split())\n    dp = {}\n    for _ in range(n):\n        cur = list(map(int, input().split()))\n        dp[cur[0]] = cur\n    order = []\n    for _ in range(m):\n        cur = list(map(int, input().split()))\n        if cur[0] in dp:\n            order = cur\n    for i in order:\n        print(*dp[i])\n    ",
    "prob_desc_created_at": "1603623900",
    "tags": [
        "constructive algorithms",
        "implementation"
    ],
    "hidden_unit_tests": ""
}