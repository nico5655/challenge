{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"2\\n1\\n2\\n0\"]",
    "src_uid": "184314d3aa83d48b71a95ae4b48de457",
    "prob_desc_notes": "NoteThe given sample is illustrated in the figure below.   Let's describe the result for the first merchant. The merchant's warehouse is located in city 1 and his shop is in city 5. Let us note that if either road, (1, 2) or (2, 3) is destroyed, there won't be any path between cities 1 and 5 anymore. If any other road is destroyed, the path will be preserved. That's why for the given merchant the answer is 2.",
    "prob_desc_description": "In ABBYY a wonderful Smart Beaver lives. This time, he began to study history. When he read about the Roman Empire, he became interested in the life of merchants.The Roman Empire consisted of n cities numbered from 1 to n. It also had m bidirectional roads numbered from 1 to m. Each road connected two different cities. Any two cities were connected by no more than one road.We say that there is a path between cities c1 and c2 if there exists a finite sequence of cities t1, t2, ..., tp (p ≥ 1) such that:  t1 = c1  tp = c2  for any i (1 ≤ i &lt; p), cities ti and ti + 1 are connected by a road We know that there existed a path between any two cities in the Roman Empire.In the Empire k merchants lived numbered from 1 to k. For each merchant we know a pair of numbers si and li, where si is the number of the city where this merchant's warehouse is, and li is the number of the city where his shop is. The shop and the warehouse could be located in different cities, so the merchants had to deliver goods from the warehouse to the shop.Let's call a road important for the merchant if its destruction threatens to ruin the merchant, that is, without this road there is no path from the merchant's warehouse to his shop. Merchants in the Roman Empire are very greedy, so each merchant pays a tax (1 dinar) only for those roads which are important for him. In other words, each merchant pays di dinars of tax, where di (di ≥ 0) is the number of roads important for the i-th merchant.The tax collection day came in the Empire. The Smart Beaver from ABBYY is very curious by nature, so he decided to count how many dinars each merchant had paid that day. And now he needs your help.",
    "prob_desc_output_spec": "Print exactly k lines, the i-th line should contain a single integer di — the number of dinars that the i-th merchant paid.",
    "prob_desc_input_spec": "The first input line contains two integers n and m, separated by a space, n is the number of cities, and m is the number of roads in the empire. The following m lines contain pairs of integers ai, bi (1 ≤ ai, bi ≤ n, ai ≠ bi), separated by a space — the numbers of cities connected by the i-th road. It is guaranteed that any two cities are connected by no more than one road and that there exists a path between any two cities in the Roman Empire. The next line contains a single integer k — the number of merchants in the empire. The following k lines contain pairs of integers si, li (1 ≤ si, li ≤ n), separated by a space, — si is the number of the city in which the warehouse of the i-th merchant is located, and li is the number of the city in which the shop of the i-th merchant is located. The input limitations for getting 20 points are:    1 ≤ n ≤ 200  1 ≤ m ≤ 200  1 ≤ k ≤ 200  The input limitations for getting 50 points are:    1 ≤ n ≤ 2000  1 ≤ m ≤ 2000  1 ≤ k ≤ 2000  The input limitations for getting 100 points are:    1 ≤ n ≤ 105  1 ≤ m ≤ 105  1 ≤ k ≤ 105 ",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_021.jsonl",
    "code_uid": "fc06cf35f58f3d4fc3a8f0aab9fbedb0",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"7 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n5 7\\n3 5\\n4 7\\n4\\n1 5\\n2 4\\n2 6\\n4 7\"]",
    "exec_outcome": "PASSED",
    "source_code": "from collections import defaultdict\n\nn,m = [int(x) for x in raw_input().split()]\n\nroads = []\n\nfor i in range(m):\n    roads.append(tuple([int(x) for x in raw_input().split()]))\n\ncities = defaultdict(list)\nfor i in range(m):\n    a,b = roads[i]\n    cities[a].append(b)\n    cities[b].append(a)\n\nmerchants = []\n\nk = input()\n\nfor i in range(k):\n    merchants.append(tuple([int(x) for x in raw_input().split()]))\n\n\ndinars = [0] * k\n\nfor i in range(m):\n    a,b = roads[i]\n    c = set()\n    s = [a]\n    not_important = False\n    \n    while s:\n        x = s.pop()\n        c.add(x)\n        for y in cities[x]:\n            if x == a and y == b:\n                continue\n            if y == b:\n                not_important = True\n                break\n            if y not in c:\n                s.append(y)\n        if not_important:\n            break\n    if not not_important:\n        for i, (s,l) in enumerate(merchants):\n            if ((s in c) ^ (l in c)) == True:\n                dinars[i] += 1\n\nfor d in dinars:\n    print d",
    "prob_desc_created_at": "1335614400",
    "tags": [],
    "hidden_unit_tests": ""
}