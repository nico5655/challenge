{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"9 10\", \":(\", \"4 4 10\"]",
    "src_uid": "27ef62139533982f0857d733fad5c0d6",
    "prob_desc_notes": "NoteIn the first sample two residents should swap places, after that the first resident has 10 dollars and he is at the head of the line and the second resident will have 9 coins and he will be at the end of the line. In the second sample it is impossible to achieve the desired result.In the third sample the first person can swap with the second one, then they will have the following numbers of dollars: 4 11 3, then the second person (in the new line) swaps with the third one, and the resulting numbers of dollars will equal to: 4 4 10. In this line everybody will be happy.",
    "prob_desc_description": "Do you like summer? Residents of Berland do. They especially love eating ice cream in the hot summer. So this summer day a large queue of n Berland residents lined up in front of the ice cream stall. We know that each of them has a certain amount of berland dollars with them. The residents of Berland are nice people, so each person agrees to swap places with the person right behind him for just 1 dollar. More formally, if person a stands just behind person b, then person a can pay person b 1 dollar, then a and b get swapped. Of course, if person a has zero dollars, he can not swap places with person b.Residents of Berland are strange people. In particular, they get upset when there is someone with a strictly smaller sum of money in the line in front of them.Can you help the residents of Berland form such order in the line so that they were all happy? A happy resident is the one who stands first in the line or the one in front of who another resident stands with not less number of dollars. Note that the people of Berland are people of honor and they agree to swap places only in the manner described above.",
    "prob_desc_output_spec": "If it is impossible to make all the residents happy, print \":(\" without the quotes. Otherwise, print in the single line n space-separated integers, the i-th of them must be equal to the number of money of the person on position i in the new line. If there are multiple answers, print any of them.",
    "prob_desc_input_spec": "The first line contains integer n (1 ≤ n ≤ 200 000) — the number of residents who stand in the line. The second line contains n space-separated integers ai (0 ≤ ai ≤ 109), where ai is the number of Berland dollars of a man standing on the i-th position in the line. The positions are numbered starting from the end of the line. ",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2200,
    "file_name": "train_026.jsonl",
    "code_uid": "425f767c666965a94709a37ca8dd3c49",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n11 8\", \"5\\n10 9 7 10 6\", \"3\\n12 3 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "N = int(input())\nnums = list(map(int, input().split()))\n\nfor i in range(len(nums)):\n    nums[i] += i\n\nnums.sort()\nfor i in range(len(nums)):\n    nums[i] -= i\n    if i and nums[i] < nums[i-1]:\n        print(\":(\")\n        exit()\n\nprint(' '.join(list(map(str, nums))))\n",
    "prob_desc_created_at": "1433595600",
    "tags": [
        "constructive algorithms",
        "sortings",
        "greedy"
    ],
    "hidden_unit_tests": ""
}