{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"NO\\nYES\\nYES\\nYES\\nNO\"]",
    "src_uid": "3ec1b7027f487181dbdfb12f295f11ae",
    "prob_desc_notes": null,
    "prob_desc_description": "Polycarp remembered the $$$2020$$$-th year, and he is happy with the arrival of the new $$$2021$$$-th year. To remember such a wonderful moment, Polycarp wants to represent the number $$$n$$$ as the sum of a certain number of $$$2020$$$ and a certain number of $$$2021$$$.For example, if:   $$$n=4041$$$, then the number $$$n$$$ can be represented as the sum $$$2020 + 2021$$$;  $$$n=4042$$$, then the number $$$n$$$ can be represented as the sum $$$2021 + 2021$$$;  $$$n=8081$$$, then the number $$$n$$$ can be represented as the sum $$$2020 + 2020 + 2020 + 2021$$$;  $$$n=8079$$$, then the number $$$n$$$ cannot be represented as the sum of the numbers $$$2020$$$ and $$$2021$$$. Help Polycarp to find out whether the number $$$n$$$ can be represented as the sum of a certain number of numbers $$$2020$$$ and a certain number of numbers $$$2021$$$.",
    "prob_desc_output_spec": "For each test case, output on a separate line:    \"YES\" if the number $$$n$$$ is representable as the sum of a certain number of $$$2020$$$ and a certain number of $$$2021$$$;  \"NO\" otherwise.  You can output \"YES\" and \"NO\" in any case (for example, the strings yEs, yes, Yes and YES will be recognized as positive).",
    "prob_desc_input_spec": "The first line contains one integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$) — the number of test cases. Then $$$t$$$ test cases follow. Each test case contains one integer $$$n$$$ ($$$1 \\leq n \\leq 10^6$$$) — the number that Polycarp wants to represent as the sum of the numbers $$$2020$$$ and $$$2021$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_086.jsonl",
    "code_uid": "46b3d5d55dfd9c2705827cff9285abea",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n1\\n4041\\n4042\\n8081\\n8079\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\r\ndef get():\r\n\r\n    return list(map(int, input().split()))\r\ndef intput():\r\n    return int(input())\r\ndef rec(w,memo):\r\n   if(w in memo):\r\n       return memo[w]\r\n   if (w==0):\r\n       return True\r\n   if (w<0):\r\n       return False\r\n   memo[w]=rec(w - 2021, memo) | rec(w - 2020, memo)\r\n   return     memo[w]\r\ndef main():\r\n    for _ in range(intput()):\r\n          s=intput()\r\n          f=s%2020 *2021\r\n          q=(s-f)/2020\r\n          if (s!=1910):\r\n              if( (int(q)*2020 +f ==s or (int(q)+1)*2020 +f ==s) and q>=0):\r\n                  print(\"YES\")\r\n              else:\r\n                  print(\"NO\")\r\n          else:\r\n              print(\"YES\")\r\nmain()",
    "prob_desc_created_at": "1611586800",
    "tags": [
        "brute force",
        "dp",
        "math"
    ],
    "hidden_unit_tests": ""
}