{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"12\\n32\\n8\\n50\", \"12\\n45\"]",
    "src_uid": "165467dd842b47bc2d932b04e85ae8d7",
    "prob_desc_notes": null,
    "prob_desc_description": "By the age of three Smart Beaver mastered all arithmetic operations and got this summer homework from the amazed teacher:You are given a sequence of integers a1, a2, ..., an. Your task is to perform on it m consecutive operations of the following type:  For given numbers xi and vi assign value vi to element axi.  For given numbers li and ri you've got to calculate sum , where f0 = f1 = 1 and at i ≥ 2: fi = fi - 1 + fi - 2.  For a group of three numbers li ri di you should increase value ax by di for all x (li ≤ x ≤ ri). Smart Beaver planned a tour around great Canadian lakes, so he asked you to help him solve the given problem.",
    "prob_desc_output_spec": "For each query print the calculated sum modulo 1000000000 (109).",
    "prob_desc_input_spec": "The first line contains two integers n and m (1 ≤ n, m ≤ 2·105) — the number of integers in the sequence and the number of operations, correspondingly. The second line contains n integers a1, a2, ..., an (0 ≤ ai ≤ 105). Then follow m lines, each describes an operation. Each line starts with an integer ti (1 ≤ ti ≤ 3) — the operation type:    if ti = 1, then next follow two integers xi vi (1 ≤ xi ≤ n, 0 ≤ vi ≤ 105);  if ti = 2, then next follow two integers li ri (1 ≤ li ≤ ri ≤ n);  if ti = 3, then next follow three integers li ri di (1 ≤ li ≤ ri ≤ n, 0 ≤ di ≤ 105).  The input limits for scoring 30 points are (subproblem E1):    It is guaranteed that n does not exceed 100, m does not exceed 10000 and there will be no queries of the 3-rd type.  The input limits for scoring 70 points are (subproblems E1+E2):    It is guaranteed that there will be queries of the 1-st and 2-nd type only.  The input limits for scoring 100 points are (subproblems E1+E2+E3):    No extra limitations. ",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1500,
    "file_name": "train_045.jsonl",
    "code_uid": "58e93bbeee72a48e091445103da85cdc",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5 5\\n1 3 1 2 4\\n2 1 4\\n2 1 5\\n2 2 4\\n1 3 10\\n2 1 5\", \"5 4\\n1 3 1 2 4\\n3 1 4 1\\n2 2 4\\n1 2 10\\n2 1 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(m):\n    t, l, r = map(int, input().split())\n    if t == 1:\n        a[l-1] = r\n    else:\n        s = 0\n        fiba = fibb = 1\n        for i in range(l-1, r):\n            s += fiba * a[i]\n            fiba, fibb = fibb, fiba + fibb\n        print(s % 1000000000)\n",
    "prob_desc_created_at": "1371042000",
    "tags": [
        "data structures",
        "brute force"
    ],
    "hidden_unit_tests": ""
}