{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1\\n1\", \"0\"]",
    "src_uid": "c1cfe1f67217afd4c3c30a6327e0add9",
    "prob_desc_notes": "NoteIn the first sample, the first point forms exactly a  angle with all other pairs of points, so it is good.In the second sample, along the cd plane, we can see the points look as follows:We can see that all angles here are acute, so no points are good.",
    "prob_desc_description": "You are given set of n points in 5-dimensional space. The points are labeled from 1 to n. No two points coincide.We will call point a bad if there are different points b and c, not equal to a, from the given set such that angle between vectors  and  is acute (i.e. strictly less than ). Otherwise, the point is called good.The angle between vectors  and  in 5-dimensional space is defined as , where  is the scalar product and  is length of .Given the list of points, print the indices of the good points in ascending order.",
    "prob_desc_output_spec": "First, print a single integer k — the number of good points. Then, print k integers, each on their own line — the indices of the good points in ascending order.",
    "prob_desc_input_spec": "The first line of input contains a single integer n (1 ≤ n ≤ 103) — the number of points. The next n lines of input contain five integers ai, bi, ci, di, ei (|ai|, |bi|, |ci|, |di|, |ei| ≤ 103)  — the coordinates of the i-th point. All points are distinct.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_016.jsonl",
    "code_uid": "66bd3bbe9aec141bb587329955455bbc",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n0 0 0 0 0\\n1 0 0 0 0\\n0 1 0 0 0\\n0 0 1 0 0\\n0 0 0 1 0\\n0 0 0 0 1\", \"3\\n0 0 1 2 0\\n0 0 9 2 0\\n0 0 5 9 0\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\np = [tuple(map(int, input().split())) for i in range(n)]\n\ndef d(a, b):\n    return tuple(x - y for x, y in zip(a, b))\n\ndef m(a, b):\n    return sum(x * y for x, y in zip(a, b))\n\ngood_points = []\nfor i in range(n):\n    good = True\n\n    for j in range(n):\n        if j == i:\n            continue\n        \n        ab = d(p[j], p[i])\n\n        for k in range(j + 1, n):\n            if k == i:\n                continue\n            \n            ac = d(p[k], p[i])\n            \n            if m(ab, ac) > 0:\n                good = False\n                break\n        \n        if not good:\n            break\n    \n    if good:\n        good_points.append(i)\n\nprint(len(good_points))\nfor i in good_points:\n    print(i + 1)\n",
    "prob_desc_created_at": "1504535700",
    "tags": [
        "geometry",
        "brute force",
        "math"
    ],
    "hidden_unit_tests": ""
}