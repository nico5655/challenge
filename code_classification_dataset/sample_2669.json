{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1\", \"2\", \"3\"]",
    "src_uid": "d436c7a3b7f07c9f026d00bdf677908d",
    "prob_desc_notes": null,
    "prob_desc_description": "As Valeric and Valerko were watching one of the last Euro Championship games in a sports bar, they broke a mug. Of course, the guys paid for it but the barman said that he will let them watch football in his bar only if they help his son complete a programming task. The task goes like that.Let's consider a set of functions of the following form:  Let's define a sum of n functions y1(x), ..., yn(x) of the given type as function s(x) = y1(x) + ... + yn(x) for any x. It's easy to show that in this case the graph s(x) is a polyline. You are given n functions of the given type, your task is to find the number of angles that do not equal 180 degrees, in the graph s(x), that is the sum of the given functions.Valeric and Valerko really want to watch the next Euro Championship game, so they asked you to help them.",
    "prob_desc_output_spec": "Print a single number — the number of angles that do not equal 180 degrees in the graph of the polyline that equals the sum of the given functions.",
    "prob_desc_input_spec": "The first line contains integer n (1 ≤ n ≤ 105) — the number of functions. Each of the following n lines contains two space-separated integer numbers ki, bi ( - 109 ≤ ki, bi ≤ 109) that determine the i-th function.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_027.jsonl",
    "code_uid": "2f125ba738b3b397eea01f4af64e0cef",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"1\\n1 0\", \"3\\n1 0\\n0 2\\n-1 1\", \"3\\n-2 -4\\n1 7\\n-5 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin, stdout\nfrom decimal import Decimal\n\nn = int(stdin.readline())\nvisit = []\n\nfor i in range(n):\n    k, b = map(Decimal, stdin.readline().split())\n    \n    if not k:\n        continue\n        \n    visit.append(-b/k)\n\nvisit.sort()\n\nif len(visit):\n    ans = 1\nelse:\n    ans = 0\n    \ne = Decimal(10) ** Decimal(-10)\n\nfor i in range(1, len(visit)):\n    if visit[i] != visit[i - 1]:\n        ans += 1\n\nstdout.write(str(ans))",
    "prob_desc_created_at": "1339342200",
    "tags": [
        "sortings",
        "geometry",
        "math"
    ],
    "hidden_unit_tests": ""
}