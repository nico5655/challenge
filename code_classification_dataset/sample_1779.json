{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"82\", \"4\"]",
    "src_uid": "480defc596ee5bc800ea569fd76dc584",
    "prob_desc_notes": "NoteIn the first test example Toastman can choose nine cards with letter D and one additional card with any letter. For each card with D he will get 9 coins and for the additional card he will get 1 coin.",
    "prob_desc_description": "Appleman has n cards. Each card has an uppercase letter written on it. Toastman must choose k cards from Appleman's cards. Then Appleman should give Toastman some coins depending on the chosen cards. Formally, for each Toastman's card i you should calculate how much Toastman's cards have the letter equal to letter on ith, then sum up all these quantities, such a number of coins Appleman should give to Toastman.Given the description of Appleman's cards. What is the maximum number of coins Toastman can get?",
    "prob_desc_output_spec": "Print a single integer – the answer to the problem.",
    "prob_desc_input_spec": "The first line contains two integers n and k (1 ≤ k ≤ n ≤ 105). The next line contains n uppercase letters without spaces — the i-th letter describes the i-th card of the Appleman.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_012.jsonl",
    "code_uid": "f93a4a9e6c7dd1e8b15ca700abe2ad24",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"15 10\\nDZFDFZDFDDDDDDF\", \"6 4\\nYJSNPI\"]",
    "exec_outcome": "PASSED",
    "source_code": "n,k=map(int,raw_input().split())\nco=[0 for i in xrange(26)]\nfor i in raw_input().strip():\n    co[ord(i)-ord('A')]+=1\nco.sort()\nans=0\nfor i in co[::-1]:\n    take=min(k,i)\n    k-=take\n    ans+=take*take\nprint ans\n",
    "prob_desc_created_at": "1409061600",
    "tags": [
        "greedy"
    ],
    "hidden_unit_tests": ""
}