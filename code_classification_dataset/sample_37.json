{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"2.0000000000\", \"-1\", \"0.5000000000\"]",
    "src_uid": "1c2fc9449989d14d9eb02a390f36b7a6",
    "prob_desc_notes": "NoteIn sample test 1, you can charge the first device for the entire time until it hits zero power. The second device has enough power to last this time without being charged.In sample test 2, you can use the device indefinitely.In sample test 3, we can charge the third device for 2 / 5 of a second, then switch to charge the second device for a 1 / 10 of a second.",
    "prob_desc_description": "You have n devices that you want to use simultaneously.The i-th device uses ai units of power per second. This usage is continuous. That is, in λ seconds, the device will use λ·ai units of power. The i-th device currently has bi units of power stored. All devices can store an arbitrary amount of power.You have a single charger that can plug to any single device. The charger will add p units of power per second to a device. This charging is continuous. That is, if you plug in a device for λ seconds, it will gain λ·p units of power. You can switch which device is charging at any arbitrary unit of time (including real numbers), and the time it takes to switch is negligible.You are wondering, what is the maximum amount of time you can use the devices until one of them hits 0 units of power.If you can use the devices indefinitely, print -1. Otherwise, print the maximum amount of time before any one device hits 0 power.",
    "prob_desc_output_spec": "If you can use the devices indefinitely, print -1. Otherwise, print the maximum amount of time before any one device hits 0 power. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 4. Namely, let's assume that your answer is a and the answer of the jury is b. The checker program will consider your answer correct if .",
    "prob_desc_input_spec": "The first line contains two integers, n and p (1 ≤ n ≤ 100 000, 1 ≤ p ≤ 109) — the number of devices and the power of the charger. This is followed by n lines which contain two integers each. Line i contains the integers ai and bi (1 ≤ ai, bi ≤ 100 000) — the power of the device and the amount of power stored in the device in the beginning.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1800,
    "file_name": "train_000.jsonl",
    "code_uid": "64f5b4b8ec180aeaf58314d8bfe51fdf",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 1\\n2 2\\n2 1000\", \"1 100\\n1 1\", \"3 5\\n4 3\\n5 2\\n6 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, p = map(int, raw_input().strip().split())\n\nd = [None] * n\nfor i in range(n):\n    d[i] = map(int, raw_input().strip().split())\nif p >= sum(map(lambda x:x[0], d)):\n    print -1\nelse:\n    d.sort(cmp=lambda x,y:1 if x[1] * y[0] > y[1] * x[0] else -1)\n    res = 1e100\n    a_s, b_s = 0.0, 0.0\n    for i in range(n):\n        a_s += d[i][0]\n        b_s += d[i][1]\n        if a_s <= p: continue\n        res = min(res, b_s * 1. / (a_s - p))\n    print \"%.9f\" % res",
    "prob_desc_created_at": "1492356900",
    "tags": [
        "binary search",
        "math"
    ],
    "hidden_unit_tests": ""
}