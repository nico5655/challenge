{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"2\", \"4\"]",
    "src_uid": "d197a682b956f000422aeafd874816ce",
    "prob_desc_notes": "NoteIn the first example pairs $$$(2, 3)$$$ and $$$(1, 3)$$$ are valid. Pair $$$(2, 3)$$$ is valid since $$$a_2 = 7 \\rightarrow 11$$$, $$$a_3 = 14 \\rightarrow 11$$$ and $$$11 \\oplus 11 = 0$$$, where $$$\\oplus$$$ — bitwise exclusive or. Pair $$$(1, 3)$$$ is valid since $$$a_1 = 6 \\rightarrow 3$$$, $$$a_2 = 7 \\rightarrow 13$$$, $$$a_3 = 14 \\rightarrow 14$$$ and $$$3 \\oplus 13 \\oplus 14 = 0$$$.In the second example pairs $$$(1, 2)$$$, $$$(2, 3)$$$, $$$(3, 4)$$$ and $$$(1, 4)$$$ are valid.",
    "prob_desc_description": "Vasya has a sequence $$$a$$$ consisting of $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$. Vasya may pefrom the following operation: choose some number from the sequence and swap any pair of bits in its binary representation. For example, Vasya can transform number $$$6$$$ $$$(\\dots 00000000110_2)$$$ into $$$3$$$ $$$(\\dots 00000000011_2)$$$, $$$12$$$ $$$(\\dots 000000001100_2)$$$, $$$1026$$$ $$$(\\dots 10000000010_2)$$$ and many others. Vasya can use this operation any (possibly zero) number of times on any number from the sequence.Vasya names a sequence as good one, if, using operation mentioned above, he can obtain the sequence with bitwise exclusive or of all elements equal to $$$0$$$.For the given sequence $$$a_1, a_2, \\ldots, a_n$$$ Vasya'd like to calculate number of integer pairs $$$(l, r)$$$ such that $$$1 \\le l \\le r \\le n$$$ and sequence $$$a_l, a_{l + 1}, \\dots, a_r$$$ is good.",
    "prob_desc_output_spec": "Print one integer — the number of pairs $$$(l, r)$$$ such that $$$1 \\le l \\le r \\le n$$$ and the sequence $$$a_l, a_{l + 1}, \\dots, a_r$$$ is good.",
    "prob_desc_input_spec": "The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 3 \\cdot 10^5$$$) — length of the sequence. The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^{18}$$$) — the sequence $$$a$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 2000,
    "file_name": "train_035.jsonl",
    "code_uid": "d4c8c11b54023574d3a007f8d681d7a9",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n6 7 14\", \"4\\n1 2 1 16\"]",
    "exec_outcome": "PASSED",
    "source_code": "#!/usr/bin/env python3\nfrom __future__ import absolute_import\nimport sys\nfrom itertools import imap\n\ndef rint():\n    return imap(int, sys.stdin.readline().split())\n#lines = stdin.readlines()\n\ndef get_num1(i):\n    cnt = 0\n    while i:\n        if i%2:\n            cnt +=1\n        i //=2\n    return cnt\n\nn = int(raw_input())\n\na = list(rint())\n\nb = [get_num1(aa) for aa in a]\n\nans = 0\n#S0[i] : 1 if sum of 1s in ragne (0, i) is odd, else 0\nS0 = [0]*n\nS0[0] = b[0]%2\nfor i in xrange(1, n):\n    S0[i] = (S0[i-1] + b[i])%2\n\n#total even pairs in (0, n)\neven_cnt = S0.count(0)\n\nans = even_cnt\n\n# check total even pairs in (i, n)\nfor i in xrange(1, n):\n    if b[i-1] %2:\n        even_cnt = n - i - even_cnt\n    else:\n        even_cnt -= 1\n    ans += even_cnt\n\nfor i in xrange(n):\n    max_value = 0\n    sum_value = 0\n    for j in xrange(1, 62):\n        if i + j > n:\n            break\n        sum_value += b[i+j-1]\n        max_value = max(max_value, b[i+j-1])\n        if 2 * max_value > sum_value and sum_value%2 == 0:\n            ans -= 1\n\nprint ans\n",
    "prob_desc_created_at": "1537707900",
    "tags": [
        "dp",
        "bitmasks"
    ],
    "hidden_unit_tests": ""
}