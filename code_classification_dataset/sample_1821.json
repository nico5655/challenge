{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"7\", \"20\", \"2\", \"0\"]",
    "src_uid": "d40fcaf3e305910f66fec02f5507c327",
    "prob_desc_notes": "NoteIn the first example you can form the following barrels: [1, 2], [2, 2], [2, 3], [2, 3].In the second example you can form the following barrels: [10], [10].In the third example you can form the following barrels: [2, 5].In the fourth example difference between volumes of barrels in any partition is at least 2 so it is impossible to make barrels equal enough.",
    "prob_desc_description": "You have m = n·k wooden staves. The i-th stave has length ai. You have to assemble n barrels consisting of k staves each, you can use any k staves to construct a barrel. Each stave must belong to exactly one barrel.Let volume vj of barrel j be equal to the length of the minimal stave in it.  You want to assemble exactly n barrels with the maximal total sum of volumes. But you have to make them equal enough, so a difference between volumes of any pair of the resulting barrels must not exceed l, i.e. |vx - vy| ≤ l for any 1 ≤ x ≤ n and 1 ≤ y ≤ n.Print maximal total sum of volumes of equal enough barrels or 0 if it's impossible to satisfy the condition above.",
    "prob_desc_output_spec": "Print single integer — maximal total sum of the volumes of barrels or 0 if it's impossible to construct exactly n barrels satisfying the condition |vx - vy| ≤ l for any 1 ≤ x ≤ n and 1 ≤ y ≤ n.",
    "prob_desc_input_spec": "The first line contains three space-separated integers n, k and l (1 ≤ n, k ≤ 105, 1 ≤ n·k ≤ 105, 0 ≤ l ≤ 109). The second line contains m = n·k space-separated integers a1, a2, ..., am (1 ≤ ai ≤ 109) — lengths of staves.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1500,
    "file_name": "train_013.jsonl",
    "code_uid": "8fe7abfa0f2cce74aa8c5747eb259987",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4 2 1\\n2 2 1 2 3 2 2 3\", \"2 1 0\\n10 10\", \"1 2 1\\n5 2\", \"3 2 1\\n1 2 3 4 5 6\"]",
    "exec_outcome": "PASSED",
    "source_code": "def main():\n    n, k, l = map(int, input().split())\n    a = sorted(map(int, input().split()))\n\n    bound = 1\n    while bound < len(a) and a[bound] - a[0] <= l:\n        bound += 1\n\n    if bound < n:\n        print(0)\n        return\n\n    res = 0\n\n    i = 0\n    while n > 0:\n        res += a[i]\n        i = min(i + k, bound - n + 1)\n        n -= 1\n\n    print(res)\n\n\nmain()\n",
    "prob_desc_created_at": "1526913900",
    "tags": [
        "greedy"
    ],
    "hidden_unit_tests": ""
}