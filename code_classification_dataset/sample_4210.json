{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"166666669\", \"500000009\", \"500000007\"]",
    "src_uid": "987433ba0b6a115d05f79f512e329f7a",
    "prob_desc_notes": "NoteThis is the tree from the first sample:  For the first sample, the arrays are almost fixed. If node $$$2$$$ is chosen initially, then the only possible array is $$$[2, 1, 3]$$$ ($$$1$$$ inversion). If node $$$3$$$ is chosen initially, then the only possible array is $$$[3, 1, 2]$$$ ($$$2$$$ inversions). If node $$$1$$$ is chosen initially, the arrays $$$[1, 2, 3]$$$ ($$$0$$$ inversions) and $$$[1, 3, 2]$$$ ($$$1$$$ inversion) are the only possibilities and equiprobable. In total, the expected number of inversions is $$$\\frac{1}{3}\\cdot 1 + \\frac{1}{3} \\cdot 2 + \\frac{1}{3} \\cdot (\\frac{1}{2} \\cdot 0 + \\frac{1}{2} \\cdot 1) = \\frac{7}{6}$$$. $$$166666669 \\cdot 6 = 7 \\pmod {10^9 + 7}$$$, so the answer is $$$166666669$$$.This is the tree from the second sample:   This is the tree from the third sample:   ",
    "prob_desc_description": "You are given a tree consisting of $$$n$$$ nodes. You generate an array from the tree by marking nodes one by one.Initially, when no nodes are marked, a node is equiprobably chosen and marked from the entire tree. After that, until all nodes are marked, a node is equiprobably chosen and marked from the set of unmarked nodes with at least one edge to a marked node. It can be shown that the process marks all nodes in the tree. The final array $$$a$$$ is the list of the nodes' labels in order of the time each node was marked.Find the expected number of inversions in the array that is generated by the tree and the aforementioned process.The number of inversions in an array $$$a$$$ is the number of pairs of indices $$$(i, j)$$$ such that $$$i &lt; j$$$ and $$$a_i &gt; a_j$$$. For example, the array $$$[4, 1, 3, 2]$$$ contains $$$4$$$ inversions: $$$(1, 2)$$$, $$$(1, 3)$$$, $$$(1, 4)$$$, $$$(3, 4)$$$.",
    "prob_desc_output_spec": "Output the expected number of inversions in the generated array modulo $$$10^9+7$$$. Formally, let $$$M = 10^9+7$$$. It can be shown that the answer can be expressed as an irreducible fraction $$$\\frac{p}{q}$$$, where $$$p$$$ and $$$q$$$ are integers and $$$q \\not \\equiv 0 \\pmod{M}$$$. Output the integer equal to $$$p \\cdot q^{-1} \\bmod M$$$. In other words, output such an integer $$$x$$$ that $$$0 \\le x &lt; M$$$ and $$$x \\cdot q \\equiv p \\pmod{M}$$$.",
    "prob_desc_input_spec": "The first line contains a single integer $$$n$$$ ($$$2 \\le n \\le 200$$$) — the number of nodes in the tree. The next $$$n - 1$$$ lines each contains two integers $$$x$$$ and $$$y$$$ ($$$1 \\le x, y \\le n$$$; $$$x \\neq y$$$), denoting an edge between node $$$x$$$ and $$$y$$$. It's guaranteed that the given edges form a tree.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 2300,
    "file_name": "train_092.jsonl",
    "code_uid": "73b96d00c90909ef37de0a780994e1cc",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n1 2\\n1 3\", \"6\\n2 1\\n2 3\\n6 1\\n1 4\\n2 5\", \"5\\n1 2\\n1 3\\n1 4\\n2 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "m=10**9+7\r\nn=input()\r\nh=range(n)\r\nd=[n*[m]for f in h]\r\nfor f in h[1:]:a,b=map(int,raw_input().split());a-=1;b-=1;d[a][b]=d[b][a]=1;d[a][a]=d[b][b]=s=0\r\nfor k in h:\r\n for i in h:\r\n  for j in h:d[i][j]=min(d[i][j],d[i][k]+d[k][j])\r\nc=[[1]+n*[0]for f in[0]+h]\r\nfor i in h:\r\n for j in h:c[i+1][j+1]=(c[i][j+1]+c[i+1][j])*-~m/2%m\r\nfor i in h:\r\n for j in h[i+1:]:\r\n  for k in h:x,y=d[i][k],d[j][k];v=(x+y-d[i][j])/2;s+=c[x-v][y-v]\r\nprint s*pow(n,m-2,m)%m",
    "prob_desc_created_at": "1624635300",
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "graphs",
        "math",
        "probabilities",
        "trees"
    ],
    "hidden_unit_tests": ""
}