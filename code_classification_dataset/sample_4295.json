{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"4 5 2\\n2 3 1\\n4 5 1\\n33334 33335 33331\\n2 4 1\\n3 4 1\"]",
    "src_uid": "45cf60f551bd5cbb1f3df6ac3004b53c",
    "prob_desc_notes": "NoteIn the first test case we can not get the height of the platform for the first place less than $$$5$$$, because if the height of the platform for the first place is not more than $$$4$$$, then we can use at most $$$4 + 3 + 2 = 9$$$ blocks. And we should use $$$11 = 4 + 5 + 2$$$ blocks. Therefore, the answer 4 5 2 fits. In the second set, the only suitable answer is: 2 3 1.",
    "prob_desc_description": "Given the integer $$$n$$$ — the number of available blocks. You must use all blocks to build a pedestal. The pedestal consists of $$$3$$$ platforms for $$$2$$$-nd, $$$1$$$-st and $$$3$$$-rd places respectively. The platform for the $$$1$$$-st place must be strictly higher than for the $$$2$$$-nd place, and the platform for the $$$2$$$-nd place must be strictly higher than for the $$$3$$$-rd place. Also, the height of each platform must be greater than zero (that is, each platform must contain at least one block).    Example pedestal of $$$n=11$$$ blocks: second place height equals $$$4$$$ blocks, first place height equals $$$5$$$ blocks, third place height equals $$$2$$$ blocks.Among all possible pedestals of $$$n$$$ blocks, deduce one such that the platform height for the $$$1$$$-st place minimum as possible. If there are several of them, output any of them.",
    "prob_desc_output_spec": "For each test case, output $$$3$$$ numbers $$$h_2, h_1, h_3$$$ — the platform heights for $$$2$$$-nd, $$$1$$$-st and $$$3$$$-rd places on a pedestal consisting of $$$n$$$ blocks ($$$h_1+h_2+h_3=n$$$, $$$0 &lt; h_3 &lt; h_2 &lt; h_1$$$).  Among all possible pedestals, output the one for which the value of $$$h_1$$$ minimal. If there are several of them, output any of them.",
    "prob_desc_input_spec": "The first line of input data contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Each test case contains a single integer $$$n$$$ ($$$6 \\le n \\le 10^5$$$) — the total number of blocks for the pedestal. All $$$n$$$ blocks must be used. It is guaranteed that the sum of $$$n$$$ values over all test cases does not exceed $$$10^6$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_094.jsonl",
    "code_uid": "ac1bff5e75e55fc01b6987f692e3136d",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n\\n11\\n\\n6\\n\\n10\\n\\n100000\\n\\n7\\n\\n8\"]",
    "exec_outcome": "PASSED",
    "source_code": "# -*- coding: utf-8 -*-\r\n\"\"\"\r\nCreated on Sat Jun 11 14:58:24 2022\r\n\r\n@author: Ajay Varma\r\n\"\"\"\r\n\r\n# 5 9 3\r\n# aaacc\r\n# bbdddeeee\r\n\r\n# aaabbcc\r\n\r\nfor i in range(int(input())):\r\n    n = int(input())\r\n    if n==7:\r\n        print(2 ,4, 1)\r\n        continue\r\n    if n%3:\r\n        a = (n//3)+1\r\n        b = (n//3)+2\r\n        c = (n//3)- (2 if n%3==1 else 1)\r\n    else:\r\n        a = (n//3)\r\n        b = (n//3)+1\r\n        c=  (n//3)-1\r\n    print(a,b,c)\r\n            \r\n    \r\n\r\n                \r\n            \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n    \r\n    ",
    "prob_desc_created_at": "1654612500",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "hidden_unit_tests": ""
}