{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"&gt;\\n=\\n&lt;\\n=\\n&lt;\"]",
    "src_uid": "a4eeaf7252b9115b67b9eca5f2bf621d",
    "prob_desc_notes": "NoteThe comparisons in the example are: $$$20 &gt; 19$$$, $$$1000 = 1000$$$, $$$1999 &lt; 2000$$$, $$$1 = 1$$$, $$$99 &lt; 100$$$.",
    "prob_desc_description": "Monocarp wrote down two numbers on a whiteboard. Both numbers follow a specific format: a positive integer $$$x$$$ with $$$p$$$ zeros appended to its end.Now Monocarp asks you to compare these two numbers. Can you help him?",
    "prob_desc_output_spec": "For each testcase print the result of the comparison of the given two numbers. If the first number is smaller than the second one, print '&lt;'. If the first number is greater than the second one, print '&gt;'. If they are equal, print '='.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of testcases. The first line of each testcase contains two integers $$$x_1$$$ and $$$p_1$$$ ($$$1 \\le x_1 \\le 10^6; 0 \\le p_1 \\le 10^6$$$) — the description of the first number. The second line of each testcase contains two integers $$$x_2$$$ and $$$p_2$$$ ($$$1 \\le x_2 \\le 10^6; 0 \\le p_2 \\le 10^6$$$) — the description of the second number.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_090.jsonl",
    "code_uid": "3068e6f323024f5174400f4f5839664a",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n2 1\\n19 0\\n10 2\\n100 1\\n1999 0\\n2 3\\n1 0\\n1 0\\n99 0\\n1 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\r\nfor _ in range(int(input())):\r\n    x1, p1 = map(int, input().split())\r\n    x2, p2 = map(int, input().split())\r\n    a=math.log(x1/x2, 10)\r\n    if a>(p2-p1):\r\n        print(\">\")\r\n    elif a<(p2-p1):\r\n        print(\"<\")\r\n    else:\r\n        print(\"=\")\r\n",
    "prob_desc_created_at": "1638369300",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}