{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1\", \"0\"]",
    "src_uid": "217cc9b3e04260f5b7cd42b42e92c449",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given n points on a plane. All points are different.Find the number of different groups of three points (A, B, C) such that point B is the middle of segment AC. The groups of three points are considered unordered, that is, if point B is the middle of segment AC, then groups (A, B, C) and (C, B, A) are considered the same.",
    "prob_desc_output_spec": "Print the single number — the answer to the problem. ",
    "prob_desc_input_spec": "The first line contains a single integer n (3 ≤ n ≤ 3000) — the number of points.  Next n lines contain the points. The i-th line contains coordinates of the i-th point: two space-separated integers xi, yi ( - 1000 ≤ xi, yi ≤ 1000). It is guaranteed that all given points are different.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_050.jsonl",
    "code_uid": "d5ed0164513c69d3a773c9a7a32a7bc8",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n1 1\\n2 2\\n3 3\", \"3\\n0 0\\n-1 0\\n0 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\nl1,l2 = [],[]\ns = set()\nfor _ in range(n):\n    a,b = map(int , input().split())\n    s.add((a,b))\n    l1.append(a)\n    l2.append(b)\nc=0\nx,y=0,0\nfor i in range(n):\n    for j in range(i+1,n):\n        x,y = (l1[i]+l1[j]) , (l2[i]+l2[j])\n        if abs(x)%2==0 and abs(y)%2==0:\n            x,y=x//2,y//2\n            if (x,y) in s:\n                c+=1\n            #print(c,(x,y))\nprint(c)\n",
    "prob_desc_created_at": "1334934300",
    "tags": [
        "binary search",
        "brute force"
    ],
    "hidden_unit_tests": ""
}