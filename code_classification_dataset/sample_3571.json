{
    "prob_desc_time_limit": "0.5 seconds",
    "prob_desc_sample_outputs": "[\"0 2 1\"]",
    "src_uid": "8f48b4be00f70243de0ad0b9e96cf362",
    "prob_desc_notes": "NoteTo maximize area Bill should choose points: B1 = P0, B3 = P2, B5 = P1",
    "prob_desc_description": "Bill is a famous mathematician in BubbleLand. Thanks to his revolutionary math discoveries he was able to make enough money to build a beautiful house. Unfortunately, for not paying property tax on time, court decided to punish Bill by making him lose a part of his property.Bill’s property can be observed as a convex regular 2n-sided polygon A0 A1... A2n - 1 A2n,  A2n =  A0, with sides of the exactly 1 meter in length. Court rules for removing part of his property are as follows:   Split every edge Ak Ak + 1,  k = 0... 2n - 1 in n equal parts of size 1 / n with points P0, P1, ..., Pn - 1   On every edge A2k A2k + 1,  k = 0... n - 1 court will choose one point B2k =  Pi for some i = 0, ...,  n - 1 such that    On every edge A2k + 1A2k + 2,  k = 0...n - 1 Bill will choose one point B2k + 1 =  Pi for some i = 0, ...,  n - 1 such that    Bill gets to keep property inside of 2n-sided polygon B0 B1... B2n - 1 Luckily, Bill found out which B2k points the court chose. Even though he is a great mathematician, his house is very big and he has a hard time calculating. Therefore, he is asking you to help him choose points so he maximizes area of property he can keep.",
    "prob_desc_output_spec": "Output contains n distinct integers separated by a single space representing points B1, B3, ..., B2n - 1 Bill should choose in order to maximize the property area. If there are multiple solutions that maximize the area, return any of them.",
    "prob_desc_input_spec": "The first line contains one integer number n (2 ≤ n ≤ 50000), representing number of edges of 2n-sided polygon. The second line contains n distinct integer numbers B2k (0 ≤ B2k ≤ n - 1,  k = 0... n - 1) separated by a single space, representing points the court chose. If B2k = i, the court chose point Pi on side A2k A2k + 1.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2100,
    "file_name": "train_069.jsonl",
    "code_uid": "f13d727d07690c606743f59b66e6fdbf",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n0 1 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\na = input().split()\nfor i in range(n):\n    a[i] = int(a[i])\nb = []\nfor i in range(0, n-1):\n    b.append((a[i]-(n-a[i+1]), i))\nb.append((a[n-1]-(n-a[0]), n-1))\nb = sorted(b)\nans = n*[0]\nfor i in range(n):\n    # the line segment at index b[i][1]\n    ans[b[i][1]] = i\nfor i in range(n):\n    print(ans[i], end = ' ')\n",
    "prob_desc_created_at": "1504432800",
    "tags": [
        "sortings",
        "greedy"
    ],
    "hidden_unit_tests": ""
}