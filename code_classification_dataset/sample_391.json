{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1 1\\n6 4\"]",
    "src_uid": "2fa3e88688b92c27ad26a23884e26009",
    "prob_desc_notes": "NoteIn the first testcase of the sample, $$$GCD(1,1)+LCM(1,1)=1+1=2$$$.In the second testcase of the sample, $$$GCD(6,4)+LCM(6,4)=2+12=14$$$.",
    "prob_desc_description": "You are given a positive integer $$$x$$$. Find any such $$$2$$$ positive integers $$$a$$$ and $$$b$$$ such that $$$GCD(a,b)+LCM(a,b)=x$$$.As a reminder, $$$GCD(a,b)$$$ is the greatest integer that divides both $$$a$$$ and $$$b$$$. Similarly, $$$LCM(a,b)$$$ is the smallest integer such that both $$$a$$$ and $$$b$$$ divide it.It's guaranteed that the solution always exists. If there are several such pairs $$$(a, b)$$$, you can output any of them.",
    "prob_desc_output_spec": "For each testcase, output a pair of positive integers $$$a$$$ and $$$b$$$ ($$$1 \\le a, b \\le 10^9)$$$ such that $$$GCD(a,b)+LCM(a,b)=x$$$. It's guaranteed that the solution always exists. If there are several such pairs $$$(a, b)$$$, you can output any of them.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ $$$(1 \\le t \\le 100)$$$  — the number of testcases. Each testcase consists of one line containing a single integer, $$$x$$$ $$$(2 \\le x \\le 10^9)$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_001.jsonl",
    "code_uid": "0ea2cc4bd70562c153c5f7ceb84828e4",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n2\\n14\"]",
    "exec_outcome": "PASSED",
    "source_code": "T = input()\n\nfor _ in xrange(T):\n    x = input()\n\n    if x % 2 == 0:\n        print \"%d %d\" % (x//2, x//2)\n\n    else:\n        print \"1 %d\" % (x-1)\n",
    "prob_desc_created_at": "1584196500",
    "tags": [
        "constructive algorithms",
        "number theory",
        "greedy"
    ],
    "hidden_unit_tests": ""
}