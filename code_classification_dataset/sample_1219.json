{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"YES\", \"NO\", \"YES\", \"YES\"]",
    "src_uid": "25232f4244004fa4c130892957e5de84",
    "prob_desc_notes": "NoteIn the first sample test you can choose numbers 2 and 3, the sum of which is divisible by 5.In the second sample test the single non-empty subsequence of numbers is a single number 5. Number 5 is not divisible by 6, that is, the sought subsequence doesn't exist.In the third sample test you need to choose two numbers 3 on the ends.In the fourth sample test you can take the whole subsequence.",
    "prob_desc_description": "You are given a sequence of numbers a1, a2, ..., an, and a number m.Check if it is possible to choose a non-empty subsequence aij such that the sum of numbers in this subsequence is divisible by m.",
    "prob_desc_output_spec": "In the single line print either \"YES\" (without the quotes) if there exists the sought subsequence, or \"NO\" (without the quotes), if such subsequence doesn't exist.",
    "prob_desc_input_spec": "The first line contains two numbers, n and m (1 ≤ n ≤ 106, 2 ≤ m ≤ 103) — the size of the original sequence and the number such that sum should be divisible by it. The second line contains n integers a1, a2, ..., an (0 ≤ ai ≤ 109).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_007.jsonl",
    "code_uid": "b3c1cb326de9f2347d3d18af7303979e",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3 5\\n1 2 3\", \"1 6\\n5\", \"4 6\\n3 1 1 3\", \"6 6\\n5 5 5 5 5 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin,stdout\ndef fn(pos,rem,taken):\n    if pos==n:\n        return int(taken==1 and rem==0)\n    if (pos,rem,taken) in dp:return dp[pos,rem,taken]\n    dp[pos,rem,taken]=fn(pos+1,rem,taken) or fn(pos+1,(rem+a[pos])%m,1)\n    return dp[pos,rem,taken]\nfor _ in range(1):#(stdin.readline())):\n    # n=int(stdin.readline())\n    n,m=list(map(int,stdin.readline().split()))\n    a=list(map(int,stdin.readline().split()))\n    if m<=n:\n        print('YES')\n        continue\n    dp={}\n    if fn(0,0,0):\n        print('YES')\n    else:print('NO')\n",
    "prob_desc_created_at": "1441902600",
    "tags": [
        "dp",
        "combinatorics",
        "two pointers",
        "data structures"
    ],
    "hidden_unit_tests": ""
}