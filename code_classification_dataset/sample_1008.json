{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"next 0 5\\n\\nnext 0 1 3\\n\\nnext 2 3 0 1 4 5 6 7 8 9\\n\\nnext 9 8 7 6 5 4 3 2 1 0\\n\\nnext 0 1 3 5\\n\\nnext 1 3 5\\n\\ndone\"]",
    "src_uid": "b2ea06e06e60adf88e601f1164c360cd",
    "prob_desc_notes": "NoteIn the sample input and output values are aligned only for simplicity of interpreting them chronologically. In real interaction no \"extra\" line breaks should appear.In the example, the friends move as follows:  ",
    "prob_desc_description": "This is an interactive problem.Misha likes to play cooperative games with incomplete information. Today he suggested ten his friends to play a cooperative game \"Lake\".Misha has already come up with a field for the upcoming game. The field for this game is a directed graph consisting of two parts. The first part is a road along the coast of the lake which is a cycle of $$$c$$$ vertices. The second part is a path from home to the lake which is a chain of $$$t$$$ vertices, and there is an edge from the last vertex of this chain to the vertex of the road along the coast which has the most beautiful view of the lake, also known as the finish vertex. Misha decided to keep the field secret, so nobody knows neither $$$t$$$ nor $$$c$$$.  Note that each vertex of the field has exactly one outgoing edge and all the vertices except the home vertex and the finish vertex have exactly one ingoing edge. The home vertex has no incoming edges, the finish vertex has two incoming edges.At the beginning of the game pieces of all the ten players, indexed with consecutive integers from $$$0$$$ to $$$9$$$, are at the home vertex. After that on each turn some of the players can ask Misha to simultaneously move their pieces along the corresponding edges. Misha will not answer more than $$$q$$$ such queries. After each move Misha will tell players whose pieces are at the same vertices and whose pieces are at different vertices.The goal of the game is to move all the pieces to the finish vertex. Misha's friends have no idea how to win in such a game without knowledge of $$$c$$$, $$$t$$$ and $$$q$$$, but luckily they are your friends. Help them: coordinate their actions to win the game. Misha has drawn such a field that $$$1 \\le t, c$$$, $$$(t+c) \\leq 1000$$$ and $$$q = 3 \\cdot (t+c)$$$.",
    "prob_desc_output_spec": "After all friends gather at the finish vertex, print \"done\" and terminate your program.",
    "prob_desc_input_spec": "There is no input — go to the interaction part straight away.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2400,
    "file_name": "train_005.jsonl",
    "code_uid": "558180b38fec1d385946c85d20d5831b",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"2 05 12346789\\n\\n3 246789 135 0\\n\\n3 246789 0 135\\n\\n3 246789 0 135\\n\\n2 135 0246789\\n\\n1 0123456789\"]",
    "exec_outcome": "PASSED",
    "source_code": "def move(s):\n    print('next', s)\n    return int(input().split()[0])\n\nwhile 1:\n    move('0 1')\n    if move('1') == 2: break\n\nwhile 1:\n    if move('0 1 2 3 4 5 6 7 8 9') == 1: break\n\nprint('done')",
    "prob_desc_created_at": "1552035900",
    "tags": [
        "constructive algorithms",
        "number theory",
        "interactive"
    ],
    "hidden_unit_tests": ""
}