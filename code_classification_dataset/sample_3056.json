{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"3\"]",
    "src_uid": "47afb524d4b47b7667a106a4c5b947d8",
    "prob_desc_notes": "NoteOne of the solutions illustrated on the image by pair $$$A_2$$$ and $$$B_2$$$.",
    "prob_desc_description": "You are given a tube which is reflective inside represented as two non-coinciding, but parallel to $$$Ox$$$ lines. Each line has some special integer points — positions of sensors on sides of the tube.You are going to emit a laser ray in the tube. To do so, you have to choose two integer points $$$A$$$ and $$$B$$$ on the first and the second line respectively (coordinates can be negative): the point $$$A$$$ is responsible for the position of the laser, and the point $$$B$$$ — for the direction of the laser ray. The laser ray is a ray starting at $$$A$$$ and directed at $$$B$$$ which will reflect from the sides of the tube (it doesn't matter if there are any sensors at a reflection point or not). A sensor will only register the ray if the ray hits exactly at the position of the sensor.   Examples of laser rays. Note that image contains two examples. The $$$3$$$ sensors (denoted by black bold points on the tube sides) will register the blue ray but only $$$2$$$ will register the red. Calculate the maximum number of sensors which can register your ray if you choose points $$$A$$$ and $$$B$$$ on the first and the second lines respectively.",
    "prob_desc_output_spec": "Print the only integer — the maximum number of sensors which can register the ray.",
    "prob_desc_input_spec": "The first line contains two integers $$$n$$$ and $$$y_1$$$ ($$$1 \\le n \\le 10^5$$$, $$$0 \\le y_1 \\le 10^9$$$) — number of sensors on the first line and its $$$y$$$ coordinate. The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\le a_i \\le 10^9$$$) — $$$x$$$ coordinates of the sensors on the first line in the ascending order. The third line contains two integers $$$m$$$ and $$$y_2$$$ ($$$1 \\le m \\le 10^5$$$, $$$y_1 &lt; y_2 \\le 10^9$$$) — number of sensors on the second line and its $$$y$$$ coordinate.  The fourth line contains $$$m$$$ integers $$$b_1, b_2, \\ldots, b_m$$$ ($$$0 \\le b_i \\le 10^9$$$) — $$$x$$$ coordinates of the sensors on the second line in the ascending order.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 2500,
    "file_name": "train_040.jsonl",
    "code_uid": "da00a6087e1d84d82b11849464be2243",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3 1\\n1 5 6\\n1 3\\n3\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin\nfrom itertools import repeat\nfrom collections import defaultdict\ndef main():\n    n, y1 = map(int, stdin.readline().split())\n    a = map(int, stdin.readline().split(), repeat(10, n))\n    m, y2 = map(int, stdin.readline().split())\n    b = map(int, stdin.readline().split(), repeat(10, m))\n    ans = 2\n    d = defaultdict(int)\n    for x in a:\n        d[x] += 1\n    for x in b:\n        d[x] += 1\n    t = max(d.viewvalues())\n    if ans < t:\n        ans = t\n    ca = [0, 0]\n    cb = [0, 0]\n    for x in a:\n        ca[x&1] += 1\n    for x in b:\n        cb[x&1] += 1\n    for j in xrange(2):\n        t = ca[j] + cb[j^1]\n        if ans < t:\n            ans = t\n    for i in xrange(1, 30):\n        da = defaultdict(int)\n        db = defaultdict(int)\n        k = (2 << i) - 1\n        h = 1 << i\n        for x in a:\n            da[x&k] += 1\n        for x in b:\n            db[x&k] += 1\n        for i, x in da.viewitems():\n            if i ^ h in db:\n                t = x + db[i^h]\n                if ans < t:\n                    ans = t\n    print ans\nmain()\n",
    "prob_desc_created_at": "1537094100",
    "tags": [
        "dp",
        "divide and conquer",
        "data structures",
        "math"
    ],
    "hidden_unit_tests": ""
}