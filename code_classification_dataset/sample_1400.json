{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"0 0\\n\\n\\n\\n3 1\\n\\n\\n\\n2 3\\n\\n\\n\\n4 4\\n\\n\\n\\n0 2\\n\\n\\n\\n1 3 4 1\"]",
    "src_uid": "574347ab83379e5b08618d2b275b0d96",
    "prob_desc_notes": "NoteIn the sample input and output values are aligned only for simplicity of interpreting them chronologically. In real interaction no \"extra\" line breaks should appear.The following picture illustrates the first test.  ",
    "prob_desc_description": "This is an interactive problem.In good old times dwarves tried to develop extrasensory abilities:  Exactly n dwarves entered completely dark cave.  Each dwarf received a hat — white or black. While in cave, none of the dwarves was able to see either his own hat or hats of other Dwarves.  Dwarves went out of the cave to the meadow and sat at an arbitrary place one after the other. When a dwarf leaves the cave, he sees the colors of all hats of all dwarves that are seating on the meadow (i.e. left the cave before him). However, he is not able to see the color of his own hat and none of the dwarves can give him this information.  The task for dwarves was to got diverged into two parts — one with dwarves with white hats and one with black hats. After many centuries, dwarves finally managed to select the right place on the meadow without error. Will you be able to repeat their success?You are asked to successively name n different integer points on the plane. After naming each new point you will be given its color — black or white. Your task is to ensure that the named points can be split by a line in such a way that all points of one color lie on the same side from the line and points of different colors lie on different sides. Moreover, no points can belong to the line. Also, you need to report any such line at the end of the process.In this problem, the interactor is adaptive — the colors of the points in the tests are not fixed beforehand and the jury program can select them arbitrarily, in particular, depending on your program output.",
    "prob_desc_output_spec": null,
    "prob_desc_input_spec": null,
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_008.jsonl",
    "code_uid": "70d242f3d4bad87349b71ff235ef01b9",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n\\n\\n\\nblack\\n\\n\\n\\nblack\\n\\n\\n\\nwhite\\n\\n\\n\\nwhite\\n\\n\\n\\nblack\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=int(input())\nprint(1,0)\nc=input()\nn-=1\nL=1\nR=999999999\nwhile n>0:\n    M=int((L+R)/2)\n    print(1,M)\n    if input()==c:\n        L=M+1\n    else:\n        R=M\n    n-=1\nprint(0,R,2,R-1)\n",
    "prob_desc_created_at": "1539511500",
    "tags": [
        "constructive algorithms",
        "binary search",
        "geometry",
        "interactive"
    ],
    "hidden_unit_tests": ""
}