{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"1.500000\\n2.250000\\n3.250000\", \"2.500000\", \"1.000000\"]",
    "src_uid": "6cef2d464febcee854ee5a7f78d7ba4a",
    "prob_desc_notes": "NoteConsider the second test case. If Allen goes first, he will set $$$x_1 \\to 1$$$, so the final value will be $$$3$$$. If Bessie goes first, then she will set $$$x_1 \\to 0$$$ so the final value will be $$$2$$$. Thus the answer is $$$2.5$$$.In the third test case, the game value will always be $$$1$$$ regardless of Allen and Bessie's play.",
    "prob_desc_description": "Allen and Bessie are playing a simple number game. They both know a function $$$f: \\{0, 1\\}^n \\to \\mathbb{R}$$$, i.Â e. the function takes $$$n$$$ binary arguments and returns a real value. At the start of the game, the variables $$$x_1, x_2, \\dots, x_n$$$ are all set to $$$-1$$$. Each round, with equal probability, one of Allen or Bessie gets to make a move. A move consists of picking an $$$i$$$ such that $$$x_i = -1$$$ and either setting $$$x_i \\to 0$$$ or $$$x_i \\to 1$$$.After $$$n$$$ rounds all variables are set, and the game value resolves to $$$f(x_1, x_2, \\dots, x_n)$$$. Allen wants to maximize the game value, and Bessie wants to minimize it.Your goal is to help Allen and Bessie find the expected game value! They will play $$$r+1$$$ times though, so between each game, exactly one value of $$$f$$$ changes. In other words, between rounds $$$i$$$ and $$$i+1$$$ for $$$1 \\le i \\le r$$$, $$$f(z_1, \\dots, z_n) \\to g_i$$$ for some $$$(z_1, \\dots, z_n) \\in \\{0, 1\\}^n$$$. You are to find the expected game value in the beginning and after each change.",
    "prob_desc_output_spec": "Print $$$r+1$$$ lines, the $$$i$$$-th of which denotes the value of the game $$$f$$$ during the $$$i$$$-th round. Your answer must have absolute or relative error within $$$10^{-6}$$$. Formally, let your answer be $$$a$$$, and the jury's answer be $$$b$$$. Your answer is considered correct if $$$\\frac{|a - b|}{\\max{(1, |b|)}} \\le 10^{-6}$$$.",
    "prob_desc_input_spec": "The first line contains two integers $$$n$$$ and $$$r$$$ ($$$1 \\le n \\le 18$$$, $$$0 \\le r \\le 2^{18}$$$). The next line contains $$$2^n$$$ integers $$$c_0, c_1, \\dots, c_{2^n-1}$$$ ($$$0 \\le c_i \\le 10^9$$$), denoting the initial values of $$$f$$$. More specifically, $$$f(x_0, x_1, \\dots, x_{n-1}) = c_x$$$, if $$$x = \\overline{x_{n-1} \\ldots x_0}$$$ in binary. Each of the next $$$r$$$ lines contains two integers $$$z$$$ and $$$g$$$ ($$$0 \\le z \\le 2^n - 1$$$, $$$0 \\le g \\le 10^9$$$). If $$$z = \\overline{z_{n-1} \\dots z_0}$$$ in binary, then this means to set $$$f(z_0, \\dots, z_{n-1}) \\to g$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2500,
    "file_name": "train_017.jsonl",
    "code_uid": "e7a16a0243e6c1d57c25db2049f49d44",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 2\\n0 1 2 3\\n2 5\\n0 4\", \"1 0\\n2 3\", \"2 0\\n1 1 1 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "R = lambda:list(map(int,input().split()))\nsum1 = 0\np1 = 1\na = [0]*263000\nb = a\nn,r = R()\np1 = 2**n\na = R()\nsum1 = sum(a)\np2 = sum1 / p1\nfor i in range(r):\n\tz,g=R()\n\tsum1 = sum1 - a[z] + g\n\ta[z] = g\n\tb[i] = sum1/p1\nprint(p2)\nfor i in range(r):\n\tprint(b[i])",
    "prob_desc_created_at": "1529858100",
    "tags": [
        "math"
    ],
    "hidden_unit_tests": ""
}