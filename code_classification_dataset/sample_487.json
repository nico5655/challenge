{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\", \"32\"]",
    "src_uid": "d46d5f130d8c443f28b52096c384fef3",
    "prob_desc_notes": "NoteIn the first sample case, 4 is a perfect square, so the largest number in the array that is not a perfect square is 2.",
    "prob_desc_description": "Given an array a1, a2, ..., an of n integers, find the largest number in the array that is not a perfect square.A number x is said to be a perfect square if there exists an integer y such that x = y2.",
    "prob_desc_output_spec": "Print the largest number in the array which is not a perfect square. It is guaranteed that an answer always exists.",
    "prob_desc_input_spec": "The first line contains a single integer n (1 ≤ n ≤ 1000) — the number of elements in the array. The second line contains n integers a1, a2, ..., an ( - 106 ≤ ai ≤ 106) — the elements of the array. It is guaranteed that at least one element of the array is not a perfect square.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_002.jsonl",
    "code_uid": "09dee22b81a441873eb081c8708deafb",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n4 2\", \"8\\n1 2 4 8 16 32 64 576\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\n\n\ndef is_sqrt(y):\n    if y < 0:\n        return False\n    elif y == 0:\n        return True\n    x = int(math.sqrt(y))\n    return x * x == y\n\n\nm = -1000001\nn = int(input())\nints = list(map(int, input().split()))\nfor z in ints:\n    if not is_sqrt(z) and z > m:\n        m = z\n\nprint(m)\n",
    "prob_desc_created_at": "1516462500",
    "tags": [
        "implementation",
        "brute force",
        "math"
    ],
    "hidden_unit_tests": ""
}