{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"Yes\\nNo\\nNo\\nYes\", \"No\"]",
    "src_uid": "bda76c8ccd3ba7d073a8f923d772361c",
    "prob_desc_notes": "NoteIn the first test case it is easy to see that the array is integral:   $$$\\left \\lfloor \\frac{1}{1} \\right \\rfloor = 1$$$, $$$a_1 = 1$$$, this number occurs in the arry  $$$\\left \\lfloor \\frac{2}{2} \\right \\rfloor = 1$$$  $$$\\left \\lfloor \\frac{5}{5} \\right \\rfloor = 1$$$  $$$\\left \\lfloor \\frac{2}{1} \\right \\rfloor = 2$$$, $$$a_2 = 2$$$, this number occurs in the array  $$$\\left \\lfloor \\frac{5}{1} \\right \\rfloor = 5$$$, $$$a_3 = 5$$$, this number occurs in the array  $$$\\left \\lfloor \\frac{5}{2} \\right \\rfloor = 2$$$, $$$a_2 = 2$$$, this number occurs in the array Thus, the condition is met and the array is integral.In the second test case it is enough to see that$$$\\left \\lfloor \\frac{7}{3} \\right \\rfloor = \\left \\lfloor 2\\frac{1}{3} \\right \\rfloor = 2$$$, this number is not in $$$a$$$, that's why it is not integral.In the third test case $$$\\left \\lfloor \\frac{2}{2} \\right \\rfloor = 1$$$, but there is only $$$2$$$ in the array, that's why it is not integral.",
    "prob_desc_description": "You are given an array $$$a$$$ of $$$n$$$ positive integers numbered from $$$1$$$ to $$$n$$$. Let's call an array integral if for any two, not necessarily different, numbers $$$x$$$ and $$$y$$$ from this array, $$$x \\ge y$$$, the number $$$\\left \\lfloor \\frac{x}{y} \\right \\rfloor$$$ ($$$x$$$ divided by $$$y$$$ with rounding down) is also in this array.You are guaranteed that all numbers in $$$a$$$ do not exceed $$$c$$$. Your task is to check whether this array is integral.",
    "prob_desc_output_spec": "For each test case print Yes if the array is integral and No otherwise.",
    "prob_desc_input_spec": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$c$$$ ($$$1 \\le n \\le 10^6$$$, $$$1 \\le c \\le 10^6$$$) — the size of $$$a$$$ and the limit for the numbers in the array. The second line of each test case contains $$$n$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$ ($$$1 \\le a_i \\le c$$$) — the array $$$a$$$. Let $$$N$$$ be the sum of $$$n$$$ over all test cases and $$$C$$$ be the sum of $$$c$$$ over all test cases. It is guaranteed that $$$N \\le 10^6$$$ and $$$C \\le 10^6$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1800,
    "file_name": "train_091.jsonl",
    "code_uid": "e3581bc6269fd5004753d95079b9d865",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n\\n3 5\\n\\n1 2 5\\n\\n4 10\\n\\n1 3 3 7\\n\\n1 2\\n\\n2\\n\\n1 1\\n\\n1\", \"1\\n\\n1 1000000\\n\\n1000000\"]",
    "exec_outcome": "PASSED",
    "source_code": "from collections import defaultdict, Counter,deque\r\nfrom math import sqrt, log10, log, floor, factorial,gcd,ceil,log2\r\nfrom bisect import bisect_left, bisect_right,insort\r\nfrom itertools import permutations,combinations\r\nimport sys, io, os\r\ninput = sys.stdin.readline\r\ninput=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\r\n# sys.setrecursionlimit(10000)\r\ninf = float('inf')\r\nmod = 10 ** 9 + 7\r\ndef yn(a): print(\"YES\" if a else \"NO\")\r\ncl = lambda a, b: (a + b - 1) // b\r\n\r\nt=int(input())\r\nfor i in range(t):\r\n    n,c=[int(i) for i in input().split()]\r\n    l=[int(i) for i in input().split()]\r\n    l=sorted(set(l))\r\n    counter=[0 for i in range(c+1)]\r\n    just_greater=[-1 for i in range(c+2)]\r\n    for i in l:\r\n        counter[i]=1\r\n    for i in range(c,-1,-1):\r\n        if counter[i]:\r\n            just_greater[i]=i\r\n        else:\r\n            just_greater[i]=just_greater[i+1]\r\n    if counter[1]==0:\r\n        print(\"No\")\r\n        continue\r\n    flg=1\r\n    for i in range(1,c+1):\r\n\r\n        if counter[i]==0:\r\n            found=1\r\n\r\n            for start in l:\r\n                next=start*i\r\n                if next<=c:\r\n                    next=just_greater[next]\r\n                    if next!=-1 and next<start*(i+1):\r\n                        found=0\r\n                        break\r\n                else:\r\n                    break\r\n\r\n            if found==0:\r\n\r\n                flg=0\r\n                break\r\n    if flg:\r\n        print(\"Yes\")\r\n    else:\r\n        print(\"No\")\r\n\r\n\"\"\"\r\n100\r\n5 20\r\n1 2 3 4 20\r\n\"\"\"",
    "prob_desc_created_at": "1646560500",
    "tags": [
        "brute force",
        "constructive algorithms",
        "math",
        "sortings"
    ],
    "hidden_unit_tests": ""
}