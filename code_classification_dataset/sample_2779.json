{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"aabb\", \"aaaa\", \"aabb\", \"NO\"]",
    "src_uid": "a17bac596b1f060209534cbffdf0f40e",
    "prob_desc_notes": "NoteIn the last sample both quatrains have rhymes but finding the common scheme is impossible, so the answer is \"NO\".",
    "prob_desc_description": "Vera adores poems. All the poems Vera knows are divided into quatrains (groups of four lines) and in each quatrain some lines contain rhymes.Let's consider that all lines in the poems consist of lowercase Latin letters (without spaces). Letters \"a\", \"e\", \"i\", \"o\", \"u\" are considered vowels.Two lines rhyme if their suffixes that start from the k-th vowels (counting from the end) match. If a line has less than k vowels, then such line can't rhyme with any other line. For example, if k = 1, lines commit and hermit rhyme (the corresponding suffixes equal it), and if k = 2, they do not rhyme (ommit ≠ ermit).Today on a literature lesson Vera learned that quatrains can contain four different schemes of rhymes, namely the following ones (the same letters stand for rhyming lines):   Clerihew (aabb);  Alternating (abab);  Enclosed (abba). If all lines of a quatrain pairwise rhyme, then the quatrain can belong to any rhyme scheme (this situation is represented by aaaa).If all quatrains of a poem belong to the same rhyme scheme, then we can assume that the whole poem belongs to this rhyme scheme. If in each quatrain all lines pairwise rhyme, then the rhyme scheme of the poem is aaaa. Let us note that it doesn't matter whether lines from different quatrains rhyme with each other or not. In other words, it is possible that different quatrains aren't connected by a rhyme.Vera got a long poem as a home task. The girl has to analyse it and find the poem rhyme scheme. Help Vera cope with the task.",
    "prob_desc_output_spec": "Print the rhyme scheme of the poem as \"aabb\", \"abab\", \"abba\", \"aaaa\"; or \"NO\" if the poem does not belong to any of the above mentioned schemes.",
    "prob_desc_input_spec": "The first line contains two integers n and k (1 ≤ n ≤ 2500, 1 ≤ k ≤ 5) — the number of quatrains in the poem and the vowel's number, correspondingly. Next 4n lines contain the poem. Each line is not empty and only consists of small Latin letters. The total length of the lines does not exceed 104. If we assume that the lines are numbered starting from 1, then the first quatrain contains lines number 1, 2, 3, 4; the second one contains lines number 5, 6, 7, 8; and so on.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_030.jsonl",
    "code_uid": "14c1793c9a43ab16dbf2e9888ab766dc",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"1 1\\nday\\nmay\\nsun\\nfun\", \"1 1\\nday\\nmay\\ngray\\nway\", \"2 1\\na\\na\\na\\na\\na\\na\\ne\\ne\", \"2 1\\nday\\nmay\\nsun\\nfun\\ntest\\nhill\\nfest\\nthrill\"]",
    "exec_outcome": "PASSED",
    "source_code": "def s(l, k):\n    v = 0\n    for i in range(len(l) - 1, -1, -1):\n        if l[i] in 'aeiou':\n            v += 1\n            if v == k:\n                return l[i:]\n    return ''\ndef f(q):\n    if '' in q:\n        return 'NO'\n    elif q[0] == q[1]:\n        if q[2] == q[3]:\n            return 'aaaa' if q[1] == q[2] else 'aabb'\n        else:\n            return 'NO'\n    elif q[0] == q[2] and q[1] == q[3]:\n        return 'abab'\n    elif q[0] == q[3] and q[1] == q[2]:\n        return 'abba'\n    else:\n        return 'NO'\nn, k = map(int, input().split())\nv = ''\nfor i in range(n):\n    c = f([s(input(), k) for i in range(4)])\n    if c == 'NO':\n        v = c\n        break\n    elif v and c in (v, 'aaaa'):\n        pass\n    elif v in ('', 'aaaa'):\n        v = c\n    else:\n        v = 'NO'\n        break\nprint(v)\n",
    "prob_desc_created_at": "1324728000",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}