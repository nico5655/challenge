{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"YES\\nNO\\nNO\\nNO\\nYES\"]",
    "src_uid": "9851ff47c77e13f62be1edaf3d74c4ad",
    "prob_desc_notes": "NoteIn the first test case, the array $$$a$$$ is already equal to the array $$$b$$$.In the second test case, we can't get the array $$$b$$$, because to do this we need to decrease $$$a_1$$$.In the fifth test case, we can apply operations in order to the elements with indices $$$4, 3, 3,2,2,2,1,1,1,1$$$, and then get the array $$$[5,5,5,5,5]$$$. After that, you can apply operations in order to elements with indices $$$5,4,4,3,1$$$ and already get an array $$$[6,5,6,7,6]$$$.",
    "prob_desc_description": "Given an array of integer $$$a_1, a_2, \\ldots, a_n$$$. In one operation you can make $$$a_i := a_i + 1$$$ if $$$i &lt; n$$$ and $$$a_i \\leq a_{i + 1}$$$, or $$$i = n$$$ and $$$a_i \\leq a_1$$$.You need to check whether the array $$$a_1, a_2, \\ldots, a_n$$$ can become equal to the array $$$b_1, b_2, \\ldots, b_n$$$ in some number of operations (possibly, zero). Two arrays $$$a$$$ and $$$b$$$ of length $$$n$$$ are called equal if $$$a_i = b_i$$$ for all integers $$$i$$$ from $$$1$$$ to $$$n$$$.",
    "prob_desc_output_spec": "For each test case, output \"YES\" if you can get the array $$$b$$$, otherwise output \"NO\". You may print each letter in any case (for example, \"YES\", \"Yes\", \"yes\", \"yEs\" will all be recognized as positive answer).",
    "prob_desc_input_spec": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 4 \\cdot 10^4$$$) — the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$) – the length of the array. The second line of each test case contains $$$n$$$ integers $$$a_1, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$) – the elements of the array $$$a$$$. The third line of each test case contains $$$n$$$ integers $$$b_1, \\ldots, b_n$$$ ($$$1 \\le b_i \\le 10^9$$$) – the elements of the array $$$b$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_104.jsonl",
    "code_uid": "5ec8b11dcc0937872448613dfa578428",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n\\n3\\n\\n1 2 5\\n\\n1 2 5\\n\\n2\\n\\n2 2\\n\\n1 3\\n\\n4\\n\\n3 4 1 2\\n\\n6 4 2 5\\n\\n3\\n\\n2 4 1\\n\\n4 5 3\\n\\n5\\n\\n1 2 3 4 5\\n\\n6 5 6 7 6\"]",
    "exec_outcome": "PASSED",
    "source_code": "import io,os\n#input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\ndef GO_life():\n    global ans \n    n = int(input())\n    d = list(map(int,input().split()))\n    p = list(map(int,input().split()))\n    for i in range(n):\n        if d[i] > p[i]:ans='NO'\n        elif d[i] < p[i] and p[(i + 1)%n] + 1 < p[i] :ans = 'NO'\n    if d == p:ans= 'YES'\n    print(ans)\nt = int(input())\nwhile t > 0:\n    ans = 'YES'\n    GO_life()\n    t -= 1\n",
    "prob_desc_created_at": "1662129300",
    "tags": [
        "greedy"
    ],
    "hidden_unit_tests": ""
}