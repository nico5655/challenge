{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"8\", \"27\", \"73741817\", \"1\"]",
    "src_uid": "4867d014809bfc1d90672b32ecf43b43",
    "prob_desc_notes": "NoteIn the first sample . Thus, the answer to the problem is 8.In the second sample, . The answer to the problem is 27, as 351 = 13·27, 729 = 27·27.In the third sample the answer to the problem is 1073741824 mod 1000000007 = 73741817.In the fourth sample . Thus, the answer to the problem is 1.",
    "prob_desc_description": "Simon has a prime number x and an array of non-negative integers a1, a2, ..., an.Simon loves fractions very much. Today he wrote out number  on a piece of paper. After Simon led all fractions to a common denominator and summed them up, he got a fraction: , where number t equals xa1 + a2 + ... + an. Now Simon wants to reduce the resulting fraction. Help him, find the greatest common divisor of numbers s and t. As GCD can be rather large, print it as a remainder after dividing it by number 1000000007 (109 + 7).",
    "prob_desc_output_spec": "Print a single number — the answer to the problem modulo 1000000007 (109 + 7).",
    "prob_desc_input_spec": "The first line contains two positive integers n and x (1 ≤ n ≤ 105, 2 ≤ x ≤ 109) — the size of the array and the prime number. The second line contains n space-separated integers a1, a2, ..., an (0 ≤ a1 ≤ a2 ≤ ... ≤ an ≤ 109). ",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_021.jsonl",
    "code_uid": "e662cabc90e2303974a4592713c988b3",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 2\\n2 2\", \"3 3\\n1 2 3\", \"2 2\\n29 29\", \"4 5\\n0 0 0 0\"]",
    "exec_outcome": "PASSED",
    "source_code": "def matome_num():\n    global num\n    ans = num[0][0]\n    for i in range(len(num)-1):\n        if num[i][1] == num[i+1][1]:\n            ans += num[i+1][0]\n        else:\n            num = [(ans,num[0][1])] + num[i+1:]\n            return\n\n    num = [(ans,num[0][1])]\n\n\nn,x = map(int,raw_input().split())\nold_num = map(int,raw_input().split())\nmysum = sum(old_num)\nnum = [(1,mysum-old_num[n-i]) for i in range(1,n+1)]\nans = num[0][1]\nwhile len(num) != 1:\n    matome_num()\n    if num[0][0] % x == 0:\n        num[0] = (num[0][0]/x,num[0][1] + 1) \n    else:\n        ans = num[0][1]\n        break\n\nif len(num) == 1:\n    ans = num[0][1]\n    y = num[0][0]\n    while y % x == 0:\n        y /= x\n        ans += 1\n\nINF = 1000000007\n\nprint pow(x,min(ans,mysum),INF)\n\n\n\n",
    "prob_desc_created_at": "1383379200",
    "tags": [
        "number theory",
        "math"
    ],
    "hidden_unit_tests": ""
}