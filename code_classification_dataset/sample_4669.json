{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"12 11 4\\n1063 234 1484\\n25 23 8\\n2221 94 2609\"]",
    "src_uid": "f0c22161cb5a9bc17320ccd05517f867",
    "prob_desc_notes": "NoteIn the first test case:$$$$$$x \\bmod y = 12 \\bmod 11 = 1;$$$$$$$$$$$$y \\bmod z = 11 \\bmod 4 = 3;$$$$$$$$$$$$z \\bmod x = 4 \\bmod 12 = 4.$$$$$$",
    "prob_desc_description": "You are given three positive integers $$$a$$$, $$$b$$$, $$$c$$$ ($$$a &lt; b &lt; c$$$). You have to find three positive integers $$$x$$$, $$$y$$$, $$$z$$$ such that:$$$$$$x \\bmod y = a,$$$$$$ $$$$$$y \\bmod z = b,$$$$$$ $$$$$$z \\bmod x = c.$$$$$$Here $$$p \\bmod q$$$ denotes the remainder from dividing $$$p$$$ by $$$q$$$. It is possible to show that for such constraints the answer always exists.",
    "prob_desc_output_spec": "For each test case output three positive integers $$$x$$$, $$$y$$$, $$$z$$$ ($$$1 \\le x, y, z \\le 10^{18}$$$) such that $$$x \\bmod y = a$$$, $$$y \\bmod z = b$$$, $$$z \\bmod x = c$$$. You can output any correct answer.",
    "prob_desc_input_spec": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10\\,000$$$) — the number of test cases. Description of the test cases follows. Each test case contains a single line with three integers $$$a$$$, $$$b$$$, $$$c$$$ ($$$1 \\le a &lt; b &lt; c \\le 10^8$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_103.jsonl",
    "code_uid": "006ec88c754043b339fe309ce2efc5b1",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n1 3 4\\n127 234 421\\n2 7 8\\n59 94 388\"]",
    "exec_outcome": "PASSED",
    "source_code": "if __name__ == \"__main__\":\n    for i in range(int(input())):\n        abc = list(map(int, input().split(\" \")))\n        print(abc[0] + abc[1] + abc[2], abc[1] + abc[2], abc[2])\n\t\t  \t  \t \t\t    \t \t  \t \t \t\t \t\t\t\t",
    "prob_desc_created_at": "1652970900",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "hidden_unit_tests": ""
}