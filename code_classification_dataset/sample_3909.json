{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"YES\\nYES\\nNO\"]",
    "src_uid": "1d27d6d736d891b03b7476f8a7209291",
    "prob_desc_notes": "NoteThe possible list of operations in the first test case:  Swap $$$a_1$$$ and $$$a_2$$$. The resulting sequence is $$$3, 4, 2, 5$$$. The directions are: left, left, right, right.  Swap $$$a_2$$$ and $$$a_3$$$. The resulting sequence is $$$3, 2, 4, 5$$$. The directions are: left, left, right, right.  Swap $$$a_1$$$ and $$$a_2$$$. The resulting sequence is $$$2, 3, 4, 5$$$. The directions are: right, right, right, right. ",
    "prob_desc_description": "AquaMoon has $$$n$$$ friends. They stand in a row from left to right, and the $$$i$$$-th friend from the left wears a T-shirt with a number $$$a_i$$$ written on it. Each friend has a direction (left or right). In the beginning, the direction of each friend is right.AquaMoon can make some operations on friends. On each operation, AquaMoon can choose two adjacent friends and swap their positions. After each operation, the direction of both chosen friends will also be flipped: left to right and vice versa.AquaMoon hopes that after some operations, the numbers written on the T-shirt of $$$n$$$ friends in the row, read from left to right, become non-decreasing. Also she wants, that all friends will have a direction of right at the end. Please find if it is possible.",
    "prob_desc_output_spec": "For each test case, if there exists a possible sequence of operations, print \"YES\" (without quotes); otherwise, print \"NO\" (without quotes). You can print each letter in any case (upper or lower).",
    "prob_desc_input_spec": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 50$$$) — the number of test cases. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$) — the number of Aquamoon's friends. The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\leq a_i \\leq 10^5$$$) — the numbers, written on the T-shirts. It is guaranteed that the sum of $$$n$$$ for all test cases does not exceed $$$10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1500,
    "file_name": "train_086.jsonl",
    "code_uid": "bfc7235b4a1e3e09f083c6e612e40548",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n4\\n4 3 2 5\\n4\\n3 3 2 2\\n5\\n1 2 3 5 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin\ninput=stdin.readline\n\nfrom collections import defaultdict\n\nfor case in range(int(input())):\n    n = int(input())\n\n    a = list(map(int, input().split()))\n    sorted_a = list(sorted(a))\n\n    inds_by_val = defaultdict(list)\n    sorted_inds_by_val = defaultdict(list)\n\n    for ind, v in enumerate(a):\n        inds_by_val[v].append(ind)\n\n    for ind, v in enumerate(sorted_a):\n        sorted_inds_by_val[v].append(ind)\n\n    \n    ans = True\n    for v in inds_by_val:\n        reg_ctr, sorted_ctr = [0, 0], [0, 0]\n\n        for x in inds_by_val[v]:\n            reg_ctr[x % 2] += 1\n\n        for x in sorted_inds_by_val[v]:\n            sorted_ctr[x % 2] += 1\n\n\n        if reg_ctr != sorted_ctr:\n            ans = False\n            break\n        \n\n            \n\n    print('YES') if ans else print('NO')\n    \n",
    "prob_desc_created_at": "1626012300",
    "tags": [
        "sortings"
    ],
    "hidden_unit_tests": ""
}