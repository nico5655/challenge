{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"0\\n1\\n2\\n2\\n2\\n3\"]",
    "src_uid": "614aa068ce74090b6577006c45e549cf",
    "prob_desc_notes": "NoteFor the test cases in the example, $$$n$$$ may be reduced to $$$1$$$ using the following operations in sequence$$$1$$$$$$2 \\xrightarrow{} 1$$$$$$3 \\xrightarrow{} 2 \\xrightarrow{} 1$$$$$$4 \\xrightarrow{} 2 \\xrightarrow{} 1$$$$$$6 \\xrightarrow{} 2 \\xrightarrow{} 1$$$$$$9 \\xrightarrow{} 3 \\xrightarrow{} 2\\xrightarrow{} 1$$$",
    "prob_desc_description": "Ridbit starts with an integer $$$n$$$.In one move, he can perform one of the following operations:   divide $$$n$$$ by one of its proper divisors, or  subtract $$$1$$$ from $$$n$$$ if $$$n$$$ is greater than $$$1$$$. A proper divisor is a divisor of a number, excluding itself. For example, $$$1$$$, $$$2$$$, $$$4$$$, $$$5$$$, and $$$10$$$ are proper divisors of $$$20$$$, but $$$20$$$ itself is not.What is the minimum number of moves Ridbit is required to make to reduce $$$n$$$ to $$$1$$$?",
    "prob_desc_output_spec": "For each test case, output the minimum number of moves required to reduce $$$n$$$ to $$$1$$$.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases. The only line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^9$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": null,
    "file_name": "train_004.jsonl",
    "code_uid": "aff3a2975d9764eb195aeff7648f3a10",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n1\\n2\\n3\\n4\\n6\\n9\"]",
    "exec_outcome": "PASSED",
    "source_code": "# # pr = []\n# arr = [0] * 40000\n# for i in range(2, 40000):\n#     if arr[i] == 0:\n#         # pr.append(i)\n#         for j in range(i, 40000, i):\n#             arr[j] = i\n\nfor i in range(int(input())):\n    k = int(input())\n    if k < 4:\n        print(k-1)\n    else:\n        print(3 if (k & 1) else 2)\n",
    "prob_desc_created_at": "1605969300",
    "tags": [
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}