{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"9\\n12\\n3595374\"]",
    "src_uid": "2cc35227174e6a4d48e0839cba211724",
    "prob_desc_notes": "NoteFor $$$n = 3$$$ the sequence is $$$[1,3,4,9...]$$$",
    "prob_desc_description": "Theofanis really likes sequences of positive integers, thus his teacher (Yeltsa Kcir) gave him a problem about a sequence that consists of only special numbers.Let's call a positive number special if it can be written as a sum of different non-negative powers of $$$n$$$. For example, for $$$n = 4$$$ number $$$17$$$ is special, because it can be written as $$$4^0 + 4^2 = 1 + 16 = 17$$$, but $$$9$$$ is not.Theofanis asks you to help him find the $$$k$$$-th special number if they are sorted in increasing order. Since this number may be too large, output it modulo $$$10^9+7$$$.",
    "prob_desc_output_spec": "For each test case, print one integer — the $$$k$$$-th special number in increasing order modulo $$$10^9+7$$$.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. The first and only line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\le n \\le 10^9$$$; $$$1 \\le k \\le 10^9$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1100,
    "file_name": "train_097.jsonl",
    "code_uid": "1a3f3791cc31c216f3c7afb8215f6371",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n3 4\\n2 12\\n105 564\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\r\nt = int(input())\r\ndef calcul(n, k):\r\n    s = 0\r\n    while k>0:\r\n        x = math.log2(k)\r\n        p = int(x)\r\n        c = pow(2, p)\r\n        i = int(c*(x-p))\r\n\r\n        #update\r\n        s += pow(n, p)\r\n        k -= c\r\n        p = i\r\n        \r\n    return s%(1000000007)\r\n    \r\nfor i in range(t):\r\n    n, k = map(int, input().split())\r\n    print(calcul(n, k))",
    "prob_desc_created_at": "1633705500",
    "tags": [
        "bitmasks",
        "math"
    ],
    "hidden_unit_tests": ""
}