{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"7\\n11\"]",
    "src_uid": "07db573b0db736d798b6c18c06c32f3d",
    "prob_desc_notes": null,
    "prob_desc_description": "You have a large electronic screen which can display up to $$$998244353$$$ decimal digits. The digits are displayed in the same way as on different electronic alarm clocks: each place for a digit consists of $$$7$$$ segments which can be turned on and off to compose different digits. The following picture describes how you can display all $$$10$$$ decimal digits:As you can see, different digits may require different number of segments to be turned on. For example, if you want to display $$$1$$$, you have to turn on $$$2$$$ segments of the screen, and if you want to display $$$8$$$, all $$$7$$$ segments of some place to display a digit should be turned on.You want to display a really large integer on the screen. Unfortunately, the screen is bugged: no more than $$$n$$$ segments can be turned on simultaneously. So now you wonder what is the greatest integer that can be displayed by turning on no more than $$$n$$$ segments.Your program should be able to process $$$t$$$ different test cases.",
    "prob_desc_output_spec": "For each test case, print the greatest integer that can be displayed by turning on no more than $$$n$$$ segments of the screen. Note that the answer may not fit in the standard $$$32$$$-bit or $$$64$$$-bit integral data type.",
    "prob_desc_input_spec": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases in the input. Then the test cases follow, each of them is represented by a separate line containing one integer $$$n$$$ ($$$2 \\le n \\le 10^5$$$) — the maximum number of segments that can be turned on in the corresponding testcase. It is guaranteed that the sum of $$$n$$$ over all test cases in the input does not exceed $$$10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_006.jsonl",
    "code_uid": "0b6a53f79bd967a78a2823630df46a67",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n3\\n4\"]",
    "exec_outcome": "PASSED",
    "source_code": "# cook your dish here\nt = int(input())\nwhile t>0:\n    t -= 1\n    n = float(input())\n    three = 0\n    two = 0\n    rem = 3\n    if n%2==0:\n        two = int(n/2)\n        three = 0\n    else:\n        three = 1\n        two = int((n-3)/2)\n    # print(two,three)\n    maxnum = ''\n    while three>0:\n        maxnum = maxnum + '7'\n        three -= 1\n    while two>0:\n        maxnum = maxnum + '1'\n        two -= 1\n    print(maxnum)",
    "prob_desc_created_at": "1580308500",
    "tags": [
        "greedy"
    ],
    "hidden_unit_tests": ""
}