{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\\n5 4\", \"1\\n1000000002\", \"7\\n4 10 22 11 12 5 6\"]",
    "src_uid": "8c715616c8fa373c95368cf4795a2e6a",
    "prob_desc_notes": "NoteThe first example is described in the statements.In the second example the initial sequence is [1000000000, 1000000000, 1000000000, 1000000000]. After the first operation the sequence is equal to [1000000001, 1000000000, 1000000000]. After the second operation the sequence is [1000000001, 1000000001]. After the third operation the sequence is [1000000002].In the third example there are no two equal consecutive elements initially, so the sequence does not change.",
    "prob_desc_description": "You are given a sequence of positive integers a1, a2, ..., an. While possible, you perform the following operation: find a pair of equal consecutive elements. If there are more than one such pair, find the leftmost (with the smallest indices of elements). If the two integers are equal to x, delete both and insert a single integer x + 1 on their place. This way the number of elements in the sequence is decreased by 1 on each step. You stop performing the operation when there is no pair of equal consecutive elements.For example, if the initial sequence is [5, 2, 1, 1, 2, 2], then after the first operation you get [5, 2, 2, 2, 2], after the second — [5, 3, 2, 2], after the third — [5, 3, 3], and finally after the fourth you get [5, 4]. After that there are no equal consecutive elements left in the sequence, so you stop the process.Determine the final sequence after you stop performing the operation.",
    "prob_desc_output_spec": "In the first line print a single integer k — the number of elements in the sequence after you stop performing the operation.  In the second line print k integers — the sequence after you stop performing the operation.",
    "prob_desc_input_spec": "The first line contains a single integer n (2 ≤ n ≤ 2·105) — the number of elements in the sequence. The second line contains the sequence of integers a1, a2, ..., an (1 ≤ ai ≤ 109).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_016.jsonl",
    "code_uid": "a09d62259b48aa5f394f636371bd0202",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n5 2 1 1 2 2\", \"4\\n1000000000 1000000000 1000000000 1000000000\", \"7\\n4 10 22 11 12 5 6\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = input()\na = list(map(int, input().split())) \nb = []\nfor x in a:\n    while b and x == b[-1]:\n        x += 1\n        b.pop()\n    else:\n        b.append(x)\nprint(len(b))\nprint(*b)",
    "prob_desc_created_at": "1521300900",
    "tags": [],
    "hidden_unit_tests": ""
}