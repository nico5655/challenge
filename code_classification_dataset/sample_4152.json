{
    "prob_desc_time_limit": "2.5 seconds",
    "prob_desc_sample_outputs": "[\"2\\n8\"]",
    "src_uid": "3f1e2549d7342364b08f976fcbb7b1fa",
    "prob_desc_notes": "NoteThe two possible puzzle configurations for example $$$1$$$ are:  $$$[1,4,2,3]$$$ in the first row and $$$[3,2,1,4]$$$ in the second;  $$$[3,2,1,4]$$$ in the first row and $$$[1,4,2,3]$$$ in the second. ",
    "prob_desc_description": "When he's not training for IOI, Little Alawn enjoys playing with puzzles of various types to stimulate his brain. Today, he's playing with a puzzle that consists of a $$$2 \\times n$$$ grid where each row is a permutation of the numbers $$$1,2,3,\\ldots,n$$$.The goal of Little Alawn's puzzle is to make sure no numbers on the same column or row are the same (we'll call this state of the puzzle as solved), and to achieve this he is able to swap the numbers in any column. However, after solving the puzzle many times, Little Alawn got bored and began wondering about the number of possible solved configurations of the puzzle he could achieve from an initial solved configuration only by swapping numbers in a column.Unfortunately, Little Alawn got stuck while trying to solve this harder problem, so he was wondering if you could help him with it. Find the answer modulo $$$10^9+7$$$.",
    "prob_desc_output_spec": "For each test case output a single integer, the number of possible solved configurations of the puzzle Little Alawn can achieve from an initial solved configuration only by swapping numbers in a column. As the answer can be very large, please output it modulo $$$10^9+7$$$. The answer for each test case should be on a separate line.",
    "prob_desc_input_spec": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). Description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 4 \\cdot 10^5$$$). The next two lines of each test case describe the initial state of the puzzle grid. Each line will be a permutation of the numbers $$$1,2,3,\\ldots,n$$$ and the numbers in each column and row will be pairwise distinct. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$4 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_091.jsonl",
    "code_uid": "36b4df3f671fd1edee26d97b98041edd",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n4\\n1 4 2 3\\n3 2 1 4\\n8\\n2 6 5 1 4 3 7 8\\n3 8 7 5 1 2 4 6\"]",
    "exec_outcome": "PASSED",
    "source_code": "for i in range(int(input())):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    b=list(map(int,input().split()))\r\n    d=dict(zip(a,b))\r\n    cnt=0\r\n    while d:\r\n        cnt+=1\r\n        k,v=d.popitem()\r\n        while v!=k:\r\n            v=d.pop(v)\r\n    print(pow(2,cnt,10**9+7))",
    "prob_desc_created_at": "1623598500",
    "tags": [
        "combinatorics",
        "dp",
        "dsu",
        "graphs",
        "math"
    ],
    "hidden_unit_tests": ""
}