{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"4\"]",
    "src_uid": "0e4ff955c1e653fbeb003987fa701729",
    "prob_desc_notes": null,
    "prob_desc_description": "Polycarpus adores TV series. Right now he is ready to finish watching a season of a popular sitcom \"Graph Theory\". In total, the season has n episodes, numbered with integers from 1 to n.Polycarpus watches episodes not one by one but in a random order. He has already watched all the episodes except for one. Which episode has Polycaprus forgotten to watch?",
    "prob_desc_output_spec": "Print the number of the episode that Polycarpus hasn't watched.",
    "prob_desc_input_spec": "The first line of the input contains integer n (2 ≤ n ≤ 100000) — the number of episodes in a season. Assume that the episodes are numbered by integers from 1 to n. The second line contains n - 1 integer a1, a2, ..., an (1 ≤ ai ≤ n) — the numbers of episodes that Polycarpus has watched. All values of ai are distinct.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_004.jsonl",
    "code_uid": "2db4a7754c51b6083ada01c6cd52dede",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"10\\n3 8 10 1 7 9 6 5 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=input()\nprint n*(n+1)//2-sum(map(int,raw_input().split()))\n\n",
    "prob_desc_created_at": "1401809400",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}