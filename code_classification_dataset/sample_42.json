{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"5 5 4 6 8 -2\\n1 2 4 8\"]",
    "src_uid": "3c8bfd3199a9435cfbdee1daaacbd1b3",
    "prob_desc_notes": "NoteIn the first test case, after given rearrangement, $$$|a_{1} - a_{2}| = 0 \\le |a_{2} - a_{3}| = 1 \\le |a_{3} - a_{4}| = 2 \\le |a_{4} - a_{5}| = 2 \\le |a_{5} - a_{6}| = 10$$$. There are other possible answers like \"5 4 5 6 -2 8\".In the second test case, after given rearrangement, $$$|a_{1} - a_{2}| = 1 \\le |a_{2} - a_{3}| = 2 \\le |a_{3} - a_{4}| = 4$$$. There are other possible answers like \"2 4 8 1\".",
    "prob_desc_description": "You have array of $$$n$$$ numbers $$$a_{1}, a_{2}, \\ldots, a_{n}$$$. Rearrange these numbers to satisfy $$$|a_{1} - a_{2}| \\le |a_{2} - a_{3}| \\le \\ldots \\le |a_{n-1} - a_{n}|$$$, where $$$|x|$$$ denotes absolute value of $$$x$$$. It's always possible to find such rearrangement.Note that all numbers in $$$a$$$ are not necessarily different. In other words, some numbers of $$$a$$$ may be same.You have to answer independent $$$t$$$ test cases.",
    "prob_desc_output_spec": "For each test case, print the rearranged version of array $$$a$$$ which satisfies given condition. If there are multiple valid rearrangements, print any of them.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^{4}$$$) — the number of test cases. The first line of each test case contains single integer $$$n$$$ ($$$3 \\le n \\le 10^{5}$$$) — the length of array $$$a$$$. It is guaranteed that the sum of values of $$$n$$$ over all test cases in the input does not exceed $$$10^{5}$$$. The second line of each test case contains $$$n$$$ integers $$$a_{1}, a_{2}, \\ldots, a_{n}$$$ ($$$-10^{9} \\le a_{i} \\le 10^{9}$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1200,
    "file_name": "train_000.jsonl",
    "code_uid": "42368edee207d062eeec84bd6a67f88a",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n6\\n5 -2 4 8 6 5\\n4\\n8 1 4 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "T = int(input())\nfor i in range(T):\n    N = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    n = len(a)\n    while n!= 0:\n        print(a.pop(n//2), end = ' ')\n        n -= 1",
    "prob_desc_created_at": "1586700300",
    "tags": [
        "constructive algorithms",
        "sortings"
    ],
    "hidden_unit_tests": ""
}