{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"5.0000000000\"]",
    "src_uid": "979e1b735d1c152d01955e27ee8d0b8a",
    "prob_desc_notes": "NoteFollowing image describes initial position in the first sample case:",
    "prob_desc_description": "And while Mishka is enjoying her trip...Chris is a little brown bear. No one knows, where and when he met Mishka, but for a long time they are together (excluding her current trip). However, best friends are important too. John is Chris' best friend.Once walking with his friend, John gave Chris the following problem:At the infinite horizontal road of width w, bounded by lines y = 0 and y = w, there is a bus moving, presented as a convex polygon of n vertices. The bus moves continuously with a constant speed of v in a straight Ox line in direction of decreasing x coordinates, thus in time only x coordinates of its points are changing. Formally, after time t each of x coordinates of its points will be decreased by vt.There is a pedestrian in the point (0, 0), who can move only by a vertical pedestrian crossing, presented as a segment connecting points (0, 0) and (0, w) with any speed not exceeding u. Thus the pedestrian can move only in a straight line Oy in any direction with any speed not exceeding u and not leaving the road borders. The pedestrian can instantly change his speed, thus, for example, he can stop instantly.Please look at the sample note picture for better understanding.We consider the pedestrian is hit by the bus, if at any moment the point he is located in lies strictly inside the bus polygon (this means that if the point lies on the polygon vertex or on its edge, the pedestrian is not hit by the bus).You are given the bus position at the moment 0. Please help Chris determine minimum amount of time the pedestrian needs to cross the road and reach the point (0, w) and not to be hit by the bus.",
    "prob_desc_output_spec": "Print the single real t — the time the pedestrian needs to croos the road and not to be hit by the bus. The answer is considered correct if its relative or absolute error doesn't exceed 10 - 6.",
    "prob_desc_input_spec": "The first line of the input contains four integers n, w, v, u (3 ≤ n ≤ 10 000, 1 ≤ w ≤ 109, 1 ≤ v,  u ≤ 1000) — the number of the bus polygon vertices, road width, bus speed and pedestrian speed respectively. The next n lines describes polygon vertices in counter-clockwise order. i-th of them contains pair of integers xi and yi ( - 109 ≤ xi ≤ 109, 0 ≤ yi ≤ w) — coordinates of i-th polygon point. It is guaranteed that the polygon is non-degenerate.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 2100,
    "file_name": "train_059.jsonl",
    "code_uid": "997f6f1659afdef199bae92a9522756c",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "n,w,v,u = map(int,raw_input().split(' '))\nlater = []\nflag = True\nfor i in range(n):\n    p = map(int,raw_input().split(' '))\n    if p[0] >= 0:\n        reach = p[0]/float(v)\n        if p[1] > u*reach:\n            flag = False\n        if p[1] <= u*reach:\n            later.append((reach,p[1]))\n    if p[0] < 0:\n        flag = False\nlater.sort(key=lambda x:x[1])\n\nif flag:\n    print w/float(u)\nelse:\n    current_t = 0\n    current_p = 0\n    for t,p in later:\n        if (t-current_t)*u > (p-current_p):\n            current_p = p\n            current_t = t\n    print current_t + (w-current_p)/float(u)\n",
    "prob_desc_created_at": "1470323700",
    "tags": [
        "implementation",
        "geometry"
    ],
    "hidden_unit_tests": ""
}