{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"0\\n1\\n4\\n2\"]",
    "src_uid": "ff9745ec5cc22c2ea50b6d789596f719",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given an array $$$a$$$ consisting of $$$n$$$ integers (it is guaranteed that $$$n$$$ is even, i.e. divisible by $$$2$$$). All $$$a_i$$$ does not exceed some integer $$$k$$$.Your task is to replace the minimum number of elements (replacement is the following operation: choose some index $$$i$$$ from $$$1$$$ to $$$n$$$ and replace $$$a_i$$$ with some integer in range $$$[1; k]$$$) to satisfy the following conditions:  after all replacements, all $$$a_i$$$ are positive integers not greater than $$$k$$$;  for all $$$i$$$ from $$$1$$$ to $$$\\frac{n}{2}$$$ the following equation is true: $$$a_i + a_{n - i + 1} = x$$$, where $$$x$$$ should be the same for all $$$\\frac{n}{2}$$$ pairs of elements. You have to answer $$$t$$$ independent test cases.",
    "prob_desc_output_spec": "For each test case, print the answer — the minimum number of elements you have to replace in $$$a$$$ to satisfy the conditions from the problem statement.",
    "prob_desc_input_spec": "The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Then $$$t$$$ test cases follow. The first line of the test case contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\le n \\le 2 \\cdot 10^5, 1 \\le k \\le 2 \\cdot 10^5$$$) — the length of $$$a$$$ and the maximum possible value of some $$$a_i$$$ correspondingly. It is guratanteed that $$$n$$$ is even (i.e. divisible by $$$2$$$). The second line of the test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le k$$$), where $$$a_i$$$ is the $$$i$$$-th element of $$$a$$$. It is guaranteed that the sum of $$$n$$$ (as well as the sum of $$$k$$$) over all test cases does not exceed $$$2 \\cdot 10^5$$$ ($$$\\sum n \\le 2 \\cdot 10^5$$$, $$$\\sum k \\le 2 \\cdot 10^5$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_022.jsonl",
    "code_uid": "048f6dbc102b7a0c2898561b26fd4887",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n4 2\\n1 2 1 2\\n4 3\\n1 2 2 1\\n8 7\\n6 1 1 7 6 3 4 6\\n6 6\\n5 2 6 1 3 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "t=int(input())\nimport random\nfor _ in range(t):\n    n,k=map(int,input().split())\n    l=list(map(int,input().split()))\n    c=[0]*(k+1)\n    e=[0]*(k+1)\n    d={}\n    for i in range(n//2):\n        c[min(l[i],l[n-1-i])]+=1\n        e[max(l[i],l[n-1-i])]+=1\n        try:\n            d[l[i]+l[n-1-i]]+=1\n        except:\n            d[l[i]+l[n-1-i]]=1\n    for i in range(1,k+1):\n        c[i]+=c[i-1]\n        e[i]+=e[i-1]\n    ans=n\n    for i in range(2,2*k+1):\n        if i<=k:\n            x=c[i-1]\n        else:\n            x=e[k]-e[i-k-1]\n        try:\n            x=x-d[i]\n        except:\n            pass\n        if i>k:\n            x = x+(n//2-e[k]+e[i-k-1])*2\n        else:\n            x = x+(n//2-c[i-1])*2\n        #print(i,x)\n        ans=min(ans,x)\n    print(ans)\n        \n    \n",
    "prob_desc_created_at": "1587479700",
    "tags": [
        "data structures",
        "two pointers",
        "greedy",
        "brute force"
    ],
    "hidden_unit_tests": ""
}