{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"1\", \"7\"]",
    "src_uid": "55a83526c10126ac3a6e6e5154b120d0",
    "prob_desc_notes": null,
    "prob_desc_description": "On the math lesson a teacher asked each pupil to come up with his own lucky numbers. As a fan of number theory Peter chose prime numbers. Bob was more original. He said that number t is his lucky number, if it can be represented as: t = a2 + b2,  where a, b are arbitrary positive integers.Now, the boys decided to find out how many days of the interval [l, r] (l ≤ r) are suitable for pair programming. They decided that the day i (l ≤ i ≤ r) is suitable for pair programming if and only if the number i is lucky for Peter and lucky for Bob at the same time. Help the boys to find the number of such days.",
    "prob_desc_output_spec": "In the only line print the number of days on the segment [l, r], which are lucky for Peter and Bob at the same time.",
    "prob_desc_input_spec": "The first line of the input contains integer numbers l, r (1 ≤ l, r ≤ 3·108).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 2200,
    "file_name": "train_029.jsonl",
    "code_uid": "3efb8df5e7104a319334a05551155731",
    "prob_desc_memory_limit": "128 megabytes",
    "prob_desc_sample_inputs": "[\"3 5\", \"6 66\"]",
    "exec_outcome": "PASSED",
    "source_code": "f = lambda x: int(x**.5)+1\nh,z = map(bytearray,'1\\0')\n\nL,R = map(int,raw_input().split())\n\nn = f(R); b = n/2*h; b[0] = 0\nfor k in xrange(1,f(n)/2):\n    if b[k]: p = 2*k+1; s = k*(p+1); b[s::p] = z*len(b[s::p])\n\ng = ((i*(i+1),2*i+1) for i,v in enumerate(b) if v)\n\nr = (R+3)/4*h; r[0] = 0\nfor s,p in g:\n    r[s::p] = z*len(r[s::p])\n\nprint r.count(h,(L+2)/4)+(L<=2<=R)\n",
    "prob_desc_created_at": "1315494000",
    "tags": [
        "number theory",
        "brute force",
        "math"
    ],
    "hidden_unit_tests": ""
}