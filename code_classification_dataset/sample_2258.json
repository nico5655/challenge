{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"0\", \"2\"]",
    "src_uid": "67cf9f83ed791a614bd01c5e0310813f",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given an array a. Some element of this array ai is a local minimum iff it is strictly less than both of its neighbours (that is, ai &lt; ai - 1 and ai &lt; ai + 1). Also the element can be called local maximum iff it is strictly greater than its neighbours (that is, ai &gt; ai - 1 and ai &gt; ai + 1). Since a1 and an have only one neighbour each, they are neither local minima nor local maxima.An element is called a local extremum iff it is either local maximum or local minimum. Your task is to calculate the number of local extrema in the given array.",
    "prob_desc_output_spec": "Print the number of local extrema in the given array.",
    "prob_desc_input_spec": "The first line contains one integer n (1 ≤ n ≤ 1000) — the number of elements in array a. The second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 1000) — the elements of array a.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_019.jsonl",
    "code_uid": "d711cbba61cd026103d5974e10b6f3fc",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n1 2 3\", \"4\\n1 5 2 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, a = int(input()), list(map(int, input().split()))\ncnt = sum([a[i - 1] > a[i] < a[i + 1] or a[i - 1] < a[i] > a[i + 1] for i in range(1, n - 1)])\nprint(cnt)\n",
    "prob_desc_created_at": "1510239900",
    "tags": [
        "implementation",
        "brute force"
    ],
    "hidden_unit_tests": ""
}