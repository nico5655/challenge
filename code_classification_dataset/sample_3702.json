{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1.0000000\", \"2.0000000\", \"1.3284271\", \"My poor head =(\"]",
    "src_uid": "c4b0f9263e18aac26124829cf3d880b6",
    "prob_desc_notes": "NoteIn the first example the answer is restricted by the coffin's length (remember — coffin's widths should not be larger than it's length).In the second example it is possible to drag the coffin through the corridor thanks to rotating wheels: firstly, drag it forward by one side while it will not be hampered by the wall, then move it forward by adjacent side perpendicularly to the initial movement direction (remember — arbitrary moves and rotations of the coffin are possible).",
    "prob_desc_description": "A very unusual citizen lives in a far away kingdom — Dwarf Gracula. However, his unusual name is not the weirdest thing (besides, everyone long ago got used to calling him simply Dwarf Greg). What is special about Dwarf Greg — he's been living for over 200 years; besides, he lives in a crypt on an abandoned cemetery and nobody has ever seen him out in daytime. Moreover, nobody has ever seen Greg buy himself any food. That's why nobody got particularly surprised when after the infernal dragon's tragic death cattle continued to disappear from fields. The people in the neighborhood were long sure that the harmless dragon was never responsible for disappearing cattle (considering that the dragon used to be sincere about his vegetarian views). But even that's not the worst part of the whole story.The worst part is that merely several minutes ago Dwarf Greg in some unintelligible way got inside your house and asked you to help him solve a problem. The point is that a short time ago Greg decided to order a new coffin (knowing his peculiar character, you are not surprised at all). But the problem is: a very long in both directions L-shaped corridor leads to Greg's crypt, and you can't drag just any coffin through that corridor. That's why he asked you to help.  You've formalized the task on a plane like this: let the corridor's width before and after the turn be equal to a and b correspondingly (see the picture). The corridor turns directly at a right angle, the coffin is a rectangle whose length and width are equal to l and w (l ≥ w) correspondingly. Dwarf Greg has already determined the coffin's length (l), which is based on his height; your task is to determine the coffin's maximally possible width (w), at which it can be brought to the crypt. Besides, due to its large mass (pure marble!) the coffin is equipped with rotating wheels; therefore it is impossible to lift it off the ground, however, arbitrary moves and rotations of the coffin in the plane become possible. The coffin may be rotated arbitrarily just before you drag it into crypt and move through the corridor.Greg promised that if you help him, he will grant you immortality (I wonder how?). And if you don't, well... trust me, you don't want to know what happens if you don't help him...",
    "prob_desc_output_spec": "Print the maximally possible width of a coffin with absolute or relative error no more than 10 - 7. If a coffin with the given length and positive width (the coffin that would meet the conditions from the problem's statement) does not exist, print \"My poor head =(\" (without quotes). It is guaranteed that if the answer is positive, it will be not less than 10 - 7. All the hacks will also be checked to meet that condition.",
    "prob_desc_input_spec": "The first line contains three space-separated integers a, b and l from the problem's statement (1 ≤ a, b, l ≤ 104).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 2500,
    "file_name": "train_080.jsonl",
    "code_uid": "8f4f2271765b2d947686b1a8b2bbf9fb",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 2 1\", \"2 2 2\", \"2 2 3\", \"2 2 6\"]",
    "exec_outcome": "PASSED",
    "source_code": "EPS = 1e-8\n\ndef cross(a, b):\n    return (a[0] * b[1]) - (a[1] * b[0])\n\ndef f(a, b, l, x):\n    y = (l*l - x*x)**0.5\n    return cross( (a-x, b), (-x, y) )\n\ndef main():\n    a, b, l = map(int, raw_input().split())\n\n    if a > b:\n        a, b = b, a\n\n    if l <= a and a <= b:\n        print \"%.9lf\" % l\n    elif a < l and l <= b:\n        print \"%.9lf\" % a\n    else:\n        lo = 0.0\n        hi = float(l)\n\n        while (hi - lo) > EPS:\n            x1 = lo + (hi-lo)/3.0\n            x2 = lo + (hi-lo)*2.0/3.0\n\n            if f(a, b, l, x1) > f(a, b, l, x2):\n                lo = x1\n            else:\n                hi = x2\n\n        ans = f(a, b, l, lo) / l \n\n        if ans < EPS:\n            print \"My poor head =(\"\n        else:\n            print \"%.9lf\" % ans\n\nif __name__ == \"__main__\":\n    main()\n",
    "prob_desc_created_at": "1311346800",
    "tags": [
        "binary search",
        "geometry",
        "ternary search"
    ],
    "hidden_unit_tests": ""
}