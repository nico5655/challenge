{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"3\", \"7\", \"14\"]",
    "src_uid": "a33991c9d7fdb4a4e00c0d0e6902bee1",
    "prob_desc_notes": "NoteIn the first sample one of the optimal segments is the segment that consists of the first and the second array elements, if we consider the array elements indexed starting from one.The second sample contains only one optimal segment, which contains exactly one array element (element with index three).",
    "prob_desc_description": "Little Petya likes arrays that consist of non-negative integers a lot. Recently his mom has presented him one such array consisting of n elements. Petya immediately decided to find there a segment of consecutive elements, such that the xor of all numbers from this segment was maximal possible. Help him with that.The xor operation is the bitwise exclusive \"OR\", that is denoted as \"xor\" in Pascal and \"^\" in C/C++/Java.",
    "prob_desc_output_spec": "Print a single integer — the required maximal xor of a segment of consecutive elements.",
    "prob_desc_input_spec": "The first line contains integer n (1 ≤ n ≤ 100) — the number of elements in the array. The second line contains the space-separated integers from the array. All numbers are non-negative integers strictly less than 230.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1100,
    "file_name": "train_002.jsonl",
    "code_uid": "df604195d77e3f08c241f957effa10f9",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n1 2 1 1 2\", \"3\\n1 2 7\", \"4\\n4 2 4 8\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = input()\narr = map(int,raw_input().split())\nans = 0\nfor i in range(n):\n\tfor j in range(i,n):\n\t\ta = 0\n\t\tfor k in range(i,j+1):\n\t\t\ta ^= arr[k]\n\t\tans = max(ans,a)\n\nprint ans\n",
    "prob_desc_created_at": "1354807800",
    "tags": [
        "implementation",
        "brute force"
    ],
    "hidden_unit_tests": ""
}