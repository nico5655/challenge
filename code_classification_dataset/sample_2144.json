{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"4 7 3 5 3\", \"2 6 4 5 8 8 6\"]",
    "src_uid": "c51e15aeb3f287608a26b85865546e85",
    "prob_desc_notes": null,
    "prob_desc_description": "Leha like all kinds of strange things. Recently he liked the function F(n, k). Consider all possible k-element subsets of the set [1, 2, ..., n]. For subset find minimal element in it. F(n, k) — mathematical expectation of the minimal element among all k-element subsets.But only function does not interest him. He wants to do interesting things with it. Mom brought him two arrays A and B, each consists of m integers. For all i, j such that 1 ≤ i, j ≤ m the condition Ai ≥ Bj holds. Help Leha rearrange the numbers in the array A so that the sum  is maximally possible, where A' is already rearranged array.",
    "prob_desc_output_spec": "Output m integers a'1, a'2, ..., a'm — array A' which is permutation of the array A.",
    "prob_desc_input_spec": "First line of input data contains single integer m (1 ≤ m ≤ 2·105) — length of arrays A and B. Next line contains m integers a1, a2, ..., am (1 ≤ ai ≤ 109) — array A. Next line contains m integers b1, b2, ..., bm (1 ≤ bi ≤ 109) — array B.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_017.jsonl",
    "code_uid": "8c464fa54ce1bc101b8be289968ad171",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n7 3 5 3 4\\n2 1 3 2 3\", \"7\\n4 6 5 8 8 2 6\\n2 1 2 2 1 1 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nbb = list(enumerate(b))\nbb = sorted(bb, key = lambda x:x[1])\n#print (bb)\na.sort(reverse=True)\nc = [0] * n\nfor i in range(n):\n\t#print (bb[i][0])\n\tc[bb[i][0]] = a[i]\nprint (*c)",
    "prob_desc_created_at": "1503068700",
    "tags": [
        "greedy",
        "combinatorics",
        "number theory",
        "math",
        "sortings"
    ],
    "hidden_unit_tests": ""
}