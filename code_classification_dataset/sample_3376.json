{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"124124\", \"100100\"]",
    "src_uid": "84650ac76888fa6d17bc0283b0c0ab0c",
    "prob_desc_notes": "NoteIn first example 124124 is the smallest number greater than 123456 that can be written with period L = 3 (P = 124).In the second example 100100 is the smallest number greater than 12345 with period L = 3 (P=100)",
    "prob_desc_description": "Alice became interested in periods of integer numbers. We say positive $$$X$$$ integer number is periodic with length $$$L$$$ if there exists positive integer number $$$P$$$ with $$$L$$$ digits such that $$$X$$$ can be written as $$$PPPPâ€¦P$$$. For example:$$$X = 123123123$$$ is periodic number with length $$$L = 3$$$ and $$$L = 9$$$$$$X = 42424242$$$ is periodic number with length $$$L = 2,L = 4$$$ and $$$L = 8$$$$$$X = 12345$$$ is periodic number with length $$$L = 5$$$For given positive period length $$$L$$$ and positive integer number $$$A$$$, Alice wants to find smallest integer number $$$X$$$ strictly greater than $$$A$$$ that is periodic with length L.",
    "prob_desc_output_spec": "One positive integer number representing smallest positive number that is periodic with length $$$L$$$ and is greater than $$$A$$$.",
    "prob_desc_input_spec": "First line contains one positive integer number $$$L \\ (1 \\leq L \\leq 10^5)$$$ representing length of the period. Second line contains one positive integer number $$$A \\ (1 \\leq A \\leq 10^{100 000})$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_055.jsonl",
    "code_uid": "6412f51877b8f0e0c5387f8499f94d0d",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n123456\", \"3\\n12345\"]",
    "exec_outcome": "PASSED",
    "source_code": "def revive(l):\n    res = pow(10 , l-1)\n    return str(res)\n\n\n\nl = int(input())\ns = input()\nval = 0\nif len(s) % l == 0:\n    ans = s[:l]\n    if ans*(len(s)//l) > s:\n        print(ans*(len(s)//l))\n        exit()\n    elif ans == \"9\"*l:\n        ans = revive(l)\n        val = l\n    else:\n        ans = str(int(ans) + 1)\nelse:\n    ans = revive(l)\nprint(ans*((len(s) + l-1 + val)//l))",
    "prob_desc_created_at": "1568554500",
    "tags": [
        "implementation",
        "strings"
    ],
    "hidden_unit_tests": ""
}