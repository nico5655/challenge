{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"2\\n0\\n4\\n0\\n5\\n0\"]",
    "src_uid": "32130f939336bb6f2deb4dfa5402867d",
    "prob_desc_notes": "NoteIn the first example test case two pairs satisfy the conditions:   $$$i = 2, k = 1$$$, for which the product is: $$$a_{2} \\cdot a_{5} = 2$$$ which is a prime number.  $$$i = 3, k = 1$$$, for which the product is: $$$a_{3} \\cdot a_{6} = 19$$$ which is a prime number. In the second example test case there are no pairs that satisfy the conditions.In the third example test case four pairs satisfy the conditions:   $$$i = 1, k = 1$$$, for which the product is: $$$a_{1} \\cdot a_{4} = 2$$$ which is a prime number.  $$$i = 1, k = 2$$$, for which the product is: $$$a_{1} \\cdot a_{4} \\cdot a_{7} = 2$$$ which is a prime number.  $$$i = 3, k = 1$$$, for which the product is: $$$a_{3} \\cdot a_{6} = 2$$$ which is a prime number.  $$$i = 6, k = 1$$$, for which the product is: $$$a_{6} \\cdot a_{9} = 2$$$ which is a prime number. In the fourth example test case there are no pairs that satisfy the conditions.In the fifth example test case five pairs satisfy the conditions:   $$$i = 1, k = 1$$$, for which the product is: $$$a_{1} \\cdot a_{2} = 2$$$ which is a prime number.  $$$i = 1, k = 2$$$, for which the product is: $$$a_{1} \\cdot a_{2} \\cdot a_{3} = 2$$$ which is a prime number.  $$$i = 1, k = 3$$$, for which the product is: $$$a_{1} \\cdot a_{2} \\cdot a_{3} \\cdot a_{4} = 2$$$ which is a prime number.  $$$i = 2, k = 1$$$, for which the product is: $$$a_{2} \\cdot a_{3} = 2$$$ which is a prime number.  $$$i = 2, k = 2$$$, for which the product is: $$$a_{2} \\cdot a_{3} \\cdot a_{4} = 2$$$ which is a prime number. In the sixth example test case there are no pairs that satisfy the conditions.",
    "prob_desc_description": "  While performing complex market analysis William encountered the following problem:For a given array $$$a$$$ of size $$$n$$$ and a natural number $$$e$$$, calculate the number of pairs of natural numbers $$$(i, k)$$$ which satisfy the following conditions:   $$$1 \\le i, k$$$  $$$i + e \\cdot k \\le n$$$.  Product $$$a_i \\cdot a_{i + e} \\cdot a_{i + 2 \\cdot e} \\cdot \\ldots \\cdot a_{i + k \\cdot e} $$$ is a prime number. A prime number (or a prime) is a natural number greater than 1 that is not a product of two smaller natural numbers.",
    "prob_desc_output_spec": "For each test case output the answer in the following format: Output one line containing the number of pairs of numbers $$$(i, k)$$$ which satisfy the conditions.",
    "prob_desc_input_spec": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10\\,000$$$). Description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$e$$$ $$$(1 \\le e \\le n \\le 2 \\cdot 10^5)$$$, the number of items in the array and number $$$e$$$, respectively. The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ $$$(1 \\le a_i \\le 10^6)$$$, the contents of the array. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1400,
    "file_name": "train_110.jsonl",
    "code_uid": "e22671470ffeab7a6bb5170f4a21a493",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n7 3\\n10 2 1 3 1 19 3\\n3 2\\n1 13 1\\n9 3\\n2 4 2 1 1 1 1 4 2\\n3 1\\n1 1 1\\n4 1\\n1 2 1 1\\n2 2\\n1 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "# 16:34-\r\nimport sys\r\ninput = lambda: sys.stdin.readline().rstrip()\r\n\r\nfrom functools import lru_cache\r\n@lru_cache(maxsize=None)\r\ndef is_prime(a):\r\n\tif a==1:return False\r\n\tfor i in range(2,int(a**0.5)+1):\r\n\t\tif a%i==0:\r\n\t\t\treturn False\r\n\treturn True\r\n\r\ndef cal(B):\r\n\tans = 0\r\n\tfor i,b in enumerate(B):\r\n\t\tif b==2:\r\n\t\t\tl,r = i,i\r\n\t\t\tfor j in range(i-1,-1,-1):\r\n\t\t\t\tif B[j]==1:\r\n\t\t\t\t\tl=j\r\n\t\t\t\telse:\r\n\t\t\t\t\tbreak\r\n\t\t\tfor j in range(i+1,len(B)):\r\n\t\t\t\tif B[j]==1:\r\n\t\t\t\t\tr=j\r\n\t\t\t\telse:\r\n\t\t\t\t\tbreak\r\n\t\t\tans += (r-i)+(i-l)+(r-i)*(i-l)\r\n\treturn ans\r\n\r\nfor _ in range(int(input())):\r\n\tN,E = map(int, input().split())\r\n\tA = list(map(int, input().split()))\r\n\tB = [[] for _ in range(E)]\r\n\tfor i in range(E):\r\n\t\tfor j in range(i,N,E):\r\n\t\t\tB[i].append(A[j])\r\n\r\n\tans = 0\r\n\tfor b in B:\r\n\t\tfor i,d in enumerate(b):\r\n\t\t\tif d==1:continue\r\n\t\t\tif is_prime(d):\r\n\t\t\t\tb[i] = 2\r\n\t\t\telse:\r\n\t\t\t\tb[i] = 0\r\n\t\tans += cal(b)\r\n\tprint(ans)\r\n\r\n",
    "prob_desc_created_at": "1638110100",
    "tags": [
        "binary search",
        "dp",
        "implementation",
        "number theory",
        "schedules",
        "two pointers"
    ],
    "hidden_unit_tests": ""
}