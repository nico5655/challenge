{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"9 8\", \"4608 4096\"]",
    "src_uid": "59d5e5ed2bc4b316e950e2a4dbc99d68",
    "prob_desc_notes": null,
    "prob_desc_description": "Let's call a positive integer composite if it has at least one divisor other than $$$1$$$ and itself. For example:  the following numbers are composite: $$$1024$$$, $$$4$$$, $$$6$$$, $$$9$$$;  the following numbers are not composite: $$$13$$$, $$$1$$$, $$$2$$$, $$$3$$$, $$$37$$$. You are given a positive integer $$$n$$$. Find two composite integers $$$a,b$$$ such that $$$a-b=n$$$.It can be proven that solution always exists.",
    "prob_desc_output_spec": "Print two composite integers $$$a,b$$$ ($$$2 \\leq a, b \\leq 10^9, a-b=n$$$). It can be proven, that solution always exists. If there are several possible solutions, you can print any. ",
    "prob_desc_input_spec": "The input contains one integer $$$n$$$ ($$$1 \\leq n \\leq 10^7$$$): the given integer.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_000.jsonl",
    "code_uid": "f516914c2ba0dc71e80ae4421503ee32",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"1\", \"512\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\n\nx = 1000000000\n\nwhile True:\n    if n%2==0:\n        if x%2==0 and (x-n)%2==0:\n            print(x , x-n)\n            break\n        else:\n            x-=2\n    else:\n        if x%3 == 0:\n            print(x , x-n)\n            break\n        else:\n            x-=1\n\n",
    "prob_desc_created_at": "1576926300",
    "tags": [
        "brute force",
        "math"
    ],
    "hidden_unit_tests": ""
}