{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\\nC.\\n.C\"]",
    "src_uid": "1aede54b41d6fad3e74f24a6592198eb",
    "prob_desc_notes": null,
    "prob_desc_description": "Iahub likes chess very much. He even invented a new chess piece named Coder. A Coder can move (and attack) one square horizontally or vertically. More precisely, if the Coder is located at position (x, y), he can move to (or attack) positions (x + 1, y), (x–1, y), (x, y + 1) and (x, y–1).Iahub wants to know how many Coders can be placed on an n × n chessboard, so that no Coder attacks any other Coder.",
    "prob_desc_output_spec": "On the first line print an integer, the maximum number of Coders that can be placed on the chessboard. On each of the next n lines print n characters, describing the configuration of the Coders. For an empty cell print an '.', and for a Coder print a 'C'. If there are multiple correct answers, you can print any.",
    "prob_desc_input_spec": "The first line contains an integer n (1 ≤ n ≤ 1000).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_002.jsonl",
    "code_uid": "03d5c0b2a04cf537a74a61023e822780",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\"]",
    "exec_outcome": "PASSED",
    "source_code": "from math import ceil\nn = int(input())\nprint(ceil(n ** 2 / 2))\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        if i % 2 == j % 2:\n            print('C', end='')\n        else:\n            print('.', end='')\n    print()\n",
    "prob_desc_created_at": "1390231800",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}