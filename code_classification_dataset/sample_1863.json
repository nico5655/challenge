{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"TAK\", \"TAK\", \"NIE\"]",
    "src_uid": "bec2349631158b7dbfedcaededf65cc2",
    "prob_desc_notes": null,
    "prob_desc_description": "Let's call a string \"s-palindrome\" if it is symmetric about the middle of the string. For example, the string \"oHo\" is \"s-palindrome\", but the string \"aa\" is not. The string \"aa\" is not \"s-palindrome\", because the second half of it is not a mirror reflection of the first half.  English alphabet You are given a string s. Check if the string is \"s-palindrome\".",
    "prob_desc_output_spec": "Print \"TAK\" if the string s is \"s-palindrome\" and \"NIE\" otherwise.",
    "prob_desc_input_spec": "The only line contains the string s (1 ≤ |s| ≤ 1000) which consists of only English letters.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_014.jsonl",
    "code_uid": "da5e0484f25b125c1e0bca5ae7be5816",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"oXoxoXo\", \"bod\", \"ER\"]",
    "exec_outcome": "PASSED",
    "source_code": "s = input()\nitself = {'A', 'H', 'I', 'M', 'O', 'o', 'T', 'U', 'V', 'v', 'W', 'w', 'X', 'x', 'Y'}\nd = {'p' : 'q', 'q' : 'p', 'b' : 'd', 'd' : 'b'}\nfor i in itself:\n\td[i] = i\nok = True\nfor i in range(len(s)):\n\tok &= s[i] in d.keys() and s[len(s) - i - 1] == d[s[i]]\nprint(\"TAK\" if ok else \"NIE\")",
    "prob_desc_created_at": "1468425600",
    "tags": [
        "implementation",
        "strings"
    ],
    "hidden_unit_tests": ""
}