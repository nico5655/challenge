{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"2\", \"7\"]",
    "src_uid": "daf675dadc8edcd6734edbf3548eb6bf",
    "prob_desc_notes": "NoteIn the first test, it is possible to apply the following operations in order:  ",
    "prob_desc_description": "You are given $$$n$$$ elements numbered from $$$1$$$ to $$$n$$$, the element $$$i$$$ has value $$$a_i$$$ and color $$$c_i$$$, initially, $$$c_i = 0$$$ for all $$$i$$$.The following operation can be applied:  Select three elements $$$i$$$, $$$j$$$ and $$$k$$$ ($$$1 \\leq i &lt; j &lt; k \\leq n$$$), such that $$$c_i$$$, $$$c_j$$$ and $$$c_k$$$ are all equal to $$$0$$$ and $$$a_i = a_k$$$, then set $$$c_j = 1$$$. Find the maximum value of $$$\\sum\\limits_{i=1}^n{c_i}$$$ that can be obtained after applying the given operation any number of times.",
    "prob_desc_output_spec": "Print a single integer in a line — the maximum value of $$$\\sum\\limits_{i=1}^n{c_i}$$$ that can be obtained after applying the given operation any number of times.",
    "prob_desc_input_spec": "The first line contains an integer $$$n$$$ ($$$3 \\leq n \\leq 2 \\cdot 10^5$$$) — the number of elements. The second line consists of $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\leq a_i \\leq n$$$), where $$$a_i$$$ is the value of the $$$i$$$-th element.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 2200,
    "file_name": "train_088.jsonl",
    "code_uid": "555b58b9483b24e45166a62c2466c44d",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"7\\n1 2 1 2 7 4 7\", \"13\\n1 2 3 2 1 3 3 4 5 5 5 4 7\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=int(input())\r\na=list(map(int, input().split()))\r\nb=[[] for i in range(n+1)]\r\nfor i in range(n):\r\n    b[a[i]].append(i)\r\nc=[]\r\nfor i in range(1, n+1):\r\n    if len(b[i])>1:\r\n        c.append([b[i][0], b[i][-1]])\r\nc=sorted(c, key=lambda x:x[0])\r\nd=[]\r\nldx=0\r\nrdx=0\r\nf=0\r\ncnt=0\r\nfor i in range(len(c)):\r\n    if rdx<c[i][1]:\r\n        rdx=c[i][1]\r\n        d.append(c[i])\r\ni=0\r\nj=0\r\nk=0\r\nwhile i<len(d):\r\n    while i<len(d) and d[j][1]>d[i][0]:\r\n        i+=1\r\n    i-=1\r\n    if i<len(d)-1 and d[i][1]>d[i+1][0]:\r\n        f+=1\r\n        j=i\r\n    else:\r\n        if i!=k:\r\n            f+=1\r\n        cnt+=d[i][1]-d[k][0]-1-f\r\n        f=0\r\n        i+=1\r\n        j=i\r\n        k=i\r\n        asdf=0\r\nprint(cnt)",
    "prob_desc_created_at": "1643294100",
    "tags": [
        "greedy",
        "greedy",
        "sortings",
        "two pointers"
    ],
    "hidden_unit_tests": ""
}