{
    "prob_desc_time_limit": "4 seconds",
    "prob_desc_sample_outputs": "[\"1\", \"3\", \"2\"]",
    "src_uid": "73e8984cceded15027c4ab89c5624a92",
    "prob_desc_notes": null,
    "prob_desc_description": "A restaurant received n orders for the rental. Each rental order reserve the restaurant for a continuous period of time, the i-th order is characterized by two time values — the start time li and the finish time ri (li ≤ ri).Restaurant management can accept and reject orders. What is the maximal number of orders the restaurant can accept?No two accepted orders can intersect, i.e. they can't share even a moment of time. If one order ends in the moment other starts, they can't be accepted both.",
    "prob_desc_output_spec": "Print the maximal number of orders that can be accepted.",
    "prob_desc_input_spec": "The first line contains integer number n (1 ≤ n ≤ 5·105) — number of orders. The following n lines contain integer values li and ri each (1 ≤ li ≤ ri ≤ 109).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_043.jsonl",
    "code_uid": "3ea970f920dc2b87db22c1706edb4d33",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n7 11\\n4 7\", \"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\", \"6\\n4 8\\n1 5\\n4 7\\n2 5\\n1 3\\n6 8\"]",
    "exec_outcome": "PASSED",
    "source_code": "def compare(a,b):\n    if a[1] > b[1]:\n        return 1\n    elif a[1] == b[1]:\n        return 0\n    else:\n        return -1\n\nn = input()\narr = []\nfor i in range(n):\n    arr.append(map(int,raw_input().split()))\narr = sorted(arr, cmp = compare)\nj = 0\nans = 1\nfor i in range(n):\n    if arr[i][0] > arr[j][1]:\n        j = i\n        ans += 1\nprint ans",
    "prob_desc_created_at": "1447264800",
    "tags": [
        "dp",
        "sortings",
        "greedy"
    ],
    "hidden_unit_tests": ""
}