{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1\", \"9\"]",
    "src_uid": "d9bbd6ca6cfd4b4cdf6017c1b86abd03",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given a n × m field consisting only of periods ('.') and asterisks ('*'). Your task is to count all right triangles with two sides parallel to the square sides, whose vertices are in the centers of '*'-cells. A right triangle is a triangle in which one angle is a right angle (that is, a 90 degree angle).",
    "prob_desc_output_spec": "Output a single number — total number of square triangles in the field. Please, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d).",
    "prob_desc_input_spec": "The first line contains two positive integer numbers n and m (1 ≤ n, m ≤ 1000). The following n lines consist of m characters each, describing the field. Only '.' and '*' are allowed.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_021.jsonl",
    "code_uid": "d5af149277687afd56b59b6353a81fc3",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 2\\n**\\n*.\", \"3 4\\n*..*\\n.**.\\n*.**\"]",
    "exec_outcome": "PASSED",
    "source_code": "u=input\nn,m=map(int,u().split())\nl=[list(u()) for _ in range(n)]\nR=[p.count('*') for p in l]\nC=[p.count('*') for p in zip(*l)]\nt=0\nfor i in range(n):\n for j in range(m):\n  if(l[i][j]=='*'):\n   t+=(R[i]-1)*(C[j]-1)\nprint(t)\n",
    "prob_desc_created_at": "1294160400",
    "tags": [
        "combinatorics"
    ],
    "hidden_unit_tests": ""
}