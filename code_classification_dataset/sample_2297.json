{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"391 0\\n0 6 1 3 5\\n0\"]",
    "src_uid": "f18a5fa0b2e7e96cb5994b7b2dbe0189",
    "prob_desc_notes": "NoteIn the first test case the array changes as follows:Initially, the array is $$$[-199, 192]$$$. $$$d = 192$$$.After the operation, the array becomes $$$[d-(-199), d-192] = [391, 0]$$$.",
    "prob_desc_description": "Being stuck at home, Ray became extremely bored. To pass time, he asks Lord Omkar to use his time bending power: Infinity Clock! However, Lord Omkar will only listen to mortals who can solve the following problem:You are given an array $$$a$$$ of $$$n$$$ integers. You are also given an integer $$$k$$$. Lord Omkar wants you to do $$$k$$$ operations with this array.Define one operation as the following:   Set $$$d$$$ to be the maximum value of your array.  For every $$$i$$$ from $$$1$$$ to $$$n$$$, replace $$$a_{i}$$$ with $$$d-a_{i}$$$. The goal is to predict the contents in the array after $$$k$$$ operations. Please help Ray determine what the final sequence will look like!",
    "prob_desc_output_spec": "For each case, print the final version of array $$$a$$$ after $$$k$$$ operations described above.",
    "prob_desc_input_spec": "Each test contains multiple test cases. The first line contains the number of cases $$$t$$$ ($$$1 \\le t \\le 100$$$). Description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5, 1 \\leq k \\leq 10^{18}$$$) – the length of your array and the number of operations to perform. The second line of each test case contains $$$n$$$ integers $$$a_{1},a_{2},...,a_{n}$$$ $$$(-10^9 \\leq a_{i} \\leq 10^9)$$$ – the initial contents of your array. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_020.jsonl",
    "code_uid": "218b099d0e20e60926872927b7b7159a",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n2 1\\n-199 192\\n5 19\\n5 -1 4 2 0\\n1 2\\n69\"]",
    "exec_outcome": "PASSED",
    "source_code": "t=int(input())\nfor i in range(0,t):\n    n,k=map(int,input().split())\n    \n    ls=list(map(int,input().rstrip().split()))\n    \n    if(k%2==1):\n        maxx=ls[0]\n        for l in range(0,n):\n            if ls[l]>maxx:\n                maxx=ls[l]\n        for l in range(0,n):\n            ls[l]=maxx-ls[l]\n        \n    else:\n        j=0\n        while(j<=1):\n            maxx=ls[0]\n            for l in range(0,n):\n                if ls[l]>maxx:\n                    maxx=ls[l]\n            for l in range(0,n):\n                ls[l]=maxx-ls[l]\n            j=j+1\n    for j in ls:\n        print(j,end=\" \")\n    print(\" \")",
    "prob_desc_created_at": "1597588500",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}