{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2 1\\n2 1 5 3 4\"]",
    "src_uid": "f4779e16e0857e6507fdde55e6d4f982",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given one integer $$$n$$$ ($$$n &gt; 1$$$).Recall that a permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2, 3, 1, 5, 4]$$$ is a permutation of length $$$5$$$, but $$$[1, 2, 2]$$$ is not a permutation ($$$2$$$ appears twice in the array) and $$$[1, 3, 4]$$$ is also not a permutation ($$$n = 3$$$ but there is $$$4$$$ in the array).Your task is to find a permutation $$$p$$$ of length $$$n$$$ that there is no index $$$i$$$ ($$$1 \\le i \\le n$$$) such that $$$p_i = i$$$ (so, for all $$$i$$$ from $$$1$$$ to $$$n$$$ the condition $$$p_i \\ne i$$$ should be satisfied).You have to answer $$$t$$$ independent test cases.If there are several answers, you can print any. It can be proven that the answer exists for each $$$n &gt; 1$$$.",
    "prob_desc_output_spec": "For each test case, print $$$n$$$ distinct integers $$$p_1, p_2, \\ldots, p_n$$$ — a permutation that there is no index $$$i$$$ ($$$1 \\le i \\le n$$$) such that $$$p_i = i$$$ (so, for all $$$i$$$ from $$$1$$$ to $$$n$$$ the condition $$$p_i \\ne i$$$ should be satisfied). If there are several answers, you can print any. It can be proven that the answer exists for each $$$n &gt; 1$$$.",
    "prob_desc_input_spec": "The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases. Then $$$t$$$ test cases follow. The only line of the test case contains one integer $$$n$$$ ($$$2 \\le n \\le 100$$$) — the length of the permutation you have to find.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": null,
    "file_name": "train_014.jsonl",
    "code_uid": "50aa4e268859b2c39300847ce919ad31",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n2\\n5\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\nlist1 = []\na = 1\nfor i in range(0,n):\n    list1.append(int(input()))\nfor j in list1:\n    if j%2==0:\n        for num in range(j,0,-1):\n            print(num,end=\" \")\n    else:\n        print('2 3 1',end=\" \")\n        print(* [x for x in range(j,3,-1)])\n    if a in range(1,n):\n        print(\"\")\n    a+=1",
    "prob_desc_created_at": "1606228500",
    "tags": [
        "constructive algorithms",
        "probabilities"
    ],
    "hidden_unit_tests": ""
}