{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"4\", \"3\", \"2\"]",
    "src_uid": "c31fed523230af1f904218b2fe0d663d",
    "prob_desc_notes": "NoteIt is possible for the x-coordinate of the new house to have non-integer value.",
    "prob_desc_description": "A new cottage village called «Flatville» is being built in Flatland. By now they have already built in «Flatville» n square houses with the centres on the Оx-axis. The houses' sides are parallel to the coordinate axes. It's known that no two houses overlap, but they can touch each other.The architect bureau, where Peter works, was commissioned to build a new house in «Flatville». The customer wants his future house to be on the Оx-axis, to be square in shape, have a side t, and touch at least one of the already built houses. For sure, its sides should be parallel to the coordinate axes, its centre should be on the Ox-axis and it shouldn't overlap any of the houses in the village.Peter was given a list of all the houses in «Flatville». Would you help him find the amount of possible positions of the new house?",
    "prob_desc_output_spec": "Output the amount of possible positions of the new house.",
    "prob_desc_input_spec": "The first line of the input data contains numbers n and t (1 ≤ n, t ≤ 1000). Then there follow n lines, each of them contains two space-separated integer numbers: xi ai, where xi — x-coordinate of the centre of the i-th house, and ai — length of its side ( - 1000 ≤ xi ≤ 1000, 1 ≤ ai ≤ 1000).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1200,
    "file_name": "train_019.jsonl",
    "code_uid": "3ce51d933703e7122b3b2130fca0d3bb",
    "prob_desc_memory_limit": "64 megabytes",
    "prob_desc_sample_inputs": "[\"2 2\\n0 4\\n6 2\", \"2 2\\n0 4\\n5 2\", \"2 3\\n0 4\\n5 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "n,l = map(int, raw_input().split())\nxr = xrange(n)\na = [map(float, raw_input().split()) for _ in xr]\nfor o in a:\n    st = o[0] - o[1]/2\n    ed = o[0] + o[1]/2\n    o[0] = st\n    o[1] = ed\nb = sorted(a,key=lambda aa:aa[0])\na = None\nc = []\nr = 2\nfor i in xr:\n    if i < n-1:\n        if b[i+1][0] - b[i][1] == l:\n            r+=1\n        elif b[i+1][0] - b[i][1] > l:\n            r+=2\nprint r",
    "prob_desc_created_at": "1275145200",
    "tags": [
        "implementation",
        "sortings"
    ],
    "hidden_unit_tests": ""
}