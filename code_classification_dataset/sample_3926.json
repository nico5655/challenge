{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"YES\\nYES\\nNO\\nYES\\nYES\"]",
    "src_uid": "f4267120fce9304fc4c45142b60fb867",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given $$$n$$$ points with integer coordinates on a coordinate axis $$$OX$$$. The coordinate of the $$$i$$$-th point is $$$x_i$$$. All points' coordinates are distinct and given in strictly increasing order.For each point $$$i$$$, you can do the following operation no more than once: take this point and move it by $$$1$$$ to the left or to the right (i..e., you can change its coordinate $$$x_i$$$ to $$$x_i - 1$$$ or to $$$x_i + 1$$$). In other words, for each point, you choose (separately) its new coordinate. For the $$$i$$$-th point, it can be either $$$x_i - 1$$$, $$$x_i$$$ or $$$x_i + 1$$$.Your task is to determine if you can move some points as described above in such a way that the new set of points forms a consecutive segment of integers, i. e. for some integer $$$l$$$ the coordinates of points should be equal to $$$l, l + 1, \\ldots, l + n - 1$$$.Note that the resulting points should have distinct coordinates.You have to answer $$$t$$$ independent test cases.",
    "prob_desc_output_spec": "For each test case, print the answer — if the set of points from the test case can be moved to form a consecutive segment of integers, print YES, otherwise print NO.",
    "prob_desc_input_spec": "The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 2 \\cdot 10^4$$$) — the number of test cases. Then $$$t$$$ test cases follow. The first line of the test case contains one integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) — the number of points in the set $$$x$$$. The second line of the test case contains $$$n$$$ integers $$$x_1 &lt; x_2 &lt; \\ldots &lt; x_n$$$ ($$$1 \\le x_i \\le 10^6$$$), where $$$x_i$$$ is the coordinate of the $$$i$$$-th point. It is guaranteed that the points are given in strictly increasing order (this also means that all coordinates are distinct). It is also guaranteed that the sum of $$$n$$$ does not exceed $$$2 \\cdot 10^5$$$ ($$$\\sum n \\le 2 \\cdot 10^5$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_087.jsonl",
    "code_uid": "31dd71f3f425b46936991a1c34b435f2",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n\\n2\\n\\n1 4\\n\\n3\\n\\n1 2 3\\n\\n4\\n\\n1 2 3 7\\n\\n1\\n\\n1000000\\n\\n3\\n\\n2 5 6\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\r\nt = int(input())\r\nis_one = 0\r\nis_three = 0\r\nis_two = 0\r\nis_break = 0\r\nfor i in range(t):\r\n    is_one = 0\r\n    is_three = 0\r\n    is_two = 0\r\n    is_break = 0\r\n    fullcount = 0\r\n    n = int(input())\r\n    arr = list(map(int, input().split()))\r\n    # print(arr)\r\n    if(n == 1):\r\n        print('YES')\r\n        continue\r\n    else:\r\n        for idx, val in enumerate(arr):\r\n            if(idx>0):\r\n                if(arr[idx]-arr[idx-1] == 1):\r\n                    is_one += 1\r\n                elif(arr[idx]-arr[idx-1] == 3):\r\n                    is_three += 1\r\n                    if(is_two != 0):\r\n                        print('NO')\r\n                        is_break = 1\r\n                        break\r\n                    if(is_three >= 2):\r\n                        print('NO')\r\n                        is_break = 1\r\n                        break\r\n                elif(arr[idx]-arr[idx-1] == 2):\r\n                    is_two += 1\r\n                    if(is_three != 0):\r\n                        print('NO')\r\n                        is_break = 1\r\n                        break\r\n                    if(is_two >= 3):\r\n                        print('NO')\r\n                        is_break = 1\r\n                        break\r\n                else:\r\n                    print('NO')\r\n                    is_break = 1\r\n                    break\r\n        if(is_break == 1):\r\n            continue\r\n        else:\r\n            print('YES')",
    "prob_desc_created_at": "1650638100",
    "tags": [
        "brute force",
        "math",
        "sortings"
    ],
    "hidden_unit_tests": ""
}