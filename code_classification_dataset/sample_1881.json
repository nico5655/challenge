{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\\n3\\n2\"]",
    "src_uid": "ccfe798f5dc63c492ff54cf40bb40613",
    "prob_desc_notes": "NoteIn the first example, Bob can press the $$$-2$$$ button twice to reach $$$0$$$. Note that Bob can not press $$$-5$$$ when the volume is $$$4$$$ since it will make the volume negative. In the second example, one of the optimal ways for Bob is to press the $$$+5$$$ twice, then press $$$-1$$$ once.In the last example, Bob can press the $$$+5$$$ once, then press $$$+1$$$. ",
    "prob_desc_description": "Bob watches TV every day. He always sets the volume of his TV to $$$b$$$. However, today he is angry to find out someone has changed the volume to $$$a$$$. Of course, Bob has a remote control that can change the volume.There are six buttons ($$$-5, -2, -1, +1, +2, +5$$$) on the control, which in one press can either increase or decrease the current volume by $$$1$$$, $$$2$$$, or $$$5$$$. The volume can be arbitrarily large, but can never be negative. In other words, Bob cannot press the button if it causes the volume to be lower than $$$0$$$.As Bob is so angry, he wants to change the volume to $$$b$$$ using as few button presses as possible. However, he forgets how to do such simple calculations, so he asks you for help. Write a program that given $$$a$$$ and $$$b$$$, finds the minimum number of presses to change the TV volume from $$$a$$$ to $$$b$$$.",
    "prob_desc_output_spec": "For each test case, output a single integer — the minimum number of presses to change the TV volume from $$$a$$$ to $$$b$$$. If Bob does not need to change the volume (i.e. $$$a=b$$$), then print $$$0$$$.",
    "prob_desc_input_spec": "Each test contains multiple test cases. The first line contains the number of test cases $$$T$$$ ($$$1 \\le T \\le 1\\,000$$$). Then the descriptions of the test cases follow. Each test case consists of one line containing two integers $$$a$$$ and $$$b$$$ ($$$0 \\le a, b \\le 10^{9}$$$) — the current volume and Bob's desired volume, respectively.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_014.jsonl",
    "code_uid": "6b6b6578126e19d1c9e1f39b079d3a6f",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n4 0\\n5 14\\n3 9\"]",
    "exec_outcome": "PASSED",
    "source_code": "for _ in range(int(input())):\n    s = list(map(int, input().split()))\n    t = 0\n    k = abs(s[1] - s[0])\n    a = k / 5\n    b = k % 5\n    if a == 0:\n        if b == 0:\n            print(int(t))\n            continue\n        elif 3 > b > 0:\n            t += 1\n        elif 5 > b >= 3:\n            t += 2\n    else:\n        t += a\n        if b == 0:\n            print(int(t))\n            continue\n        elif 3 > b > 0:\n            t += 1\n        elif 5 > b >= 3:\n            t += 2\n    print(int(t))",
    "prob_desc_created_at": "1574174100",
    "tags": [
        "math"
    ],
    "hidden_unit_tests": ""
}