{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"YES\\n1 4 5 2 3 6\", \"NO\"]",
    "src_uid": "5e23f02afc7446ecf8688ad2a8fa284d",
    "prob_desc_notes": "NoteExample from the statement is shown for the first example. It can be proved that there is no solution in the second example.",
    "prob_desc_description": "You are given integer $$$n$$$. You have to arrange numbers from $$$1$$$ to $$$2n$$$, using each of them exactly once, on the circle, so that the following condition would be satisfied:For every $$$n$$$ consecutive numbers on the circle write their sum on the blackboard. Then any two of written on the blackboard $$$2n$$$ numbers differ not more than by $$$1$$$.For example, choose $$$n = 3$$$. On the left you can see an example of a valid arrangement: $$$1 + 4 + 5 = 10$$$, $$$4 + 5 + 2 = 11$$$, $$$5 + 2 + 3 = 10$$$, $$$2 + 3 + 6 = 11$$$, $$$3 + 6 + 1 = 10$$$, $$$6 + 1 + 4 = 11$$$, any two numbers differ by at most $$$1$$$. On the right you can see an invalid arrangement: for example, $$$5 + 1 + 6 = 12$$$, and $$$3 + 2 + 4 = 9$$$, $$$9$$$ and $$$12$$$ differ more than by $$$1$$$.  ",
    "prob_desc_output_spec": "If there is no solution, output \"NO\" in the first line.  If there is a solution, output \"YES\" in the first line. In the second line output $$$2n$$$ numbers — numbers from $$$1$$$ to $$$2n$$$ in the order they will stay in the circle. Each number should appear only once. If there are several solutions, you can output any of them.",
    "prob_desc_input_spec": "The first and the only line contain one integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1200,
    "file_name": "train_013.jsonl",
    "code_uid": "d519737e145ed3faa5d1cd6ab6f26952",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\", \"4\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=int(input())\nn*=n%2\na=2*n*[0]\nfor i in range(2*n):a[i//2+(i^i//2)%2*n]=i+1\nprint('YNEOS'[n<1::2],*a)",
    "prob_desc_created_at": "1566135900",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "hidden_unit_tests": ""
}