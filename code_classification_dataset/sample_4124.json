{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"3\", \"0\", \"11\", \"2833800505\"]",
    "src_uid": "96ba63c7fea9bd0a5ddd8ffc886da153",
    "prob_desc_notes": "NoteIn the first test case, we may choose to make the third member run first, followed by the first member, and finally the second. Thus $$$a_1 = 2$$$, $$$a_2 = 3$$$, and $$$a_3 = 1$$$. We have:  $$$d_1 = \\max(2) - \\min(2) = 2 - 2 = 0$$$.  $$$d_2 = \\max(2, 3) - \\min(2, 3) = 3 - 2 = 1$$$.  $$$d_3 = \\max(2, 3, 1) - \\min(2, 3, 1) = 3 - 1 = 2$$$. The resulting sum is $$$d_1 + d_2 + d_3 = 0 + 1 + 2 = 3$$$. It can be shown that it is impossible to achieve a smaller value.In the second test case, the only possible rearrangement gives $$$d_1 = 0$$$, so the minimum possible result is $$$0$$$.",
    "prob_desc_description": "The student council is preparing for the relay race at the sports festival.The council consists of $$$n$$$ members. They will run one after the other in the race, the speed of member $$$i$$$ is $$$s_i$$$. The discrepancy $$$d_i$$$ of the $$$i$$$-th stage is the difference between the maximum and the minimum running speed among the first $$$i$$$ members who ran. Formally, if $$$a_i$$$ denotes the speed of the $$$i$$$-th member who participated in the race, then $$$d_i = \\max(a_1, a_2, \\dots, a_i) - \\min(a_1, a_2, \\dots, a_i)$$$.You want to minimize the sum of the discrepancies $$$d_1 + d_2 + \\dots + d_n$$$. To do this, you are allowed to change the order in which the members run. What is the minimum possible sum that can be achieved?",
    "prob_desc_output_spec": "Print a single integer  — the minimum possible value of $$$d_1 + d_2 + \\dots + d_n$$$ after choosing the order of the members.",
    "prob_desc_input_spec": "The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 2000$$$)  — the number of members of the student council. The second line contains $$$n$$$ integers $$$s_1, s_2, \\dots, s_n$$$ ($$$1 \\le s_i \\le 10^9$$$)  – the running speeds of the members.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1800,
    "file_name": "train_091.jsonl",
    "code_uid": "6501c5657f38dad79c3fe0e2774b3c42",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n3 1 2\", \"1\\n5\", \"6\\n1 6 3 3 6 3\", \"6\\n104 943872923 6589 889921234 1000000000 69\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\r\ninput = lambda: sys.stdin.readline().rstrip()\r\n\r\ninf = float('inf')\r\n\r\nn = int(input())\r\nli = sorted(map(int, input().split()))\r\n\r\ndp = [[inf] * n for _ in range(n)]\r\nfor i in range(n):\r\n    dp[i][i] = 0\r\n    \r\nfor term in range(1, n):\r\n    for end in range(term, n):\r\n        start = end - term\r\n        \r\n        diff = li[end] - li[start]\r\n        dp[start][end] = diff + min(dp[start + 1][end], dp[start][end - 1])\r\n        \r\nprint(dp[0][n - 1])",
    "prob_desc_created_at": "1618583700",
    "tags": [
        "dp",
        "greedy"
    ],
    "hidden_unit_tests": ""
}