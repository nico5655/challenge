{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1 1 1 1\\n2 2 2 1\\n2 2 2 2\\n2 4 2 1\\n3 5 1 1\"]",
    "src_uid": "f9f803c6850da1838d62a0cf85bb13f2",
    "prob_desc_notes": "NoteIn the first test case $$$\\gcd(1, 1) = \\operatorname{lcm}(1, 1) = 1$$$, $$$1 + 1 + 1 + 1 = 4$$$.In the second test case $$$\\gcd(2, 2) = \\operatorname{lcm}(2, 1) = 2$$$, $$$2 + 2 + 2 + 1 = 7$$$.In the third test case $$$\\gcd(2, 2) = \\operatorname{lcm}(2, 2) = 2$$$, $$$2 + 2 + 2 + 2 = 8$$$.In the fourth test case $$$\\gcd(2, 4) = \\operatorname{lcm}(2, 1) = 2$$$, $$$2 + 4 + 2 + 1 = 9$$$.In the fifth test case $$$\\gcd(3, 5) = \\operatorname{lcm}(1, 1) = 1$$$, $$$3 + 5 + 1 + 1 = 10$$$. ",
    "prob_desc_description": "You are given a positive integer $$$n$$$. You have to find $$$4$$$ positive integers $$$a, b, c, d$$$ such that  $$$a + b + c + d = n$$$, and $$$\\gcd(a, b) = \\operatorname{lcm}(c, d)$$$.If there are several possible answers you can output any of them. It is possible to show that the answer always exists.In this problem $$$\\gcd(a, b)$$$ denotes the greatest common divisor of $$$a$$$ and $$$b$$$, and $$$\\operatorname{lcm}(c, d)$$$ denotes the least common multiple of $$$c$$$ and $$$d$$$.",
    "prob_desc_output_spec": "For each test case output $$$4$$$ positive integers $$$a$$$, $$$b$$$, $$$c$$$, $$$d$$$ such that $$$a + b + c + d = n$$$ and $$$\\gcd(a, b) = \\operatorname{lcm}(c, d)$$$.",
    "prob_desc_input_spec": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Description of the test cases follows. Each test case contains a single line with integer $$$n$$$ ($$$4 \\le n \\le 10^9$$$) — the sum of $$$a$$$, $$$b$$$, $$$c$$$, and $$$d$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_096.jsonl",
    "code_uid": "4351fb2fc0e87665e46579a35f9d5ec9",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n4\\n7\\n8\\n9\\n10\"]",
    "exec_outcome": "PASSED",
    "source_code": "for __ in range(int(input())):\r\n    b = int(input())\r\n    if b==4:\r\n        print(1,1,1,1)\r\n    elif b==6:\r\n        print(1,3,1,1)    \r\n    elif b%2==1:\r\n        b=int(b//2)\r\n        print(b-1,b,1,1)\r\n    else:\r\n        if b%4==0:\r\n            print(int(b/4),int(b/4),int(b/4),int(b/4))\r\n        else:\r\n            b-=2\r\n            b=int(b/2)\r\n            print(b+1,b-1,1,1)\r\n            ",
    "prob_desc_created_at": "1649428500",
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "hidden_unit_tests": ""
}