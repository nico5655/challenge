{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"YES\\nNO\\nYES\"]",
    "src_uid": "6ca98e655007bfb86f1039c9f096557e",
    "prob_desc_notes": "NoteIn the first test case, we can make the following transformation:  Choose $$$k = 2$$$.  Choose $$$i_1 = 1$$$, $$$i_2 = 2$$$.  Add $$$1$$$ to $$$a_1$$$ and $$$a_2$$$. The resulting array is $$$[0, 2, 0]$$$.  Swap the elements on the second and third positions. In the second test case there is no suitable transformation.In the third test case we choose $$$k = 0$$$ and do not change the order of elements.",
    "prob_desc_description": "You are given two arrays of integers $$$a_1, a_2, \\ldots, a_n$$$ and $$$b_1, b_2, \\ldots, b_n$$$.Let's define a transformation of the array $$$a$$$:  Choose any non-negative integer $$$k$$$ such that $$$0 \\le k \\le n$$$.  Choose $$$k$$$ distinct array indices $$$1 \\le i_1 &lt; i_2 &lt; \\ldots &lt; i_k \\le n$$$.  Add $$$1$$$ to each of $$$a_{i_1}, a_{i_2}, \\ldots, a_{i_k}$$$, all other elements of array $$$a$$$ remain unchanged.  Permute the elements of array $$$a$$$ in any order. Is it possible to perform some transformation of the array $$$a$$$ exactly once, so that the resulting array is equal to $$$b$$$?",
    "prob_desc_output_spec": "For each test case, print \"YES\" (without quotes) if it is possible to perform a transformation of the array $$$a$$$, so that the resulting array is equal to $$$b$$$. Print \"NO\" (without quotes) otherwise. You can print each letter in any case (upper or lower).",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases. Descriptions of test cases follow. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 100$$$) — the size of arrays $$$a$$$ and $$$b$$$. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$-100 \\le a_i \\le 100$$$). The third line of each test case contains $$$n$$$ integers $$$b_1, b_2, \\ldots, b_n$$$ ($$$-100 \\le b_i \\le 100$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_091.jsonl",
    "code_uid": "1461f1548d849b9936199c079f040753",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n3\\n-1 1 0\\n0 0 2\\n1\\n0\\n2\\n5\\n1 2 3 4 5\\n1 2 3 4 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\r\n\r\nt = int(sys.stdin.readline())\r\nfor _ in range(t):\r\n    n = int(sys.stdin.readline())\r\n    a = list(map(int, sys.stdin.readline().split()))\r\n    b = list(map(int, sys.stdin.readline().split()))\r\n    newa = sorted(a)\r\n    newb = sorted(b)\r\n\r\n    ans = \"YES\"\r\n    for i in range(n):\r\n        if (newa[i] != newb[i]) and (newa[i] + 1 != newb[i]):\r\n            ans = \"NO\"\r\n\r\n    print(ans)",
    "prob_desc_created_at": "1636869900",
    "tags": [
        "greedy",
        "math",
        "sortings"
    ],
    "hidden_unit_tests": ""
}