{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"WIN\\nLOSE\\nDRAW\", \"WIN\\nWIN\\nDRAW\\nWIN\"]",
    "src_uid": "4b78c417abfbbceef51110365c4c0f15",
    "prob_desc_notes": "NoteIn testcase $$$1$$$ of the first sample we have:$$$a = [1, 2, 2]$$$. Here Koa chooses $$$1$$$, other player has to choose $$$2$$$, Koa chooses another $$$2$$$. Score for Koa is $$$1 \\oplus 2 = 3$$$ and score for other player is $$$2$$$ so Koa wins.",
    "prob_desc_description": "Koa the Koala and her best friend want to play a game.The game starts with an array $$$a$$$ of length $$$n$$$ consisting of non-negative integers. Koa and her best friend move in turns and each have initially a score equal to $$$0$$$. Koa starts.Let's describe a move in the game:  During his move, a player chooses any element of the array and removes it from this array, xor-ing it with the current score of the player. More formally: if the current score of the player is $$$x$$$ and the chosen element is $$$y$$$, his new score will be $$$x \\oplus y$$$. Here $$$\\oplus$$$ denotes bitwise XOR operation. Note that after a move element $$$y$$$ is removed from $$$a$$$.  The game ends when the array is empty. At the end of the game the winner is the player with the maximum score. If both players have the same score then it's a draw.If both players play optimally find out whether Koa will win, lose or draw the game.",
    "prob_desc_output_spec": "For each test case print:   WIN if Koa will win the game.  LOSE if Koa will lose the game.  DRAW if the game ends in a draw. ",
    "prob_desc_input_spec": "Each test contains multiple test cases. The first line contains $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Description of the test cases follows. The first line of each test case contains the integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$) — the length of $$$a$$$. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\le a_i \\le 10^9$$$) — elements of $$$a$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_005.jsonl",
    "code_uid": "856151cebb1e9bd339af05d199910810",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n3\\n1 2 2\\n3\\n2 2 3\\n5\\n0 0 0 2 2\", \"4\\n5\\n4 1 5 1 3\\n4\\n1 0 1 6\\n1\\n0\\n2\\n5 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\ninput=sys.stdin.buffer.readline\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    arr=[int(x) for x in input().split()]\n    \n    zeroBitCnt=[0 for _ in range(30)] #largest no is 10**9\n    oneBitCnt=[0 for _ in range(30)] #largest no is 10**9\n    for x in arr:\n        for i in range(30):\n            if (x&(1<<i))>0:\n                oneBitCnt[i]+=1\n            else:\n                zeroBitCnt[i]+=1\n    \n    ok=False\n    for i in range(29,-1,-1):\n        if oneBitCnt[i]%2==0:\n            continue\n        else:\n            if oneBitCnt[i]%4==3 and zeroBitCnt[i]%2==0:\n                print('LOSE')\n            else:\n                print('WIN')\n            ok=True\n            break\n    if ok==False:\n        print('DRAW')",
    "prob_desc_created_at": "1595601300",
    "tags": [
        "dp",
        "greedy",
        "constructive algorithms",
        "bitmasks",
        "games",
        "math"
    ],
    "hidden_unit_tests": ""
}