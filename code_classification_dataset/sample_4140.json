{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"5\\n2\\n2\\n0\\n4\\n4\\n1000000000\\n0\"]",
    "src_uid": "0a05b11307fbb2536f868acf4e81c1e2",
    "prob_desc_notes": "NotePossible arrays for the first three test cases (in each array the median is underlined):  In the first test case $$$[\\underline{5}]$$$  In the second test case $$$[\\underline{2}, 3]$$$  In the third test case $$$[1, \\underline{2}, 2]$$$ ",
    "prob_desc_description": "You are given two positive integers $$$n$$$ and $$$s$$$. Find the maximum possible median of an array of $$$n$$$ non-negative integers (not necessarily distinct), such that the sum of its elements is equal to $$$s$$$.A median of an array of integers of length $$$m$$$ is the number standing on the $$$\\lceil {\\frac{m}{2}} \\rceil$$$-th (rounding up) position in the non-decreasing ordering of its elements. Positions are numbered starting from $$$1$$$. For example, a median of the array $$$[20,40,20,50,50,30]$$$ is the $$$\\lceil \\frac{m}{2} \\rceil$$$-th element of $$$[20,20,30,40,50,50]$$$, so it is $$$30$$$. There exist other definitions of the median, but in this problem we use the described definition.",
    "prob_desc_output_spec": "For each test case print a single integer — the maximum possible median.",
    "prob_desc_input_spec": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Description of the test cases follows. Each test case contains a single line with two integers $$$n$$$ and $$$s$$$ ($$$1 \\le n, s \\le 10^9$$$) — the length of the array and the required sum of the elements.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_091.jsonl",
    "code_uid": "cd318d7b099065409e578b7411364314",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"8\\n1 5\\n2 5\\n3 5\\n2 1\\n7 17\\n4 14\\n1 1000000000\\n1000000000 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "t = int(input())\r\nfor _ in range(t):\r\n    n,s = map(int,input().split())\r\n    if n%2 != 0:\r\n        res = s//(n-(n//2))\r\n    else:\r\n        res = s//(n//2+1)\r\n        \r\n    print(res)    \r\n        ",
    "prob_desc_created_at": "1631457300",
    "tags": [
        "binary search",
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}