{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\"]",
    "src_uid": "379133abc6fd643517542aabad79c57f",
    "prob_desc_notes": "NoteIf the third ranked astronaut wins the race, he will have 35 points. He cannot take the leading position, but he can overtake the second position if the second ranked astronaut finishes the race at the last position.",
    "prob_desc_description": "Formula 1 officials decided to introduce new competition. Cars are replaced by space ships and number of points awarded can differ per race.Given the current ranking in the competition and points distribution for the next race, your task is to calculate the best possible ranking for a given astronaut after the next race. It's guaranteed that given astronaut will have unique number of points before the race.",
    "prob_desc_output_spec": "Output contains one integer number â€” the best possible ranking for astronaut after the race. If multiple astronauts have the same score after the race, they all share the best ranking.",
    "prob_desc_input_spec": "The first line contains two integer numbers $$$N$$$ ($$$1 \\leq N \\leq 200000$$$) representing number of F1 astronauts, and current position of astronaut $$$D$$$ ($$$1 \\leq D \\leq N$$$) you want to calculate best ranking for (no other competitor will have the same number of points before the race). The second line contains $$$N$$$ integer numbers $$$S_k$$$ ($$$0 \\leq S_k \\leq 10^8$$$, $$$k=1...N$$$), separated by a single space, representing current ranking of astronauts. Points are sorted in non-increasing order. The third line contains $$$N$$$ integer numbers $$$P_k$$$ ($$$0 \\leq P_k \\leq 10^8$$$, $$$k=1...N$$$), separated by a single space, representing point awards for the next race. Points are sorted in non-increasing order, so winner of the race gets the maximum number of points.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1400,
    "file_name": "train_021.jsonl",
    "code_uid": "1bace44810f6335e5c3cfc208062532c",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4 3\\n50 30 20 10\\n15 10 7 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "n,d = map(int,input().split())\ns = list(map(int,input().split()))\np = list(map(int,input().split()))\nd -= 1\nmaxHis = s[d]+p[0]\n# i is the index for current scores\ni = n-1\n# j is the index for the points earned\nj = 1\ncount = 0\nwhile (j<n):\n    if (i==d):\n        i -= 1\n    else:\n        while (j<n and s[i]+p[j]>maxHis):\n            j += 1\n        if (j==n):\n            break\n        else:\n            j += 1\n            count += 1\n            i -= 1\nprint(n-count)\n",
    "prob_desc_created_at": "1537612500",
    "tags": [
        "greedy"
    ],
    "hidden_unit_tests": ""
}