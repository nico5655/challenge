{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"9\", \"56\", \"30052700\"]",
    "src_uid": "9d4caff95ab182055f83c79dd88e599a",
    "prob_desc_notes": "NoteIn the first sample, there are $$$16$$$ subarrays of length $$$3$$$. In order of appearance, they are:$$$[1, 2, 3]$$$, $$$[2, 3, 1]$$$, $$$[3, 1, 3]$$$, $$$[1, 3, 2]$$$, $$$[3, 2, 2]$$$, $$$[2, 2, 1]$$$, $$$[2, 1, 3]$$$, $$$[1, 3, 2]$$$, $$$[3, 2, 3]$$$, $$$[2, 3, 1]$$$, $$$[3, 1, 3]$$$, $$$[1, 3, 1]$$$, $$$[3, 1, 2]$$$, $$$[1, 2, 3]$$$, $$$[2, 3, 2]$$$, $$$[3, 2, 1]$$$. Their sums are $$$6$$$, $$$6$$$, $$$7$$$, $$$6$$$, $$$7$$$, $$$5$$$, $$$6$$$, $$$6$$$, $$$8$$$, $$$6$$$, $$$7$$$, $$$5$$$, $$$6$$$, $$$6$$$, $$$7$$$, $$$6$$$. As $$$\\frac{n(n+1)}{2} = 6$$$, the answer is $$$9$$$.",
    "prob_desc_description": "Let $$$n$$$ be an integer. Consider all permutations on integers $$$1$$$ to $$$n$$$ in lexicographic order, and concatenate them into one big sequence $$$p$$$. For example, if $$$n = 3$$$, then $$$p = [1, 2, 3, 1, 3, 2, 2, 1, 3, 2, 3, 1, 3, 1, 2, 3, 2, 1]$$$. The length of this sequence will be $$$n \\cdot n!$$$.Let $$$1 \\leq i \\leq j \\leq n \\cdot n!$$$ be a pair of indices. We call the sequence $$$(p_i, p_{i+1}, \\dots, p_{j-1}, p_j)$$$ a subarray of $$$p$$$. Its length is defined as the number of its elements, i.e., $$$j - i + 1$$$. Its sum is the sum of all its elements, i.e., $$$\\sum_{k=i}^j p_k$$$. You are given $$$n$$$. Find the number of subarrays of $$$p$$$ of length $$$n$$$ having sum $$$\\frac{n(n+1)}{2}$$$. Since this number may be large, output it modulo $$$998244353$$$ (a prime number). ",
    "prob_desc_output_spec": "Output a single integer — the number of subarrays of length $$$n$$$ having sum $$$\\frac{n(n+1)}{2}$$$, modulo $$$998244353$$$.",
    "prob_desc_input_spec": "The only line contains one integer $$$n$$$ ($$$1 \\leq n \\leq 10^6$$$), as described in the problem statement.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_021.jsonl",
    "code_uid": "57d865d2b645d77c39457b58b89d5b4c",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\", \"4\", \"10\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(raw_input())\n\nMOD = 998244353\n\nanswer = 1\nfactorial = 1\nfor i in range(1, n + 1):\n    factorial = (factorial * i) % MOD\n    answer = (i * answer + factorial - i) % MOD\n\nprint(answer)\n\n",
    "prob_desc_created_at": "1546180500",
    "tags": [
        "dp",
        "combinatorics",
        "math"
    ],
    "hidden_unit_tests": ""
}