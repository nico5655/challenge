{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\\n3\\n2\\n3\\n1\\n0\"]",
    "src_uid": "b5ef56f2eb482682414c32fba83a3949",
    "prob_desc_notes": "NoteIn the first test case, both subarrays satisfy the condition:   $$$i=1$$$: the subarray $$$[a_1,a_2,a_3] = [20,22,19]$$$, and $$$1 \\cdot 20 &lt; 2 \\cdot 22 &lt; 4 \\cdot 19$$$.  $$$i=2$$$: the subarray $$$[a_2,a_3,a_4] = [22,19,84]$$$, and $$$1 \\cdot 22 &lt; 2 \\cdot 19 &lt; 4 \\cdot 84$$$.  In the second test case, three subarrays satisfy the condition:   $$$i=1$$$: the subarray $$$[a_1,a_2] = [9,5]$$$, and $$$1 \\cdot 9 &lt; 2 \\cdot 5$$$.  $$$i=2$$$: the subarray $$$[a_2,a_3] = [5,3]$$$, and $$$1 \\cdot 5 &lt; 2 \\cdot 3$$$.  $$$i=3$$$: the subarray $$$[a_3,a_4] = [3,2]$$$, and $$$1 \\cdot 3 &lt; 2 \\cdot 2$$$.  $$$i=4$$$: the subarray $$$[a_4,a_5] = [2,1]$$$, but $$$1 \\cdot 2 = 2 \\cdot 1$$$, so this subarray doesn't satisfy the condition. ",
    "prob_desc_description": "Given an array $$$a$$$ of length $$$n$$$ and an integer $$$k$$$, find the number of indices $$$1 \\leq i \\leq n - k$$$ such that the subarray $$$[a_i, \\dots, a_{i+k}]$$$ with length $$$k+1$$$ (not with length $$$k$$$) has the following property:   If you multiply the first element by $$$2^0$$$, the second element by $$$2^1$$$, ..., and the ($$$k+1$$$)-st element by $$$2^k$$$, then this subarray is sorted in strictly increasing order.  More formally, count the number of indices $$$1 \\leq i \\leq n - k$$$ such that $$$$$$2^0 \\cdot a_i &lt; 2^1 \\cdot a_{i+1} &lt; 2^2 \\cdot a_{i+2} &lt; \\dots &lt; 2^k \\cdot a_{i+k}.$$$$$$ ",
    "prob_desc_output_spec": "For each test case, output a single integer — the number of indices satisfying the condition in the statement.",
    "prob_desc_input_spec": "The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases. The first line of each test case contains two integers $$$n$$$, $$$k$$$ ($$$3 \\leq n \\leq 2 \\cdot 10^5$$$, $$$1 \\leq k &lt; n$$$) — the length of the array and the number of inequalities. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) — the elements of the array. The sum of $$$n$$$ across all test cases does not exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1400,
    "file_name": "train_096.jsonl",
    "code_uid": "70cf10d7cca9c6da4ee995daf5dc3a85",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n\\n4 2\\n\\n20 22 19 84\\n\\n5 1\\n\\n9 5 3 2 1\\n\\n5 2\\n\\n9 5 3 2 1\\n\\n7 2\\n\\n22 12 16 4 3 22 12\\n\\n7 3\\n\\n22 12 16 4 3 22 12\\n\\n9 3\\n\\n3 9 12 3 9 12 3 9 12\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\r\nfrom collections import OrderedDict,Counter\r\nimport heapq\r\nfrom collections import deque\r\nimport sys\r\ndef mpp():return map(int,inp().split())\r\ndef lis():return list(mpp())\r\ndef inp(): return input()\r\ndef yn(n):\r\n    if n:\r\n        return \"YES\"\r\n    return \"NO\"\r\n                \r\ndef fn(arr,n,k):\r\n    c=0\r\n    cnt=0\r\n    for i in range(1,n):\r\n        if arr[i]>arr[i-1]/2:\r\n            c+=1\r\n        else:\r\n            c=0\r\n        if c>=k:\r\n            cnt+=1\r\n    return cnt\r\n        \r\ndef main():\r\n    t=int(inp())\r\n    for _ in range(t):\r\n        n,k=mpp()\r\n        arr=lis()\r\n        print(fn(arr,n,k))\r\n        \r\n        \r\n    \r\nif __name__==\"__main__\":\r\n    main()",
    "prob_desc_created_at": "1655217300",
    "tags": [
        "data structures",
        "dp",
        "sortings",
        "two pointers"
    ],
    "hidden_unit_tests": ""
}