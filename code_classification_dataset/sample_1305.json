{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"4\\n2 3 2\", \"1\\n0 1 0\", \"0\\n2 4 3 5\"]",
    "src_uid": "1956e31a9694b4fd7690f1a75028b9a1",
    "prob_desc_notes": null,
    "prob_desc_description": "Recently a dog was bought for Polycarp. The dog's name is Cormen. Now Polycarp has a lot of troubles. For example, Cormen likes going for a walk. Empirically Polycarp learned that the dog needs at least k walks for any two consecutive days in order to feel good. For example, if k = 5 and yesterday Polycarp went for a walk with Cormen 2 times, today he has to go for a walk at least 3 times. Polycarp analysed all his affairs over the next n days and made a sequence of n integers a1, a2, ..., an, where ai is the number of times Polycarp will walk with the dog on the i-th day while doing all his affairs (for example, he has to go to a shop, throw out the trash, etc.).Help Polycarp determine the minimum number of walks he needs to do additionaly in the next n days so that Cormen will feel good during all the n days. You can assume that on the day before the first day and on the day after the n-th day Polycarp will go for a walk with Cormen exactly k times. Write a program that will find the minumum number of additional walks and the appropriate schedule — the sequence of integers b1, b2, ..., bn (bi ≥ ai), where bi means the total number of walks with the dog on the i-th day.",
    "prob_desc_output_spec": "In the first line print the smallest number of additional walks that Polycarp should do during the next n days so that Cormen will feel good during all days.  In the second line print n integers b1, b2, ..., bn, where bi — the total number of walks on the i-th day according to the found solutions (ai ≤ bi for all i from 1 to n). If there are multiple solutions, print any of them. ",
    "prob_desc_input_spec": "The first line contains two integers n and k (1 ≤ n, k ≤ 500) — the number of days and the minimum number of walks with Cormen for any two consecutive days.  The second line contains integers a1, a2, ..., an (0 ≤ ai ≤ 500) — the number of walks with Cormen on the i-th day which Polycarp has already planned. ",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_008.jsonl",
    "code_uid": "7118f94324bb77e89d39d58c7fbc3f9d",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3 5\\n2 0 1\", \"3 1\\n0 0 0\", \"4 6\\n2 4 3 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "n,k=map(int,input().split())\na=[int(k) for k in input().split()]\nwalk=0\nfor i in range (1,n):\n    if(a[i]+a[i-1]<k):\n        walk+=(k-(a[i]+a[i-1]))\n        a[i]=k-(a[i-1])\n\nprint(walk)\nfor i in a:\n    print(i,end=\" \")",
    "prob_desc_created_at": "1476714900",
    "tags": [
        "dp",
        "greedy"
    ],
    "hidden_unit_tests": ""
}