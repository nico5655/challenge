{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"java\", \"python\", \"phphp\"]",
    "src_uid": "39f5e934bf293053246bd3faa8061c3b",
    "prob_desc_notes": "NoteIn the first test there is one of the appropriate new passwords — java, because its length is equal to 4 and 3 distinct lowercase letters a, j and v are used in it.In the second test there is one of the appropriate new passwords — python, because its length is equal to 6 and it consists of 6 distinct lowercase letters.In the third test there is one of the appropriate new passwords — phphp, because its length is equal to 5 and 2 distinct lowercase letters p and h are used in it.Pay attention the condition that no two identical symbols are consecutive is correct for all appropriate passwords in tests. ",
    "prob_desc_description": "Innokentiy decides to change the password in the social net \"Contact!\", but he is too lazy to invent a new password by himself. That is why he needs your help. Innokentiy decides that new password should satisfy the following conditions:  the length of the password must be equal to n,  the password should consist only of lowercase Latin letters,  the number of distinct symbols in the password must be equal to k,  any two consecutive symbols in the password must be distinct. Your task is to help Innokentiy and to invent a new password which will satisfy all given conditions. ",
    "prob_desc_output_spec": "Print any password which satisfies all conditions given by Innokentiy.",
    "prob_desc_input_spec": "The first line contains two positive integers n and k (2 ≤ n ≤ 100, 2 ≤ k ≤ min(n, 26)) — the length of the password and the number of distinct symbols in it.  Pay attention that a desired new password always exists.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_023.jsonl",
    "code_uid": "a4ceb9b8bfac8141975beda871a4005d",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4 3\", \"6 6\", \"5 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "n,k=map(int,input().split())\na=[]\nb='a'\nfor i in range(k):\n    a.append(chr(ord(b)+i))\nj=0\nfor i in range(n):\n    print(a[j],end='')\n    j=j+1\n    if j==len(a):\n        j=0\n    \n    ",
    "prob_desc_created_at": "1489233600",
    "tags": [
        "implementation",
        "*special"
    ],
    "hidden_unit_tests": ""
}