{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"0.333333333333 0.333333333333 0.333333333333\", \"0.150000000000 0.300000000000 0.550000000000\", \"0.057142857143 0.657142857143 0.285714285714\"]",
    "src_uid": "35736970c6d629c2764eaf23299e0356",
    "prob_desc_notes": null,
    "prob_desc_description": "The Bad Luck Island is inhabited by three kinds of species: r rocks, s scissors and p papers. At some moments of time two random individuals meet (all pairs of individuals can meet equiprobably), and if they belong to different species, then one individual kills the other one: a rock kills scissors, scissors kill paper, and paper kills a rock. Your task is to determine for each species what is the probability that this species will be the only one to inhabit this island after a long enough period of time.",
    "prob_desc_output_spec": "Print three space-separated real numbers: the probabilities, at which the rocks, the scissors and the paper will be the only surviving species, respectively. The answer will be considered correct if the relative or absolute error of each number doesn't exceed 10 - 9.",
    "prob_desc_input_spec": "The single line contains three integers r, s and p (1 ≤ r, s, p ≤ 100) — the original number of individuals in the species of rock, scissors and paper, respectively.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_018.jsonl",
    "code_uid": "5af8bd66bea8e9b899a53b5739be05b1",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 2 2\", \"2 1 2\", \"1 1 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "from collections import defaultdict\ndef main():\n    r, s, p = map(int, raw_input().split())\n    ans = [0.0] * 3\n    d = defaultdict(float)\n    nd = defaultdict(float)\n    d[r,s,p] = 1.0\n    for i in xrange(r + s + p):\n        for t, v in d.viewitems():\n            r, s, p = t\n            if not r and not s:\n                ans[2] += v\n            elif not s and not p:\n                ans[0] += v\n            elif not p and not r:\n                ans[1] += v\n            else:\n                k = 1.0 / (r * s + s * p + p * r)\n                if p and r:\n                    nd[r-1,s,p] += v * r * p * k\n                if r and s:\n                    nd[r,s-1,p] += v * r * s * k\n                if s and p:\n                    nd[r,s,p-1] += v * s * p * k\n        d, nd = nd, d\n        nd.clear()\n    print \"%.12f %.12f %.12f\" % (ans[0], ans[1], ans[2])\nmain()\n",
    "prob_desc_created_at": "1430411400",
    "tags": [
        "dp",
        "probabilities"
    ],
    "hidden_unit_tests": ""
}