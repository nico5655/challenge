{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"abacabaabbabcder\", \"xxaaaxxaaxxaxxx\", \"cbacbc\"]",
    "src_uid": "930365b084022708eb871f3ca2f269e4",
    "prob_desc_notes": null,
    "prob_desc_description": "You're given a list of n strings a1, a2, ..., an. You'd like to concatenate them together in some order such that the resulting string would be lexicographically smallest.Given the list of strings, output the lexicographically smallest concatenation.",
    "prob_desc_output_spec": "Print the only string a — the lexicographically smallest string concatenation.",
    "prob_desc_input_spec": "The first line contains integer n — the number of strings (1 ≤ n ≤ 5·104). Each of the next n lines contains one string ai (1 ≤ |ai| ≤ 50) consisting of only lowercase English letters. The sum of string lengths will not exceed 5·104.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_033.jsonl",
    "code_uid": "0e8eb1094495305ec1a5ed3da3b6bb17",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\nabba\\nabacaba\\nbcd\\ner\", \"5\\nx\\nxx\\nxxa\\nxxaa\\nxxaaa\", \"3\\nc\\ncb\\ncba\"]",
    "exec_outcome": "PASSED",
    "source_code": "from functools import cmp_to_key\nprint(''.join(sorted([input() for _ in range(int(input()))],key=cmp_to_key(lambda x,y:1 if x+y>y+x else-1))))",
    "prob_desc_created_at": "1456844400",
    "tags": [
        "sortings",
        "strings"
    ],
    "hidden_unit_tests": ""
}