{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"11\", \"79\"]",
    "src_uid": "5c12573b3964ee30af0349c11c0ced3b",
    "prob_desc_notes": "NoteIn the first sample, it takes at least 11 seconds to bring all passengers to floor 0. Here is how this could be done:1. Move to floor 5: takes 2 seconds.2. Pick up passenger 3.3. Move to floor 3: takes 2 seconds.4. Wait for passenger 2 to arrive: takes 4 seconds.5. Pick up passenger 2.6. Go to floor 2: takes 1 second.7. Pick up passenger 1.8. Go to floor 0: takes 2 seconds.This gives a total of 2 + 2 + 4 + 1 + 2 = 11 seconds.",
    "prob_desc_description": "Saitama accidentally destroyed a hotel again. To repay the hotel company, Genos has volunteered to operate an elevator in one of its other hotels. The elevator is special — it starts on the top floor, can only move down, and has infinite capacity. Floors are numbered from 0 to s and elevator initially starts on floor s at time 0.The elevator takes exactly 1 second to move down exactly 1 floor and negligible time to pick up passengers. Genos is given a list detailing when and on which floor passengers arrive. Please determine how long in seconds it will take Genos to bring all passengers to floor 0.",
    "prob_desc_output_spec": "Print a single integer — the minimum amount of time in seconds needed to bring all the passengers to floor 0.",
    "prob_desc_input_spec": "The first line of input contains two integers n and s (1 ≤ n ≤ 100, 1 ≤ s ≤ 1000) — the number of passengers and the number of the top floor respectively. The next n lines each contain two space-separated integers fi and ti (1 ≤ fi ≤ s, 1 ≤ ti ≤ 1000) — the floor and the time of arrival in seconds for the passenger number i.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_014.jsonl",
    "code_uid": "99848bec05616f20b7793b3efe22c9ba",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3 7\\n2 1\\n3 8\\n5 2\", \"5 10\\n2 77\\n3 33\\n8 21\\n9 12\\n10 64\"]",
    "exec_outcome": "PASSED",
    "source_code": "R = lambda : map(int, input().split())\n\nn,s=R()\nm = max([sum(R()) for _ in range(n)])\nprint(max(m,s))\n\n",
    "prob_desc_created_at": "1450888500",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}