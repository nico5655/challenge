{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"11.00000000000000000000\", \"5.00000000000000000000\"]",
    "src_uid": "d6e44bd8ac03876cb03be0731f7dda3d",
    "prob_desc_notes": "NoteIn the first example, the maximum average is obtained by deleting the first element and increasing the second element four times.In the second sample, one of the ways to achieve maximum average is to delete the first and the third element and increase the second and the fourth elements by $$$2$$$ each.",
    "prob_desc_description": "Every superhero has been given a power value by the Felicity Committee. The avengers crew wants to maximize the average power of the superheroes in their team by performing certain operations.Initially, there are $$$n$$$ superheroes in avengers team having powers $$$a_1, a_2, \\ldots, a_n$$$, respectively. In one operation, they can remove one superhero from their team (if there are at least two) or they can increase the power of a superhero by $$$1$$$. They can do at most $$$m$$$ operations. Also, on a particular superhero at most $$$k$$$ operations can be done.Can you help the avengers team to maximize the average power of their crew?",
    "prob_desc_output_spec": "Output a single number — the maximum final average power. Your answer is considered correct if its absolute or relative error does not exceed $$$10^{-6}$$$. Formally, let your answer be $$$a$$$, and the jury's answer be $$$b$$$. Your answer is accepted if and only if $$$\\frac{|a - b|}{\\max{(1, |b|)}} \\le 10^{-6}$$$.",
    "prob_desc_input_spec": "The first line contains three integers $$$n$$$, $$$k$$$ and $$$m$$$ ($$$1 \\le n \\le 10^{5}$$$, $$$1 \\le k \\le 10^{5}$$$, $$$1 \\le m \\le 10^{7}$$$) — the number of superheroes, the maximum number of times you can increase power of a particular superhero, and the total maximum number of operations. The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^{6}$$$) — the initial powers of the superheroes in the cast of avengers.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_009.jsonl",
    "code_uid": "327bb837a7e263317bafe00dda4c2e95",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 4 6\\n4 7\", \"4 2 6\\n1 3 2 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "n,k,m = input().split()\nk = int(k)\nm = int(m)\nn = int(n)\nniz = [int(n) for n in input().split()]\nniz.sort()\nsuma = sum(niz)\ncurMax = (suma+min(m,n*k)) / n\nfor i in range(1,min(n-1,m)+1):\n    suma -= niz[i-1]\n    tempMax = (suma + min(m-i, (n-i)*k)) /(n-i)\n    if tempMax > curMax:\n        curMax = tempMax\nprint(curMax)\n",
    "prob_desc_created_at": "1549208100",
    "tags": [
        "implementation",
        "brute force",
        "math"
    ],
    "hidden_unit_tests": ""
}