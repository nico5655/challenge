{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1\\n0\\n2\\n4\\n4\"]",
    "src_uid": "d786585fee251ebfd5c3e8d8b0425791",
    "prob_desc_notes": "NoteIn the first test case, $$$s=1+2+3+4+5=15$$$, only $$$(2,3,4,5)$$$ is a nearly full subsequence among all subsequences, the sum in it is equal to $$$2+3+4+5=14=15-1$$$.In the second test case, there are no nearly full subsequences.In the third test case, $$$s=1+0=1$$$, the nearly full subsequences are $$$(0)$$$ and $$$()$$$ (the sum of an empty subsequence is $$$0$$$).",
    "prob_desc_description": "Luntik came out for a morning stroll and found an array $$$a$$$ of length $$$n$$$. He calculated the sum $$$s$$$ of the elements of the array ($$$s= \\sum_{i=1}^{n} a_i$$$). Luntik calls a subsequence of the array $$$a$$$ nearly full if the sum of the numbers in that subsequence is equal to $$$s-1$$$.Luntik really wants to know the number of nearly full subsequences of the array $$$a$$$. But he needs to come home so he asks you to solve that problem!A sequence $$$x$$$ is a subsequence of a sequence $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by deletion of several (possibly, zero or all) elements.",
    "prob_desc_output_spec": "For each test case print the number of nearly full subsequences of the array.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. The next $$$2 \\cdot t$$$ lines contain descriptions of test cases. The description of each test case consists of two lines. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 60$$$) — the length of the array. The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\le a_i \\le 10^9$$$) — the elements of the array $$$a$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_106.jsonl",
    "code_uid": "3cb3e8acfa1c66ce1dffe8a9d346e3ed",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n5\\n1 2 3 4 5\\n2\\n1000 1000\\n2\\n1 0\\n5\\n3 0 2 1 1\\n5\\n2 1 0 3 0\"]",
    "exec_outcome": "PASSED",
    "source_code": "t=int(input())\r\nfor k in range(t):\r\n\tn=int(input())\r\n\ts=list(map(int,input().split(' ')))\r\n\tp1=s.count(1)\r\n\tp2=s.count(0)\r\n\tprint(2**p2*p1)",
    "prob_desc_created_at": "1635069900",
    "tags": [
        "combinatorics",
        "math"
    ],
    "hidden_unit_tests": ""
}