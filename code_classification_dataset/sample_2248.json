{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"aaaaa\", \":(\", \"ababacac\", \":(\"]",
    "src_uid": "b5bcb6d78daacd56362fd76e35b903ac",
    "prob_desc_notes": "NoteIn the first example, we have $$$s = $$$ \"aaaaa\", and $$$s' = $$$ \"\".In the second example, no such $$$s$$$ can work that will generate the given $$$t$$$.In the third example, we have $$$s = $$$ \"ababacac\", and $$$s' = $$$ \"bbcc\", and $$$t = s + s' = $$$ \"ababacacbbcc\".",
    "prob_desc_description": "Bob has a string $$$s$$$ consisting of lowercase English letters. He defines $$$s'$$$ to be the string after removing all \"a\" characters from $$$s$$$ (keeping all other characters in the same order). He then generates a new string $$$t$$$ by concatenating $$$s$$$ and $$$s'$$$. In other words, $$$t=s+s'$$$ (look at notes for an example).You are given a string $$$t$$$. Your task is to find some $$$s$$$ that Bob could have used to generate $$$t$$$. It can be shown that if an answer exists, it will be unique.",
    "prob_desc_output_spec": "Print a string $$$s$$$ that could have generated $$$t$$$. It can be shown if an answer exists, it is unique. If no string exists, print \":(\" (without double quotes, there is no space between the characters).",
    "prob_desc_input_spec": "The first line of input contains a string $$$t$$$ ($$$1 \\leq |t| \\leq 10^5$$$) consisting of lowercase English letters.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1100,
    "file_name": "train_019.jsonl",
    "code_uid": "60c369d078d2239e0bb1331ab3a79f74",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"aaaaa\", \"aacaababc\", \"ababacacbbcc\", \"baba\"]",
    "exec_outcome": "PASSED",
    "source_code": "s = input()\nimport re\nr = re.sub('a','',s)\nif r == 2*r[:len(r)//2] and (s[-len(r)//2:].count('a')  == 0 or r == ''):\n        print(s[:len(s)-len(r)//2])\nelse: print(':(')",
    "prob_desc_created_at": "1555783500",
    "tags": [
        "implementation",
        "strings"
    ],
    "hidden_unit_tests": ""
}