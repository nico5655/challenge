{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"10\\n0\\n4\"]",
    "src_uid": "128d9ad5e5dfe4943e16fcc6a103e51b",
    "prob_desc_notes": "NoteIn the first test case, we initially have a piece of size $$$1$$$, so all final pieces must have size $$$1$$$. The total number of steps is: $$$0 + 1 + 2 + 3 + 4 = 10$$$.In the second test case, we have just one piece, so we don't need to do anything, and the answer is $$$0$$$ steps.In the third test case, one of the possible cut options is: $$$600,\\ 900,\\ (600 | 700),\\ (1000 | 1000),\\ (1000 | 1000 | 550)$$$. You can see this option in the picture below. The maximum piece has size $$$1000$$$, and it is less than $$$2$$$ times bigger than the minimum piece of size $$$550$$$. $$$4$$$ steps are done. We can show that it is the minimum possible number of steps.  ",
    "prob_desc_description": "There are $$$n$$$ pieces of tangerine peel, the $$$i$$$-th of them has size $$$a_i$$$. In one step it is possible to divide one piece of size $$$x$$$ into two pieces of positive integer sizes $$$y$$$ and $$$z$$$ so that $$$y + z = x$$$.You want that for each pair of pieces, their sizes differ strictly less than twice. In other words, there should not be two pieces of size $$$x$$$ and $$$y$$$, such that $$$2x \\le y$$$. What is the minimum possible number of steps needed to satisfy the condition?",
    "prob_desc_output_spec": "For each test case, output a single line containing the minimum number of steps.",
    "prob_desc_input_spec": "The first line of the input contains a single integer $$$t$$$ ($$$1 \\le t \\le 100$$$) â€” the number of test cases. The description of test cases follows. The first line of each test case contains the integer $$$n$$$ ($$$1 \\le n \\le 100$$$). Then one line follows, containing $$$n$$$ integers $$$a_1 \\le a_2 \\le \\ldots \\le a_n$$$ ($$$1 \\le a_i \\le 10^7$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_098.jsonl",
    "code_uid": "c178e0e806b0ecf466dece9e12880c67",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n\\n5\\n\\n1 2 3 4 5\\n\\n1\\n\\n1033\\n\\n5\\n\\n600 900 1300 2000 2550\"]",
    "exec_outcome": "PASSED",
    "source_code": "def f(x,m):\r\n    if x%(2*m-1)!=0:\r\n        return x//(2*m-1)\r\n    else:\r\n        return x//(2*m-1)-1\r\nN=int(input())\r\nfor i in range(N):\r\n    n=int(input())\r\n    L=list(map(int,input().split()))\r\n    M=max(L)\r\n    m=min(L)\r\n    L1=[x for x in L if x>=2*m]\r\n    Lm=[m for i in range(len(L1))]\r\n    L2=list(map(f,L1,Lm))\r\n    print(sum(L2))\r\n",
    "prob_desc_created_at": "1664721300",
    "tags": [
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}