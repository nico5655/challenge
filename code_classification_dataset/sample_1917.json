{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"3\", \"2\"]",
    "src_uid": "f256235c0b2815aae85a6f9435c69dac",
    "prob_desc_notes": "NoteThe images below illustrate statement tests.The first test:In this test we can select folders 3 and 4 with out first selection, folders 5, 6, 7, 8 with our second selection and folder 9 with our third, last selection.The second test:In this test we can first select all folders in the first row (2, 3, 4, 5), then — all other ones.",
    "prob_desc_description": "Throughout Igor K.'s life he has had many situations worthy of attention. We remember the story with the virus, the story of his mathematical career and of course, his famous programming achievements. However, one does not always adopt new hobbies, one can quit something as well.This time Igor K. got disappointed in one of his hobbies: editing and voicing videos. Moreover, he got disappointed in it so much, that he decided to destroy his secret archive for good. Igor K. use Pindows XR operation system which represents files and folders by small icons. At that, m icons can fit in a horizontal row in any window.Igor K.'s computer contains n folders in the D: disk's root catalog. The folders are numbered from 1 to n in the order from the left to the right and from top to bottom (see the images). At that the folders with secret videos have numbers from a to b inclusive. Igor K. wants to delete them forever, at that making as few frame selections as possible, and then pressing Shift+Delete exactly once. What is the minimum number of times Igor K. will have to select the folder in order to select folders from a to b and only them? Let us note that if some selected folder is selected repeatedly, then it is deselected. Each selection possesses the shape of some rectangle with sides parallel to the screen's borders.",
    "prob_desc_output_spec": "Print a single number: the least possible number of times Igor K. will have to select the folders using frames to select only the folders with numbers from a to b.",
    "prob_desc_input_spec": "The only line contains four integers n, m, a, b (1 ≤ n, m ≤ 109, 1 ≤ a ≤ b ≤ n). They are the number of folders in Igor K.'s computer, the width of a window and the numbers of the first and the last folders that need to be deleted.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_014.jsonl",
    "code_uid": "e85bd44de9acf5f8aa32d8823c8d40e0",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"11 4 3 9\", \"20 5 2 20\"]",
    "exec_outcome": "PASSED",
    "source_code": "#!/usr/bin/env python2\n# -*- coding: utf-8 -*-\nimport sys\ninput = sys.stdin\noutput = sys.stdout\n\ndef solve(n,m,a,b):\n\n    a -= 1\n    b -= 1\n\n    if a==b:\n        return 1\n\n    ar,ac = divmod(a,m)\n    br,bc = divmod(b,m)\n    \n#    an = m - ac\n#    bn = bc + 1\n#    print 'a:', (ar,ac),an\n#    print 'b:', (br,bc),bn\n    \n    # one row\n    if br-ar == 0:\n        return 1\n\n    # rectangular, all cases   \n    if ac==0 and (bc==m-1 or b+1==n):\n        return 1\n\n    # two rows\n    if br-ar == 1:\n        return 2\n    \n    #\n    if (ac > 0 and (bc < m-1 and b+1 < n)) and bc+1 != ac:\n        return 3\n    \n    return 2\n\nS = input.readline().split(' ')\nassert len(S)==4\nn = int(S[0])\nm = int(S[1])\na = int(S[2])\nb = int(S[3])\nassert 1<=n and n<=10**9\nassert 1<=m and m<=10**9\nassert 1<=a and a<=b and b<=n\n\nanswer = solve(n,m,a,b)\noutput.write('%s\\n' % (answer))\n",
    "prob_desc_created_at": "1309446000",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}