{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"0 0 0 0 \\n0 1 3 7 \\n0 1 0 3 2 \\n0 2 0 14 \\n0\"]",
    "src_uid": "8d25700c9996a80fea3557222273c89a",
    "prob_desc_notes": null,
    "prob_desc_description": "A sequence of non-negative integers $$$a_1, a_2, \\dots, a_n$$$ is called growing if for all $$$i$$$ from $$$1$$$ to $$$n - 1$$$ all ones (of binary representation) in $$$a_i$$$ are in the places of ones (of binary representation) in $$$a_{i + 1}$$$ (in other words, $$$a_i \\:\\&amp;\\: a_{i + 1} = a_i$$$, where $$$\\&amp;$$$ denotes bitwise AND). If $$$n = 1$$$ then the sequence is considered growing as well.For example, the following four sequences are growing:   $$$[2, 3, 15, 175]$$$ — in binary it's $$$[10_2, 11_2, 1111_2, 10101111_2]$$$;  $$$[5]$$$ — in binary it's $$$[101_2]$$$;  $$$[1, 3, 7, 15]$$$ — in binary it's $$$[1_2, 11_2, 111_2, 1111_2]$$$;  $$$[0, 0, 0]$$$ — in binary it's $$$[0_2, 0_2, 0_2]$$$. The following three sequences are non-growing:   $$$[3, 4, 5]$$$ — in binary it's $$$[11_2, 100_2, 101_2]$$$;  $$$[5, 4, 3]$$$ — in binary it's $$$[101_2, 100_2, 011_2]$$$;  $$$[1, 2, 4, 8]$$$ — in binary it's $$$[0001_2, 0010_2, 0100_2, 1000_2]$$$. Consider two sequences of non-negative integers $$$x_1, x_2, \\dots, x_n$$$ and $$$y_1, y_2, \\dots, y_n$$$. Let's call this pair of sequences co-growing if the sequence $$$x_1 \\oplus y_1, x_2 \\oplus y_2, \\dots, x_n \\oplus y_n$$$ is growing where $$$\\oplus$$$ denotes bitwise XOR.You are given a sequence of integers $$$x_1, x_2, \\dots, x_n$$$. Find the lexicographically minimal sequence $$$y_1, y_2, \\dots, y_n$$$ such that sequences $$$x_i$$$ and $$$y_i$$$ are co-growing.The sequence $$$a_1, a_2, \\dots, a_n$$$ is lexicographically smaller than the sequence $$$b_1, b_2, \\dots, b_n$$$ if there exists $$$1 \\le k \\le n$$$ such that $$$a_i = b_i$$$ for any $$$1 \\le i &lt; k$$$ but $$$a_k &lt; b_k$$$.",
    "prob_desc_output_spec": "For each test case, print $$$n$$$ integers $$$y_1, y_2, \\dots, y_n$$$ ($$$0 \\le y_i &lt; 2^{30}$$$) — lexicographically minimal sequence such that such that it's co-growing with given sequence $$$x_i$$$.",
    "prob_desc_input_spec": "The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$). Then $$$t$$$ test cases follow. The first line of each test case contains an integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) — length of the sequence $$$x_i$$$. The second line contains $$$n$$$ integers $$$x_1, x_2, \\dots, x_n$$$ ($$$0 \\le x_i &lt; 2^{30}$$$) — elements of the sequence $$$x_i$$$. It is guaranteed that the sum of $$$n$$$ overall all test cases doesn't exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_103.jsonl",
    "code_uid": "9fd35f00f39dca7a9d59830fb4084390",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n4\\n1 3 7 15\\n4\\n1 2 4 8\\n5\\n1 2 3 4 5\\n4\\n11 13 15 1\\n1\\n0\"]",
    "exec_outcome": "PASSED",
    "source_code": "for _ in range(int(input())):\r\n    n = int(input())\r\n    x = list(map(int, input().split()))\r\n    y = [0]*n\r\n    \r\n    for i in range(1, n):\r\n        y[i] = (x[i-1] ^ y[i-1]) & ~x[i]\r\n    print(*y)",
    "prob_desc_created_at": "1625927700",
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy"
    ],
    "hidden_unit_tests": ""
}