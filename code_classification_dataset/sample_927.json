{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1\", \"3\"]",
    "src_uid": "075988685fa3f9b20bd215037c504a4f",
    "prob_desc_notes": "NoteIn the first example the number will be $$$11010100100$$$ after performing one operation. It has remainder $$$100$$$ modulo $$$100000$$$.In the second example the number will be $$$11010100010$$$ after performing three operations. It has remainder $$$10$$$ modulo $$$100000$$$.",
    "prob_desc_description": "You are given a huge decimal number consisting of $$$n$$$ digits. It is guaranteed that this number has no leading zeros. Each digit of this number is either 0 or 1.You may perform several (possibly zero) operations with this number. During each operation you are allowed to change any digit of your number; you may change 0 to 1 or 1 to 0. It is possible that after some operation you can obtain a number with leading zeroes, but it does not matter for this problem.You are also given two integers $$$0 \\le y &lt; x &lt; n$$$. Your task is to calculate the minimum number of operations you should perform to obtain the number that has remainder $$$10^y$$$ modulo $$$10^x$$$. In other words, the obtained number should have remainder $$$10^y$$$ when divided by $$$10^x$$$.",
    "prob_desc_output_spec": "Print one integer — the minimum number of operations you should perform to obtain the number having remainder $$$10^y$$$ modulo $$$10^x$$$. In other words, the obtained number should have remainder $$$10^y$$$ when divided by $$$10^x$$$.",
    "prob_desc_input_spec": "The first line of the input contains three integers $$$n, x, y$$$ ($$$0 \\le y &lt; x &lt; n \\le 2 \\cdot 10^5$$$) — the length of the number and the integers $$$x$$$ and $$$y$$$, respectively. The second line of the input contains one decimal number consisting of $$$n$$$ digits, each digit of this number is either 0 or 1. It is guaranteed that the first digit of the number is 1.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1100,
    "file_name": "train_005.jsonl",
    "code_uid": "2266f91222a7852d12409d4589aa0db8",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"11 5 2\\n11010100101\", \"11 5 1\\n11010100101\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, x, y= map(int, input().split())\na=input()\nc=0\nfor i in range(n-1, n-x-1, -1):\n    if a[i]=='1':\n        c+=1\nif a[n-y-1]=='0':\n    c+=1\nelse:\n    c-=1\nprint(c)",
    "prob_desc_created_at": "1557844500",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}