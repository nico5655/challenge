{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"3\", \"0\"]",
    "src_uid": "d3c8c1e32dcf4286bef19e9f2b79c8bd",
    "prob_desc_notes": "NoteIn the first sample the possible values of x are 3, 4 or 5.In the second sample it is impossible to find such x, that Petya got 3 chores and Vasya got 4.",
    "prob_desc_description": "Petya and Vasya are brothers. Today is a special day for them as their parents left them home alone and commissioned them to do n chores. Each chore is characterized by a single parameter — its complexity. The complexity of the i-th chore equals hi.As Petya is older, he wants to take the chores with complexity larger than some value x (hi &gt; x) to leave to Vasya the chores with complexity less than or equal to x (hi ≤ x). The brothers have already decided that Petya will do exactly a chores and Vasya will do exactly b chores (a + b = n).In how many ways can they choose an integer x so that Petya got exactly a chores and Vasya got exactly b chores?",
    "prob_desc_output_spec": "Print the required number of ways to choose an integer value of x. If there are no such ways, print 0.",
    "prob_desc_input_spec": "The first input line contains three integers n, a and b (2 ≤ n ≤ 2000; a, b ≥ 1; a + b = n) — the total number of chores, the number of Petya's chores and the number of Vasya's chores. The next line contains a sequence of integers h1, h2, ..., hn (1 ≤ hi ≤ 109), hi is the complexity of the i-th chore. The numbers in the given sequence are not necessarily different. All numbers on the lines are separated by single spaces.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_002.jsonl",
    "code_uid": "7b476451dfcd0fcab9639fe210c0e952",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5 2 3\\n6 2 3 100 1\", \"7 3 4\\n1 1 9 1 1 1 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, a, b = [int(s) for s in input().split(' ')]\nh = [int(x) for x in input().split(' ')]\nh.sort()\nprint(h[b] - h[b - 1])",
    "prob_desc_created_at": "1332687900",
    "tags": [
        "sortings"
    ],
    "hidden_unit_tests": ""
}