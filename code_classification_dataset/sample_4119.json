{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"3\\n3\\n1\\n1\\n17\\n2\\n64\"]",
    "src_uid": "288b36b64473326ea434dc74f05ae456",
    "prob_desc_notes": "NoteTest case 1: $$$1\\; \\texttt{and}\\; 3=1&gt;0$$$, $$$1\\; \\texttt{xor}\\; 3=2&gt;0$$$.Test case 2: $$$2\\; \\texttt{and}\\; 3=2&gt;0$$$, $$$2\\; \\texttt{xor}\\; 3=1&gt;0$$$.",
    "prob_desc_description": "Even if it's a really easy question, she won't be able to answer it— Perfect Memento in Strict SenseCirno's perfect bitmasks classroom has just started!Cirno gave her students a positive integer $$$x$$$. As an assignment, her students need to find the minimum positive integer $$$y$$$, which satisfies the following two conditions:$$$$$$x\\ \\texttt{and}\\ y &gt; 0$$$$$$ $$$$$$x\\ \\texttt{xor}\\ y &gt; 0$$$$$$Where $$$\\texttt{and}$$$ is the bitwise AND operation, and $$$\\texttt{xor}$$$ is the bitwise XOR operation.Among the students was Mystia, who was truly baffled by all these new operators. Please help her!",
    "prob_desc_output_spec": "For each test case, print a single integer — the minimum number of $$$y$$$.",
    "prob_desc_input_spec": "The first line of input contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^3$$$) — the number of input test cases. For each test case, the only line of input contains one integer $$$x$$$ ($$$1 \\leq x \\leq 2^{30}$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_091.jsonl",
    "code_uid": "a32079df1f33cadc23c26742565b5838",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"7\\n\\n1\\n\\n2\\n\\n5\\n\\n9\\n\\n16\\n\\n114514\\n\\n1000000\"]",
    "exec_outcome": "PASSED",
    "source_code": "for time in range(int(input())):\r\n    k = 1\r\n    n = int(input())\r\n    if n == 1:\r\n        print(3)\r\n        continue\r\n    while n%2 == 0:\r\n        n = n//2\r\n        k *= 2\r\n    if n == 1:\r\n        print(k+1)\r\n        continue\r\n    print(k)",
    "prob_desc_created_at": "1654266900",
    "tags": [
        "bitmasks",
        "brute force"
    ],
    "hidden_unit_tests": ""
}