{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"1\", \"4\"]",
    "src_uid": "28b7e9de0eb583642526c077aa56daba",
    "prob_desc_notes": "NoteFor the second example all the permutations are:  p = [1, 2, 3] : fa is equal to 1;  p = [1, 3, 2] : fa is equal to 1;  p = [2, 1, 3] : fa is equal to 1;  p = [2, 3, 1] : fa is equal to 1;  p = [3, 1, 2] : fa is equal to 0;  p = [3, 2, 1] : fa is equal to 0. Where p is the array of the indices of initial array a. The sum of fa is equal to 4.",
    "prob_desc_description": "You are given an array a of length n. We define fa the following way:  Initially fa = 0, M = 1;  for every 2 ≤ i ≤ n if aM &lt; ai then we set fa = fa + aM and then set M = i. Calculate the sum of fa over all n! permutations of the array a modulo 109 + 7.Note: two elements are considered different if their indices differ, so for every array a there are exactly n! permutations.",
    "prob_desc_output_spec": "Print the only integer, the sum of fa over all n! permutations of the array a modulo 109 + 7.",
    "prob_desc_input_spec": "The first line contains integer n (1 ≤ n ≤  1 000 000) — the size of array a. Second line contains n integers a1, a2, ..., an (1 ≤  ai ≤  109).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 2300,
    "file_name": "train_030.jsonl",
    "code_uid": "3439d41b80fb9d040d9739eaf022a899",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n1 3\", \"3\\n1 1 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "def main():\n    f= [1]\n    for i in range(1,1000002):\n        f.append((f[-1] * i)%1000000007)\n    n = int(raw_input())\n    a = sorted(int(x) for x in raw_input().split())\n    sol = 0\n    j = 0\n    s = 1\n    sq = 1\n    for i in range(n - 1):\n        sq = sq * (n - i) % 1000000007\n        if a[i] != a[i + 1]:\n            sol += a[i] * (i - j + 1) * f[n - j - 1] * s\n            j = i + 1\n            s = sq\n    print(sol % 1000000007)\nif __name__ == '__main__':\n    main()",
    "prob_desc_created_at": "1518793500",
    "tags": [
        "combinatorics",
        "math"
    ],
    "hidden_unit_tests": ""
}