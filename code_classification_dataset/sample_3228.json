{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"? 1 1 1 3\\n? 1 1 2 3\\n? 2 1 2 3\\n? 3 1 3 3\\n? 2 2 3 3\\n? 1 2 3 2\\n? 1 2 3 3\\n!\\n100\\n001\\n000\"]",
    "src_uid": "0d37339ba85957f9b6cde4f254457196",
    "prob_desc_notes": null,
    "prob_desc_description": "This is an interactive problemYou are given a grid $$$n\\times n$$$, where $$$n$$$ is odd. Rows are enumerated from $$$1$$$ to $$$n$$$ from up to down, columns are enumerated from $$$1$$$ to $$$n$$$ from left to right. Cell, standing on the intersection of row $$$x$$$ and column $$$y$$$, is denoted by $$$(x, y)$$$.Every cell contains $$$0$$$ or $$$1$$$. It is known that the top-left cell contains $$$1$$$, and the bottom-right cell contains $$$0$$$.We want to know numbers in all cells of the grid. To do so we can ask the following questions: \"$$$?$$$ $$$x_1$$$ $$$y_1$$$ $$$x_2$$$ $$$y_2$$$\", where $$$1 \\le x_1 \\le x_2 \\le n$$$, $$$1 \\le y_1 \\le y_2 \\le n$$$, and $$$x_1 + y_1 + 2 \\le x_2 + y_2$$$. In other words, we output two different cells $$$(x_1, y_1)$$$, $$$(x_2, y_2)$$$ of the grid such that we can get from the first to the second by moving only to the right and down, and they aren't adjacent.As a response to such question you will be told if there exists a path between $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$, going only to the right or down, numbers in cells of which form a palindrome.For example, paths, shown in green, are palindromic, so answer for \"$$$?$$$ $$$1$$$ $$$1$$$ $$$2$$$ $$$3$$$\" and \"$$$?$$$ $$$1$$$ $$$2$$$ $$$3$$$ $$$3$$$\" would be that there exists such path. However, there is no palindromic path between $$$(1, 1)$$$ and $$$(3, 1)$$$.  Determine all cells of the grid by asking not more than $$$n^2$$$ questions. It can be shown that the answer always exists.",
    "prob_desc_output_spec": null,
    "prob_desc_input_spec": "The first line contains odd integer ($$$3 \\le n &lt; 50$$$) — the side of the grid.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 2400,
    "file_name": "train_048.jsonl",
    "code_uid": "e5e9d6279fa9cfb8c3ebf10d5467e454",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n0\\n1\\n0\\n1\\n1\\n1\\n1\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\nimport sys\n# helpful:\n# r,g,b=map(int,input().split())\n#list1 = input().split()\n#for i in range(len(list1)):\n#    list1[i] = int(list1[i])\n# print(list1)\n# arr = [[0 for x in range(columns)] for y in range(rows)]\nn = int(input())\narr = [[-1 for x in range(n+1)] for y in range(n+1)]\narr[1][1] = 1\narr[n][n] = 0\n\ndef flipEven(arr):\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            if(abs(j-i) % 2 == 1):\n                arr[i][j] = 1-arr[i][j]\n    return arr\n\nfor i in range(1, n+1):\n    for j in range(1, n+1):\n        if((j-i) % 2 == 0 and (i != 1 or j !=1) and (i != n or j != n)):\n           if j == 1:\n               print('? ' + str(i-2) + ' ' + str(j) + ' ' + str(i) + ' ' + str(j))\n               sys.stdout.flush()\n               if(int(input()) == 1):\n                   arr[i][j] = arr[i-2][j]\n               else:\n                    arr[i][j] = 1 - arr[i-2][j]\n           elif i == 1:\n               print('? ' + str(i) + ' ' + str(j-2) + ' ' + str(i) + ' ' + str(j))\n               sys.stdout.flush()\n               if(int(input()) == 1):\n                   arr[i][j] = arr[i][j-2]\n               else:\n                   arr[i][j] = 1 - arr[i][j-2]\n           else:\n               print('? ' + str(i-1) + ' ' + str(j-1) + ' ' + str(i) + ' ' + str(j))\n               sys.stdout.flush()\n               if(int(input()) == 1):\n                   arr[i][j] = arr[i-1][j-1]\n               else:\n                   arr[i][j] = 1 - arr[i-1][j-1]\n        \n\narr[1][2] = 1\nprint('? ' + str(1) + ' ' + str(2) + ' ' + str(2) + ' ' + str(3))\nsys.stdout.flush()\nif(int(input()) == 1):\n   arr[2][3] = 1\nelse:\n    arr[2][3] = 0\n\nprint('? ' + str(2) + ' ' + str(1) + ' ' + str(2) + ' ' + str(3))\nsys.stdout.flush()\nif(int(input()) == 1):\n   arr[2][1] = arr[2][3]\nelse:\n    arr[2][1] = 1-arr[2][3]\n\nprint('? ' + str(2) + ' ' + str(1) + ' ' + str(3) + ' ' + str(2))\nsys.stdout.flush()\nif(int(input()) == 1):\n   arr[3][2] = arr[2][1]\nelse:\n    arr[3][2] = 1-arr[2][1]\n\nfor i in range(1, n+1):\n    for j in range(1, n+1):\n        if((j-i) % 2 == 1 and (i != 1 or j !=2) and (i != 2 or j !=1) and (i != 2 or j !=3) and (i != 3 or j != 2)):\n           if (j == 1):\n               print('? ' + str(i-2) + ' ' + str(j) + ' ' + str(i) + ' ' + str(j))\n               sys.stdout.flush()\n               if(int(input()) == 1):\n                   arr[i][j] = arr[i-2][j]\n               else:\n                    arr[i][j] = 1 - arr[i-2][j]\n           elif i == 1:\n               print('? ' + str(i) + ' ' + str(j-2) + ' ' + str(i) + ' ' + str(j))\n               sys.stdout.flush()\n               if(int(input()) == 1):\n                   arr[i][j] = arr[i][j-2]\n               else:\n                   arr[i][j] = 1 - arr[i][j-2]\n           else:\n               print('? ' + str(i-1) + ' ' + str(j-1) + ' ' + str(i) + ' ' + str(j))\n               sys.stdout.flush()\n               if(int(input()) == 1):\n                   arr[i][j] = arr[i-1][j-1]\n               else:\n                   arr[i][j] = 1 - arr[i-1][j-1]\n\ndoFlip = [[1,0,1,0], [1,1,0,0], [0,0,1,1], [0,1,0,1]]\ndontFlip = [[1,0,0,1], [1,1,1,1], [0,0,0,0], [0,1,1,0]]\n\nfor i in range(1, n+1):\n    for j in range(1, n+1):\n        if(i <= n-3): # 1\n            if([arr[i][j], arr[i+1][j], arr[i+2][j], arr[i+3][j]] in doFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+3) + ' ' + str(j))\n                sys.stdout.flush()\n                if(int(input()) == 1):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n            elif([arr[i][j], arr[i+1][j], arr[i+2][j], arr[i+3][j]] in dontFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+3) + ' ' + str(j))\n                sys.stdout.flush()\n                if(int(input()) == 0):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n        if(i <= n-2 and j <= n-1): # 2\n            if([arr[i][j], arr[i+1][j], arr[i+2][j], arr[i+2][j+1]] in doFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+2) + ' ' + str(j+1))\n                sys.stdout.flush()\n                if(int(input()) == 1):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()()\n            elif([arr[i][j], arr[i+1][j], arr[i+2][j], arr[i+2][j+1]] in dontFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+2) + ' ' + str(j+1))\n                sys.stdout.flush()\n                if(int(input()) == 0):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n        if(i <= n-2 and j <= n-1): # 3\n            if([arr[i][j], arr[i+1][j], arr[i+1][j+1], arr[i+2][j+1]] in doFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+2) + ' ' + str(j+1))\n                sys.stdout.flush()\n                if(int(input()) == 1):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n            elif([arr[i][j], arr[i+1][j], arr[i+1][j+1], arr[i+2][j+1]] in dontFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+2) + ' ' + str(j+1))\n                sys.stdout.flush()\n                if(int(input()) == 0):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n        if(i <= n-2 and j <= n-1): # 4\n            if([arr[i][j], arr[i][j+1], arr[i+1][j+1], arr[i+2][j+1]] in doFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+2) + ' ' + str(j+1))\n                sys.stdout.flush()\n                if(int(input()) == 1):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n            elif([arr[i][j], arr[i][j+1], arr[i+1][j+1], arr[i+2][j+1]] in dontFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+2) + ' ' + str(j+1))\n                sys.stdout.flush()\n                if(int(input()) == 0):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n        if(i <= n-1 and j <= n-2): # 5\n            if([arr[i][j], arr[i][j+1], arr[i+1][j+1], arr[i+1][j+2]] in doFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+1) + ' ' + str(j+2))\n                sys.stdout.flush()\n                if(int(input()) == 1):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n            elif([arr[i][j], arr[i][j+1], arr[i+1][j+1], arr[i+1][j+2]] in dontFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+1) + ' ' + str(j+2))\n                sys.stdout.flush()\n                if(int(input()) == 0):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n        if(i <= n-1 and j <= n-2): # 6\n            if([arr[i][j], arr[i+1][j], arr[i+1][j+1], arr[i+1][j+2]] in doFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+1) + ' ' + str(j+2))\n                sys.stdout.flush()\n                if(int(input()) == 1):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n            elif([arr[i][j], arr[i+1][j], arr[i+1][j+1], arr[i+1][j+2]] in dontFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+1) + ' ' + str(j+2))\n                sys.stdout.flush()\n                if(int(input()) == 0):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n        if(i <= n-1 and j <= n-2): # 7\n            if([arr[i][j], arr[i][j+1], arr[i][j+2], arr[i+1][j+2]] in doFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+1) + ' ' + str(j+2))\n                sys.stdout.flush()\n                if(int(input()) == 1):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n            elif([arr[i][j], arr[i][j+1], arr[i][j+2], arr[i+1][j+2]] in dontFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i+1) + ' ' + str(j+2))\n                sys.stdout.flush()\n                if(int(input()) == 0):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n        if(j <= n-3): # 8\n            if([arr[i][j], arr[i][j+1], arr[i][j+2], arr[i][j+3]] in doFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i) + ' ' + str(j+3))\n                sys.stdout.flush()\n                if(int(input()) == 1):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n            elif([arr[i][j], arr[i][j+1], arr[i][j+2], arr[i][j+3]] in dontFlip):\n                print('? ' + str(i) + ' ' + str(j) + ' ' + str(i) + ' ' + str(j+3))\n                sys.stdout.flush()\n                if(int(input()) == 0):\n                    arr = flipEven(arr)\n                print('!')\n                for i in range(1, n+1):\n                    print(''.join(map(str, arr[i][1:])))\n                exit()\n        \n    \n\n",
    "prob_desc_created_at": "1566135900",
    "tags": [
        "constructive algorithms",
        "implementation",
        "interactive"
    ],
    "hidden_unit_tests": ""
}