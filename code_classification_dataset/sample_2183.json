{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"5\"]",
    "src_uid": "a8c5b1377035f0a772510b5b80588d47",
    "prob_desc_notes": "NoteIn the sample case, the suitable pairs are: $$$a_1 \\cdot a_4 = 8 = 2^3$$$; $$$a_1 \\cdot a_6 = 1 = 1^3$$$; $$$a_2 \\cdot a_3 = 27 = 3^3$$$; $$$a_3 \\cdot a_5 = 216 = 6^3$$$; $$$a_4 \\cdot a_6 = 8 = 2^3$$$.",
    "prob_desc_description": "You are given $$$n$$$ positive integers $$$a_1, \\ldots, a_n$$$, and an integer $$$k \\geq 2$$$. Count the number of pairs $$$i, j$$$ such that $$$1 \\leq i &lt; j \\leq n$$$, and there exists an integer $$$x$$$ such that $$$a_i \\cdot a_j = x^k$$$.",
    "prob_desc_output_spec": "Print a single integer — the number of suitable pairs.",
    "prob_desc_input_spec": "The first line contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\leq n \\leq 10^5$$$, $$$2 \\leq k \\leq 100$$$). The second line contains $$$n$$$ integers $$$a_1, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^5$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1800,
    "file_name": "train_018.jsonl",
    "code_uid": "0c450c4102572848fa34d6f5274ed09d",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"6 3\\n1 3 9 8 24 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin\nfrom itertools import repeat\nfrom collections import defaultdict\ndef main():\n    n, k = map(int, stdin.readline().split())\n    a = map(int, stdin.readline().split(), repeat(10, n))\n    b = range(100010)\n    c = [0] * 100010\n    z = int(pow(100010, 1. / k)) + 1\n    p = [1] * 100010\n    for i in xrange(2, 100010):\n        if c[i]:\n            continue\n        y = 1000000\n        if i <= z:\n            y = x = pow(i, k - 1)\n        j = i\n        while j < 100010:\n            c[j] = 1\n            y -= 1\n            if y:\n                p[j] *= i\n            else:\n                y = x\n                while b[j] % (x * i) == 0:\n                    b[j] /= x * i\n            j += i\n    pa = [0] * 100010\n    pa[1] = 1\n    z2 = int(pow(10 ** 10, 1. / k)) + 1\n    for i in xrange(2, 100010):\n        if i != b[i]:\n            pa[i] = pa[b[i]]\n            continue\n        if p[i] <= z2:\n            pa[i] = pow(p[i], k) / i\n    a = [b[x] for x in a]\n    d = defaultdict(int)\n    ans = 0\n    for x in a:\n        if pa[x] in d:\n            ans += d[pa[x]]\n        d[x] += 1\n    print ans\nmain()\n",
    "prob_desc_created_at": "1572087900",
    "tags": [
        "implementation",
        "hashing",
        "math"
    ],
    "hidden_unit_tests": ""
}