{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"10\\n5\"]",
    "src_uid": "7c2a61de728e6767b25e58c74497bbae",
    "prob_desc_notes": "NoteIn the first case, $$$a = [1,2,3,4] $$$, with average of $$$2.5$$$. You can change array $$$a$$$ to $$$[10,0,0,0]$$$. Average remains $$$2.5$$$, and all conditions are satisfied.In the second case, $$$0 \\leq a_{i} \\leq 5$$$. You can change $$$a$$$ to $$$[5,1,1,3]$$$. You cannot increase $$$a_{1}$$$ further as it will violate condition $$$0\\le a_i\\le m$$$.",
    "prob_desc_description": "$$$n$$$ students are taking an exam. The highest possible score at this exam is $$$m$$$. Let $$$a_{i}$$$ be the score of the $$$i$$$-th student. You have access to the school database which stores the results of all students.You can change each student's score as long as the following conditions are satisfied:   All scores are integers  $$$0 \\leq a_{i} \\leq m$$$  The average score of the class doesn't change. You are student $$$1$$$ and you would like to maximize your own score.Find the highest possible score you can assign to yourself such that all conditions are satisfied.",
    "prob_desc_output_spec": "For each testcase, output one integer  — the highest possible score you can assign to yourself such that both conditions are satisfied._",
    "prob_desc_input_spec": "Each test contains multiple test cases.  The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 200$$$). The description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\leq n \\leq 10^{3}$$$, $$$1 \\leq m \\leq 10^{5}$$$)  — the number of students and the highest possible score respectively. The second line of each testcase contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$ 0 \\leq a_{i} \\leq m$$$)  — scores of the students.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_009.jsonl",
    "code_uid": "f52595ad4843e586d73214caec09e6d1",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n4 10\\n1 2 3 4\\n4 5\\n1 2 3 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "for _ in range(int(input())):\n    n,m=map(int,input().split())\n    l=list(map(int,input().split()))\n    s=sum(l)\n    print(min(m,s))\n    ",
    "prob_desc_created_at": "1583332500",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}