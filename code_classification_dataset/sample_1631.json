{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2\\n6\\n-1\\n4\"]",
    "src_uid": "dcf7988c35bb34973e7b60afa7a0e68c",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given array a with n integers and m queries. The i-th query is given with three integers li, ri, xi.For the i-th query find any position pi (li ≤ pi ≤ ri) so that api ≠ xi.",
    "prob_desc_output_spec": "Print m lines. On the i-th line print integer pi — the position of any number not equal to xi in segment [li, ri] or the value  - 1 if there is no such number.",
    "prob_desc_input_spec": "The first line contains two integers n, m (1 ≤ n, m ≤ 2·105) — the number of elements in a and the number of queries. The second line contains n integers ai (1 ≤ ai ≤ 106) — the elements of the array a. Each of the next m lines contains three integers li, ri, xi (1 ≤ li ≤ ri ≤ n, 1 ≤ xi ≤ 106) — the parameters of the i-th query.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_011.jsonl",
    "code_uid": "73b288102a40d410cd8e01847c7d557f",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6 4\\n1 2 1 1 3 5\\n1 4 1\\n2 6 2\\n3 4 1\\n3 4 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin \n\nn,m=list(map(int,stdin.readline().split()))\na=list(map(int,stdin.readline().split()))\n\npre=[]\nt,index=a[0],0\nfor i in range(n) :\n    index=index if a[i]==t else i\n    t=a[i]\n    pre.append(index)\n\nprt=[]\nfor i in range(m) :\n    l,r,x=list(map(int,stdin.readline().split()))\n    L=pre[r-1]\n    if a[r-1]==x :\n        sl=pre[r-1]+1\n        if sl<=l :\n            prt.append(str(-1))\n            continue\n        r=sl-1\n    prt.append(str(r))\n\nprint(\"\\n\".join(prt))",
    "prob_desc_created_at": "1455116400",
    "tags": [
        "data structures",
        "implementation"
    ],
    "hidden_unit_tests": ""
}