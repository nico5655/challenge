{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"5 5 6 7\"]",
    "src_uid": "612884cad3d52cc952f2b49674e70a08",
    "prob_desc_notes": "NoteInitially, the mountain has heights $$$2, 6, 7, 8$$$.In the first minute, we have $$$2 + 2 \\leq 6$$$, so $$$2$$$ increases to $$$3$$$ and $$$6$$$ decreases to $$$5$$$, leaving $$$3, 5, 7, 8$$$.In the second minute, we have $$$3 + 2 \\leq 5$$$ and $$$5 + 2 \\leq 7$$$, so $$$3$$$ increases to $$$4$$$, $$$5$$$ is unchanged, and $$$7$$$ decreases to $$$6$$$, leaving $$$4, 5, 6, 8$$$.In the third minute, we have $$$6 + 2 \\leq 8$$$, so $$$6$$$ increases to $$$7$$$ and $$$8$$$ decreases to $$$7$$$, leaving $$$4, 5, 7, 7$$$.In the fourth minute, we have $$$5 + 2 \\leq 7$$$, so $$$5$$$ increases to $$$6$$$ and $$$7$$$ decreases to $$$6$$$, leaving $$$4, 6, 6, 7$$$.In the fifth minute, we have $$$4 + 2 \\leq 6$$$, so $$$4$$$ increases to $$$5$$$ and $$$6$$$ decreases to $$$5$$$, leaving $$$5, 5, 6, 7$$$.In the sixth minute, nothing else can change so the landslide stops and our answer is $$$5, 5, 6, 7$$$.",
    "prob_desc_description": "Omkar is standing at the foot of Celeste mountain. The summit is $$$n$$$ meters away from him, and he can see all of the mountains up to the summit, so for all $$$1 \\leq j \\leq n$$$ he knows that the height of the mountain at the point $$$j$$$ meters away from himself is $$$h_j$$$ meters. It turns out that for all $$$j$$$ satisfying $$$1 \\leq j \\leq n - 1$$$, $$$h_j &lt; h_{j + 1}$$$ (meaning that heights are strictly increasing).Suddenly, a landslide occurs! While the landslide is occurring, the following occurs: every minute, if $$$h_j + 2 \\leq h_{j + 1}$$$, then one square meter of dirt will slide from position $$$j + 1$$$ to position $$$j$$$, so that $$$h_{j + 1}$$$ is decreased by $$$1$$$ and $$$h_j$$$ is increased by $$$1$$$. These changes occur simultaneously, so for example, if $$$h_j + 2 \\leq h_{j + 1}$$$ and $$$h_{j + 1} + 2 \\leq h_{j + 2}$$$ for some $$$j$$$, then $$$h_j$$$ will be increased by $$$1$$$, $$$h_{j + 2}$$$ will be decreased by $$$1$$$, and $$$h_{j + 1}$$$ will be both increased and decreased by $$$1$$$, meaning that in effect $$$h_{j + 1}$$$ is unchanged during that minute.The landslide ends when there is no $$$j$$$ such that $$$h_j + 2 \\leq h_{j + 1}$$$. Help Omkar figure out what the values of $$$h_1, \\dots, h_n$$$ will be after the landslide ends. It can be proven that under the given constraints, the landslide will always end in finitely many minutes.Note that because of the large amount of input, it is recommended that your code uses fast IO.",
    "prob_desc_output_spec": "Output $$$n$$$ integers, where the $$$j$$$-th integer is the value of $$$h_j$$$ after the landslide has stopped.",
    "prob_desc_input_spec": "The first line contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^6$$$).  The second line contains $$$n$$$ integers $$$h_1, h_2, \\dots, h_n$$$ satisfying $$$0 \\leq h_1 &lt; h_2 &lt; \\dots &lt; h_n \\leq 10^{12}$$$ — the heights.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2400,
    "file_name": "train_016.jsonl",
    "code_uid": "66610989d81f590c328bf5eb8712ab25",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n2 6 7 8\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\nn=int(input())\na=[int(v) for v in sys.stdin.readline().split()]\ns=sum(a)-((n*(n+1))//2)\np=s//n\nq=s%n\nfor j in range(n):\n    a[j]=j+1+p+(q>0)\n    q=q-1\nprint(' '.join(map(str,a)))\n",
    "prob_desc_created_at": "1597588500",
    "tags": [
        "greedy",
        "constructive algorithms",
        "math",
        "data structures",
        "binary search"
    ],
    "hidden_unit_tests": ""
}