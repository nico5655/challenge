{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"YES\\nNO\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\"]",
    "src_uid": "c3df88e22a17492d4eb0f3239a27d404",
    "prob_desc_notes": "NoteIn the first test case of the example, the following sequence of moves can be performed:  choose $$$i=3$$$, element $$$a_3=5$$$ is blue, so we decrease it, we get $$$a=[1,2,4,2]$$$;  choose $$$i=2$$$, element $$$a_2=2$$$ is red, so we increase it, we get $$$a=[1,3,4,2]$$$;  choose $$$i=3$$$, element $$$a_3=4$$$ is blue, so we decrease it, we get $$$a=[1,3,3,2]$$$;  choose $$$i=2$$$, element $$$a_2=2$$$ is red, so we increase it, we get $$$a=[1,4,3,2]$$$. We got that $$$a$$$ is a permutation. Hence the answer is YES.",
    "prob_desc_description": "You are given an array of integers $$$a$$$ of length $$$n$$$. The elements of the array can be either different or the same. Each element of the array is colored either blue or red. There are no unpainted elements in the array. One of the two operations described below can be applied to an array in a single step:  either you can select any blue element and decrease its value by $$$1$$$;  or you can select any red element and increase its value by $$$1$$$. Situations in which there are no elements of some color at all are also possible. For example, if the whole array is colored blue or red, one of the operations becomes unavailable.Determine whether it is possible to make $$$0$$$ or more steps such that the resulting array is a permutation of numbers from $$$1$$$ to $$$n$$$?In other words, check whether there exists a sequence of steps (possibly empty) such that after applying it, the array $$$a$$$ contains in some order all numbers from $$$1$$$ to $$$n$$$ (inclusive), each exactly once.",
    "prob_desc_output_spec": "Print $$$t$$$ lines, each of which contains the answer to the corresponding test case of the input. Print YES as an answer if the corresponding array can be transformed into a permutation, and NO otherwise. You can print the answer in any case (for example, the strings yEs, yes, Yes, and YES will be recognized as a positive answer).",
    "prob_desc_input_spec": "The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$) — the number of input data sets in the test. The description of each set of input data consists of three lines. The first line contains an integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$) — the length of the original array $$$a$$$. The second line contains $$$n$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$ ($$$-10^9 \\leq a_i \\leq 10^9$$$) — the array elements themselves. The third line has length $$$n$$$ and consists exclusively of the letters 'B' and/or 'R': $$$i$$$th character is 'B' if $$$a_i$$$ is colored blue, and is 'R' if colored red. It is guaranteed that the sum of $$$n$$$ over all input sets does not exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_108.jsonl",
    "code_uid": "146f825f0fdf5c72770365ff8caeea1c",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"8\\n4\\n1 2 5 2\\nBRBR\\n2\\n1 1\\nBB\\n5\\n3 1 4 2 5\\nRBRRB\\n5\\n3 1 3 1 3\\nRBRRB\\n5\\n5 1 5 1 5\\nRBRRB\\n4\\n2 2 2 2\\nBRBR\\n2\\n1 -2\\nBR\\n4\\n-2 -1 4 0\\nRRRR\"]",
    "exec_outcome": "PASSED",
    "source_code": "t = int(input())\r\nfor _ in range(t):\r\n  n = int(input())\r\n  A = list(map(int, input().split()))\r\n  B = []\r\n  R = []\r\n  S = input()\r\n  for a, s in zip(A, S):\r\n    if s == \"B\":\r\n      B.append(a)\r\n    else:\r\n      R.append(a)\r\n  B.sort()\r\n  R.sort()\r\n  flag = True\r\n  for i in range(len(B)):\r\n    if B[i] < i+1:\r\n      flag = False\r\n  for i in range(len(R)):\r\n    if R[i] > len(B)+i+1:\r\n      flag = False\r\n  if flag:\r\n    print(\"YES\")\r\n  else:\r\n    print(\"NO\")\r\n  ",
    "prob_desc_created_at": "1635863700",
    "tags": [
        "greedy",
        "math",
        "sortings"
    ],
    "hidden_unit_tests": ""
}