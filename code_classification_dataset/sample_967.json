{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"0\\n3\\n11\\n72\\n63244\"]",
    "src_uid": "d78cd4a06fb566d58275e92f976166f2",
    "prob_desc_notes": null,
    "prob_desc_description": "Initially, you have the array $$$a$$$ consisting of one element $$$1$$$ ($$$a = [1]$$$).In one move, you can do one of the following things:  Increase some (single) element of $$$a$$$ by $$$1$$$ (choose some $$$i$$$ from $$$1$$$ to the current length of $$$a$$$ and increase $$$a_i$$$ by one);  Append the copy of some (single) element of $$$a$$$ to the end of the array (choose some $$$i$$$ from $$$1$$$ to the current length of $$$a$$$ and append $$$a_i$$$ to the end of the array). For example, consider the sequence of five moves:  You take the first element $$$a_1$$$, append its copy to the end of the array and get $$$a = [1, 1]$$$.  You take the first element $$$a_1$$$, increase it by $$$1$$$ and get $$$a = [2, 1]$$$.  You take the second element $$$a_2$$$, append its copy to the end of the array and get $$$a = [2, 1, 1]$$$.  You take the first element $$$a_1$$$, append its copy to the end of the array and get $$$a = [2, 1, 1, 2]$$$.  You take the fourth element $$$a_4$$$, increase it by $$$1$$$ and get $$$a = [2, 1, 1, 3]$$$. Your task is to find the minimum number of moves required to obtain the array with the sum at least $$$n$$$.You have to answer $$$t$$$ independent test cases.",
    "prob_desc_output_spec": "For each test case, print the answer: the minimum number of moves required to obtain the array with the sum at least $$$n$$$.",
    "prob_desc_input_spec": "The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. Then $$$t$$$ test cases follow. The only line of the test case contains one integer $$$n$$$ ($$$1 \\le n \\le 10^9$$$) — the lower bound on the sum of the array.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1100,
    "file_name": "train_005.jsonl",
    "code_uid": "448b264d1586de8f2cc29330307ee72c",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n1\\n5\\n42\\n1337\\n1000000000\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\nt=int(input())\nwhile t:\n    t-=1\n    n=int(input())\n    if n==1 :\n        print(0)\n    elif n==2:\n        print(1)\n   \n    else:\n        mx=n\n        c=0\n        for i in range(max(2,round(math.sqrt(n))-1),round(math.sqrt(n))+1):\n            tem=i-1+math.ceil((n-i)/i)\n            mx=min(tem,mx)\n        print(mx)",
    "prob_desc_created_at": "1601280300",
    "tags": [
        "constructive algorithms",
        "binary search",
        "math"
    ],
    "hidden_unit_tests": ""
}