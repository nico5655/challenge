{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"RBRBR\\n-1\\nBBRRRRBB\\nBR\"]",
    "src_uid": "2e01de6090e862f7f18a47dcbcb3be53",
    "prob_desc_notes": "NoteThe first test case is considered in the statement.In the second test case, there are no even digits, so it is impossible to form a number from its digits that is divisible by $$$2$$$.In the third test case, each coloring containing at least one red and one black digit is possible, so you can color $$$4$$$ digits in red and $$$4$$$ in black ($$$|4 - 4| = 0$$$, it is impossible to improve the result).In the fourth test case, there is a single desired coloring.",
    "prob_desc_description": "It is given a non-negative integer $$$x$$$, the decimal representation of which contains $$$n$$$ digits. You need to color each its digit in red or black, so that the number formed by the red digits is divisible by $$$A$$$, and the number formed by the black digits is divisible by $$$B$$$.At least one digit must be colored in each of two colors. Consider, the count of digits colored in red is $$$r$$$ and the count of digits colored in black is $$$b$$$. Among all possible colorings of the given number $$$x$$$, you need to output any such that the value of $$$|r - b|$$$ is the minimum possible.Note that the number $$$x$$$ and the numbers formed by digits of each color, may contain leading zeros.  Example of painting a number for $$$A = 3$$$ and $$$B = 13$$$ The figure above shows an example of painting the number $$$x = 02165$$$ of $$$n = 5$$$ digits for $$$A = 3$$$ and $$$B = 13$$$. The red digits form the number $$$015$$$, which is divisible by $$$3$$$, and the black ones — $$$26$$$, which is divisible by $$$13$$$. Note that the absolute value of the difference between the counts of red and black digits is $$$1$$$, it is impossible to achieve a smaller value.",
    "prob_desc_output_spec": "For each test case, output in a separate line:   -1 if the desired coloring does not exist;  a string $$$s$$$ of $$$n$$$ characters, each of them is a letter 'R' or 'B'. If the $$$i$$$-th digit of the number $$$x$$$ is colored in red, then the $$$i$$$-th character of the string $$$s$$$ must be the letter 'R', otherwise the letter 'B'.  The number formed by digits colored red should divisible by $$$A$$$. The number formed by digits colored black should divisible by $$$B$$$. The value $$$|r-b|$$$ should be minimal, where $$$r$$$ is the count of red digits, $$$b$$$ is the count of black digits. If there are many possible answers, print any of them.",
    "prob_desc_input_spec": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 10$$$) — the number of test cases. Then $$$t$$$ test cases follow. Each test case consists of two lines. The first line contains three integers $$$n$$$, $$$A$$$, $$$B$$$ ($$$2 \\le n \\le 40$$$, $$$1 \\le A, B \\le 40$$$). The second line contains a non-negative integer $$$x$$$ containing exactly $$$n$$$ digits and probably containing leading zeroes.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 2100,
    "file_name": "train_093.jsonl",
    "code_uid": "46ccfba2ed8cab9322fc62e5be626f3a",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n5 3 13\\n02165\\n4 2 1\\n1357\\n8 1 1\\n12345678\\n2 7 9\\n90\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\r\nimport io, os\r\ninput = sys.stdin.readline\r\n\r\nfrom collections import defaultdict\r\n\r\ndef main():\r\n\r\n    t = int(input())\r\n    for _ in range(t):\r\n        n, a, b = map(int, input().split())\r\n        s = list(str(input().rstrip()))\r\n        s = [int(c) for c in s]\r\n        dp = [-1]*(a*b*(n+1)*(n+1))\r\n        dp[0] = 0\r\n\r\n        def getindex(i, j, ra, rb):\r\n            return i*(n+1)*a*b+j*a*b+ra*b+rb\r\n\r\n        for i, c in enumerate(s):\r\n            for j in range(i+1):\r\n                for ra in range(a):\r\n                    for rb in range(b):\r\n                        idx = getindex(i, j, ra, rb)\r\n                        if dp[idx] == -1:\r\n                            continue\r\n                        #red\r\n                        nra = (ra*10+c)%a\r\n                        nidx =getindex(i+1, j+1, nra, rb)\r\n                        dp[nidx] = idx\r\n                        #black\r\n                        nrb = (rb*10+c)%b\r\n                        nidx =getindex(i+1, j, ra, nrb)\r\n                        dp[nidx] = idx\r\n        bestj = 0\r\n        for j in range(1, n+1):\r\n            idx = getindex(n, j, 0, 0)\r\n            if dp[idx] != -1 and abs(j-(n-j)) < abs(bestj-(n-bestj)):\r\n                bestj = j\r\n        if bestj == 0:\r\n            print(-1)\r\n            continue\r\n        cur = n\r\n        j = bestj\r\n        ra = 0\r\n        rb = 0\r\n        ans = []\r\n        while cur > 0:\r\n            idx = getindex(cur, j, ra, rb)\r\n            pidx = dp[idx]\r\n            cur, r = divmod(pidx, (n+1)*a*b)\r\n            pj, r =  divmod(r, a*b)\r\n            ra, rb = divmod(r, b)\r\n            if pj == j-1:\r\n                ans.append('R')\r\n            else:\r\n                ans.append('B')\r\n            j = pj\r\n        ans.reverse()\r\n        print(''.join(ans))\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n",
    "prob_desc_created_at": "1634135700",
    "tags": [
        "dfs and similar",
        "dp",
        "implementation",
        "math",
        "meet-in-the-middle"
    ],
    "hidden_unit_tests": ""
}