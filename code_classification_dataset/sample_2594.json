{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"3 2 5 4\", \"2 1 4 1 6\", \"1 2 3\"]",
    "src_uid": "7d4899d03a804ed1bdd77a475169a580",
    "prob_desc_notes": null,
    "prob_desc_description": "Little Vasya had n boxes with balls in the room. The boxes stood in a row and were numbered with numbers from 1 to n from left to right.Once Vasya chose one of the boxes, let's assume that its number is i, took all balls out from it (it is guaranteed that this box originally had at least one ball), and began putting balls (one at a time) to the boxes with numbers i + 1, i + 2, i + 3 and so on. If Vasya puts a ball into the box number n, then the next ball goes to box 1, the next one goes to box 2 and so on. He did it until he had no balls left in his hands. It is possible that Vasya puts multiple balls to the same box, and it is also possible that one or more balls will go to the box number i. If i = n, Vasya puts the first ball into the box number 1, then the next ball goes to box 2 and so on. For example, let's suppose that initially Vasya had four boxes, and the first box had 3 balls, the second one had 2, the third one had 5 and the fourth one had 4 balls. Then, if i = 3, then Vasya will take all five balls out of the third box and put them in the boxes with numbers: 4, 1, 2, 3, 4. After all Vasya's actions the balls will lie in the boxes as follows: in the first box there are 4 balls, 3 in the second one, 1 in the third one and 6 in the fourth one.At this point Vasya has completely forgotten the original arrangement of the balls in the boxes, but he knows how they are arranged now, and the number x — the number of the box, where he put the last of the taken out balls.He asks you to help to find the initial arrangement of the balls in the boxes.",
    "prob_desc_output_spec": "Print n integers, where the i-th one represents the number of balls in the box number i before Vasya starts acting. Separate the numbers in the output by spaces. If there are multiple correct solutions, you are allowed to print any of them.",
    "prob_desc_input_spec": "The first line of the input contains two integers n and x (2 ≤ n ≤ 105, 1 ≤ x ≤ n), that represent the number of the boxes and the index of the box that got the last ball from Vasya, correspondingly. The second line contains n space-separated integers a1, a2, ..., an, where integer ai (0 ≤ ai ≤ 109, ax ≠ 0) represents the number of balls in the box with index i after Vasya completes all the actions.  Please, do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use the cin, cout streams or the %I64d specifier.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_025.jsonl",
    "code_uid": "62024b9c668f20ab3aa5b90210228e80",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4 4\\n4 3 1 6\", \"5 2\\n3 2 0 2 7\", \"3 3\\n2 3 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, x = map(int, input().split())\na = list(map(int, input().split()))\nidx = x % n\nfor j in range(x, x+n):\n    if a[j % n] <= a[idx]:\n        idx = j % n\ntemp = a[idx]\na[idx] += n * temp\na = [i - temp for i in a]\nj = idx + 1\nwhile j % n != x % n:\n    a[j % n] -= 1\n    j += 1\n    a[idx] += 1\nprint(*a)\n",
    "prob_desc_created_at": "1356622500",
    "tags": [
        "constructive algorithms",
        "implementation",
        "greedy"
    ],
    "hidden_unit_tests": ""
}