{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"YES\\nNO\\nYES\\nYES\\nNO\\nYES\"]",
    "src_uid": "e1481b9d940407da75e11355b580f459",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given an array $$$a$$$ of length $$$n$$$.You are also given a set of distinct positions $$$p_1, p_2, \\dots, p_m$$$, where $$$1 \\le p_i &lt; n$$$. The position $$$p_i$$$ means that you can swap elements $$$a[p_i]$$$ and $$$a[p_i + 1]$$$. You can apply this operation any number of times for each of the given positions.Your task is to determine if it is possible to sort the initial array in non-decreasing order ($$$a_1 \\le a_2 \\le \\dots \\le a_n$$$) using only allowed swaps.For example, if $$$a = [3, 2, 1]$$$ and $$$p = [1, 2]$$$, then we can first swap elements $$$a[2]$$$ and $$$a[3]$$$ (because position $$$2$$$ is contained in the given set $$$p$$$). We get the array $$$a = [3, 1, 2]$$$. Then we swap $$$a[1]$$$ and $$$a[2]$$$ (position $$$1$$$ is also contained in $$$p$$$). We get the array $$$a = [1, 3, 2]$$$. Finally, we swap $$$a[2]$$$ and $$$a[3]$$$ again and get the array $$$a = [1, 2, 3]$$$, sorted in non-decreasing order.You can see that if $$$a = [4, 1, 2, 3]$$$ and $$$p = [3, 2]$$$ then you cannot sort the array.You have to answer $$$t$$$ independent test cases.",
    "prob_desc_output_spec": "For each test case, print the answer — \"YES\" (without quotes) if you can sort the initial array in non-decreasing order ($$$a_1 \\le a_2 \\le \\dots \\le a_n$$$) using only allowed swaps. Otherwise, print \"NO\".",
    "prob_desc_input_spec": "The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases. Then $$$t$$$ test cases follow. The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le m &lt; n \\le 100$$$) — the number of elements in $$$a$$$ and the number of elements in $$$p$$$. The second line of the test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 100$$$). The third line of the test case contains $$$m$$$ integers $$$p_1, p_2, \\dots, p_m$$$ ($$$1 \\le p_i &lt; n$$$, all $$$p_i$$$ are distinct) — the set of positions described in the problem statement.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1200,
    "file_name": "train_003.jsonl",
    "code_uid": "9f6ca062f351e1f036104aae9822ecf7",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\n\ndef controlla(i):\n    global res, r,ultimo_ok\n    if res == False:\n        return\n    if i == 0:\n        controlla(ultimo_ok+1)\n        return\n    if r[i-1]<= r[i]:\n        if i == N-1:\n            \n            return\n        else:\n            ultimo_ok  = max(ultimo_ok,i)\n            controlla(ultimo_ok+1)\n    else:\n        if P[i-1] == 1:\n            a = r[i]\n            r[i] = r[i-1]\n            r[i-1] = a\n            controlla(i-1)\n        else:\n            res = False            \n            return\n\nsys.setrecursionlimit(10000)\n#sys.stdin = open(\"input.txt\")\nT = int(input())\nfor t in range(T):\n    N,M = map(int,input().split())\n    r = list(map(int, input().strip().split()))\n    p = list(map(int, input().strip().split()))\n    P = [-1] * N\n    for m in range(M):\n        a = p[m]\n        P[a-1] = 1\n   \n    res = True\n    ultimo_ok = 0\n    controlla(1)\n    if not res:\n        print (\"NO\")\n    else:\n        print(\"YES\")\n",
    "prob_desc_created_at": "1582554900",
    "tags": [
        "sortings",
        "dfs and similar"
    ],
    "hidden_unit_tests": ""
}