{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"3\", \"3\"]",
    "src_uid": "1312b680d43febdc7898ffb0753a9950",
    "prob_desc_notes": "NoteIn the first test the maximum non-decreasing subsegment is the numbers from the third to the fifth one.In the second test the maximum non-decreasing subsegment is the numbers from the first to the third one.",
    "prob_desc_description": "Kefa decided to make some money doing business on the Internet for exactly n days. He knows that on the i-th day (1 ≤ i ≤ n) he makes ai money. Kefa loves progress, that's why he wants to know the length of the maximum non-decreasing subsegment in sequence ai. Let us remind you that the subsegment of the sequence is its continuous fragment. A subsegment of numbers is called non-decreasing if all numbers in it follow in the non-decreasing order.Help Kefa cope with this task!",
    "prob_desc_output_spec": "Print a single integer — the length of the maximum non-decreasing subsegment of sequence a.",
    "prob_desc_input_spec": "The first line contains integer n (1 ≤ n ≤ 105). The second line contains n integers a1,  a2,  ...,  an (1 ≤ ai ≤ 109).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_006.jsonl",
    "code_uid": "d0c283e3ac91b5de25fc51e7da552da9",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n2 2 1 3 4 1\", \"3\\n2 2 9\"]",
    "exec_outcome": "PASSED",
    "source_code": "x=int(input())\ny=input()\ny=y.split()\nc=1\ncc=[]\nf=0\nk=0\nif x==1:\n\tprint('1')\nelse:\n\tfor i in range(len(y)-1):\n\t\tif int(y[i])<=int(y[i+1]):\n\t\t\tc=c+1\n\t\t\tf=1\n\t\t\tk=0\n\t\telse:\n\t\t\tf=0\n\t\t\tc=1\n\t\t\tk=1\n\t\t\n\t\tcc.append(c)\n\t#print (cc)\n\tif len(cc)==0 and k==1:\n\t\tprint(0)\n\telse:\n\t\tcc.sort()\n\t\tprint (cc[len(cc)-1])\n\n\n",
    "prob_desc_created_at": "1442939400",
    "tags": [
        "dp",
        "implementation",
        "brute force"
    ],
    "hidden_unit_tests": ""
}