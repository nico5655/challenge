{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"5\\n2\\n1\\n3\"]",
    "src_uid": "a28b84c9d1a54e322ab2d54bd5ab45c8",
    "prob_desc_notes": "NoteIn the first test case $$$n = 1$$$, so the array consists of one element $$$a_1$$$ and if we make $$$a_1 = 5$$$ it will be divisible by $$$k = 5$$$ and the minimum possible.In the second test case, we can create array $$$a = [1, 2, 1, 2]$$$. The sum is divisible by $$$k = 3$$$ and the maximum is equal to $$$2$$$.In the third test case, we can create array $$$a = [1, 1, 1, 1, 1, 1, 1, 1]$$$. The sum is divisible by $$$k = 8$$$ and the maximum is equal to $$$1$$$.",
    "prob_desc_description": "You are given two integers $$$n$$$ and $$$k$$$.You should create an array of $$$n$$$ positive integers $$$a_1, a_2, \\dots, a_n$$$ such that the sum $$$(a_1 + a_2 + \\dots + a_n)$$$ is divisible by $$$k$$$ and maximum element in $$$a$$$ is minimum possible.What is the minimum possible maximum element in $$$a$$$?",
    "prob_desc_output_spec": "For each test case, print one integer — the minimum possible maximum element in array $$$a$$$ such that the sum $$$(a_1 + \\dots + a_n)$$$ is divisible by $$$k$$$. ",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. The first and only line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 10^9$$$; $$$1 \\le k \\le 10^9$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_102.jsonl",
    "code_uid": "6bd59c9c0e2a869f240d45d4b287f4fe",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n1 5\\n4 3\\n8 8\\n8 17\"]",
    "exec_outcome": "PASSED",
    "source_code": "t = int(input())\r\nfor i in range(t):\r\n    n, k = list(map(int, input().split()))\r\n        \r\n    if k % n == 0:\r\n        print(k//n)\r\n        \r\n    elif n % k == 0:\r\n        print(1)\r\n        \r\n    else:\r\n        if k > n:\r\n            print((k//n) + 1) \r\n        elif k < n:\r\n            print(2)\r\n        else:\r\n            print(1)\r\n                \r\n        \r\n        \r\n",
    "prob_desc_created_at": "1611930900",
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}