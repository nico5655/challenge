{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"3.000000000000000\\n3.666666666666667\\n2.047619047619048\\n329737645.750000000000000\\n53.700000000000000\"]",
    "src_uid": "700cfc8d20794ca38d73ccff31e5292c",
    "prob_desc_notes": "NoteIn the first test case cars will meet in the coordinate $$$5$$$.The first car will be in the coordinate $$$1$$$ in $$$1$$$ second and after that its speed will increase by $$$1$$$ and will be equal to $$$2$$$ meters per second. After $$$2$$$ more seconds it will be in the coordinate $$$5$$$. So, it will be in the coordinate $$$5$$$ in $$$3$$$ seconds.The second car will be in the coordinate $$$9$$$ in $$$1$$$ second and after that its speed will increase by $$$1$$$ and will be equal to $$$2$$$ meters per second. After $$$2$$$ more seconds it will be in the coordinate $$$5$$$. So, it will be in the coordinate $$$5$$$ in $$$3$$$ seconds.In the second test case after $$$1$$$ second the first car will be in the coordinate $$$1$$$ and will have the speed equal to $$$2$$$ meters per second, the second car will be in the coordinate $$$9$$$ and will have the speed equal to $$$1$$$ meter per second. So, they will meet after $$$\\frac{9-1}{2+1} = \\frac{8}{3}$$$ seconds. So, the answer is equal to $$$1 + \\frac{8}{3} = \\frac{11}{3}$$$.",
    "prob_desc_description": "There is a road with length $$$l$$$ meters. The start of the road has coordinate $$$0$$$, the end of the road has coordinate $$$l$$$.There are two cars, the first standing at the start of the road and the second standing at the end of the road. They will start driving simultaneously. The first car will drive from the start to the end and the second car will drive from the end to the start.Initially, they will drive with a speed of $$$1$$$ meter per second. There are $$$n$$$ flags at different coordinates $$$a_1, a_2, \\ldots, a_n$$$. Each time when any of two cars drives through a flag, the speed of that car increases by $$$1$$$ meter per second.Find how long will it take for cars to meet (to reach the same coordinate). ",
    "prob_desc_output_spec": "For each test case print a single real number: the time required for cars to meet. Your answer will be considered correct, if its absolute or relative error does not exceed $$$10^{-6}$$$. More formally, if your answer is $$$a$$$ and jury's answer is $$$b$$$, your answer will be considered correct if $$$\\frac{|a-b|}{\\max{(1, b)}} \\leq 10^{-6}$$$.",
    "prob_desc_input_spec": "The first line contains one integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$): the number of test cases. The first line of each test case contains two integers $$$n$$$, $$$l$$$ ($$$1 \\leq n \\leq 10^5$$$, $$$1 \\leq l \\leq 10^9$$$): the number of flags and the length of the road. The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ in the increasing order ($$$1 \\leq a_1 &lt; a_2 &lt; \\ldots &lt; a_n &lt; l$$$). It is guaranteed that the sum of $$$n$$$ among all test cases does not exceed $$$10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1500,
    "file_name": "train_035.jsonl",
    "code_uid": "7c288c41453450f015d064cd8289f43b",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n2 10\\n1 9\\n1 10\\n1\\n5 7\\n1 2 3 4 6\\n2 1000000000\\n413470354 982876160\\n9 478\\n1 10 25 33 239 445 453 468 477\"]",
    "exec_outcome": "PASSED",
    "source_code": "for __ in range(int(input())):\n    n,l=map(int,input().split())\n    a=list(map(int,input().split()))\n    a.insert(0,0)\n    a.append(l)\n    i,j,va,vb,pra,prb,ta,tb=1,n,1,1,0,l,0,0\n    res,t=0,0\n    while True:\n        if abs(j-i)==0:\n            res=1\n        tempa=(a[i]-pra)/va\n        tempb=(prb-a[j])/vb\n        ta+=tempa\n        tb+=tempb\n        if ta<tb:\n            tb-=tempb\n            va+=1\n            pra=a[i]\n            i+=1\n        elif ta>tb:\n            ta-=tempa\n            vb+=1\n            prb=a[j]\n            j-=1\n        else:\n            va+=1\n            vb+=1\n            pra=a[i]\n            prb=a[j]\n            i+=1\n            j-=1\n            if i>j:\n                res=1\n        if res:\n            if ta>tb:\n                prb-=(ta-tb)*vb\n                print(ta+(abs(pra-prb)/(va+vb)))\n            elif ta==tb:\n                print(ta+(abs(pra-prb)/(va+vb)))\n            else:\n                pra+=(tb-ta)*va\n                print(tb+(abs(pra-prb)/(va+vb)))\n            break\n",
    "prob_desc_created_at": "1601476500",
    "tags": [
        "dp",
        "two pointers",
        "math",
        "implementation",
        "binary search"
    ],
    "hidden_unit_tests": ""
}