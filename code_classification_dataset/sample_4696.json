{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1\\n2\\n0\\n1\\n1\"]",
    "src_uid": "5ccef7fbfd5e85d7fc7ef92f9ebc4088",
    "prob_desc_notes": "NoteIn the first case, we need only one operation: change $$$a_1$$$ to $$$1-a_i$$$. Now $$$a = [0, 0]$$$ which is equal to $$$b$$$.In the second case, the optimal way is to rearrange $$$a$$$ to get the array $$$[0, 1, 11$$$. Now $$$a = [0, 0, 1]$$$ which is equal to $$$b$$$.In the second case, one of optimal ways would be to first change $$$a_3$$$ to $$$1 - a_3$$$, then rearrange $$$a$$$.In the third case, no operation is needed.In the fourth case, the optimal way is to rearrange $$$a$$$ to get the array $$$[0, 1, 1, 0]$$$.",
    "prob_desc_description": "You are given two arrays $$$a$$$ and $$$b$$$ of $$$n$$$ elements, each element is either $$$0$$$ or $$$1$$$.You can make operations of $$$2$$$ kinds.   Pick an index $$$i$$$ and change $$$a_i$$$ to $$$1-a_i$$$.  Rearrange the array $$$a$$$ however you want. Find the minimum number of operations required to make $$$a$$$ equal to $$$b$$$.",
    "prob_desc_output_spec": "For each test case, print the minimum number of operations required to make $$$a$$$ equal to $$$b$$$.",
    "prob_desc_input_spec": "Each test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 400$$$) — the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 100$$$) — the length of the arrays $$$a$$$ and $$$b$$$. The second line of each test case contains $$$n$$$ space-separated integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$a_i$$$ is $$$0$$$ or $$$1$$$), representing the array $$$a$$$. The third line of each test case contains $$$n$$$ space-separated integers $$$b_1,b_2,\\ldots,b_n$$$ ($$$b_i$$$ is $$$0$$$ or $$$1$$$), representing the array $$$b$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_103.jsonl",
    "code_uid": "4fe98c90ba7f1c78a61d026d6fa9d6c9",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n\\n3\\n\\n1 0 1\\n\\n0 0 1\\n\\n4\\n\\n1 1 0 0\\n\\n0 1 1 1\\n\\n2\\n\\n1 1\\n\\n1 1\\n\\n4\\n\\n1 0 0 1\\n\\n0 1 1 0\\n\\n1\\n\\n0\\n\\n1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\r\n\r\nfor i in range(n):\r\n    index = int(input())\r\n    a = list(map(int,input().split()))\r\n    b = list(map(int,input().split()))\r\n    \r\n    ans = abs(sum(a)-sum(b))\r\n    cnt = ans\r\n    for x in range(index):\r\n        if cnt <= 0:\r\n                break\r\n        if a[x] != b[x]:\r\n            a[x] = 1- a[x]\r\n            cnt -= 1\r\n            \r\n    if a == b:\r\n        print(ans)\r\n    else:\r\n        print(ans+1)",
    "prob_desc_created_at": "1665412500",
    "tags": [
        "brute force",
        "greedy",
        "sortings"
    ],
    "hidden_unit_tests": ""
}