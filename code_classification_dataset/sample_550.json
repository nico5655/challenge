{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"YES\", \"NO\"]",
    "src_uid": "cf86add6c92fa8a72b8e23efbdb38613",
    "prob_desc_notes": "NoteIn the first sample, the steps are as follows: 01011 → 1011 → 011 → 0110",
    "prob_desc_description": "You are fishing with polar bears Alice and Bob. While waiting for the fish to bite, the polar bears get bored. They come up with a game. First Alice and Bob each writes a 01-string (strings that only contain character \"0\" and \"1\") a and b. Then you try to turn a into b using two types of operations:  Write parity(a) to the end of a. For example, .  Remove the first character of a. For example, . You cannot perform this operation if a is empty. You can use as many operations as you want. The problem is, is it possible to turn a into b?The parity of a 01-string is 1 if there is an odd number of \"1\"s in the string, and 0 otherwise.",
    "prob_desc_output_spec": "Print \"YES\" (without quotes) if it is possible to turn a into b, and \"NO\" (without quotes) otherwise.",
    "prob_desc_input_spec": "The first line contains the string a and the second line contains the string b (1 ≤ |a|, |b| ≤ 1000). Both strings contain only the characters \"0\" and \"1\". Here |x| denotes the length of the string x.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_002.jsonl",
    "code_uid": "fe31b34b34844fa376d94e7d88cf5972",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"01011\\n0110\", \"0011\\n1110\"]",
    "exec_outcome": "PASSED",
    "source_code": "a=input()\nb=input()\ntot1=0\ntot2=0\nfor i in a:\n\ttot1+=int(i)\nfor i in b:\n\ttot2+=int(i)\nif tot1+tot1%2>=tot2:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")",
    "prob_desc_created_at": "1366385400",
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "number theory",
        "math"
    ],
    "hidden_unit_tests": ""
}