{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"0\\n2\\n3\\n-1\\n1\\n-1\\n3\\n1\\n3\\n-1\"]",
    "src_uid": "e3a1f53f78fcb3a551c3ae1cbeedaf15",
    "prob_desc_notes": "NoteIn the first example, the thermostat is already set up correctly.In the second example, you can achieve the desired temperature as follows: $$$4 \\rightarrow 10 \\rightarrow 5$$$.In the third example, you can achieve the desired temperature as follows: $$$3 \\rightarrow 8 \\rightarrow 2 \\rightarrow 7$$$.In the fourth test, it is impossible to make any operation.",
    "prob_desc_description": "Vlad came home and found out that someone had reconfigured the old thermostat to the temperature of $$$a$$$.The thermostat can only be set to a temperature from $$$l$$$ to $$$r$$$ inclusive, the temperature cannot change by less than $$$x$$$. Formally, in one operation you can reconfigure the thermostat from temperature $$$a$$$ to temperature $$$b$$$ if $$$|a - b| \\ge x$$$ and $$$l \\le b \\le r$$$.You are given $$$l$$$, $$$r$$$, $$$x$$$, $$$a$$$ and $$$b$$$. Find the minimum number of operations required to get temperature $$$b$$$ from temperature $$$a$$$, or say that it is impossible.",
    "prob_desc_output_spec": "Output $$$t$$$ numbers, each of which is the answer to the corresponding test case. If it is impossible to achieve the temperature $$$b$$$, output -1, otherwise output the minimum number of operations.",
    "prob_desc_input_spec": "The first line of input data contains the single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases in the test. The descriptions of the test cases follow. The first line of each case contains three integers $$$l$$$, $$$r$$$ and $$$x$$$ ($$$-10^9 \\le l \\le r \\le 10^9$$$, $$$1 \\le x \\le 10^9$$$) — range of temperature and minimum temperature change. The second line of each case contains two integers $$$a$$$ and $$$b$$$ ($$$l \\le a, b \\le r$$$) — the initial and final temperatures.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1100,
    "file_name": "train_086.jsonl",
    "code_uid": "fb041dd0b2527dd1b365e9aeaa194558",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"10\\n\\n3 5 6\\n\\n3 3\\n\\n0 15 5\\n\\n4 5\\n\\n0 10 5\\n\\n3 7\\n\\n3 5 6\\n\\n3 4\\n\\n-10 10 11\\n\\n-5 6\\n\\n-3 3 4\\n\\n1 0\\n\\n-5 10 8\\n\\n9 2\\n\\n1 5 1\\n\\n2 5\\n\\n-1 4 3\\n\\n0 2\\n\\n-6 3 6\\n\\n-1 -4\"]",
    "exec_outcome": "PASSED",
    "source_code": "R=lambda:map(int,input().split())\nt,=R()\nwhile t:t-=1;l,r,x=R();a,b=sorted(R());print('0'*(a==b)or+(b-a>=x)or(x<=max(a-l,r-b))*2or(r-a>=x<=b-l)*3or-1)",
    "prob_desc_created_at": "1668782100",
    "tags": [
        "greedy",
        "math",
        "shortest paths"
    ],
    "hidden_unit_tests": ""
}