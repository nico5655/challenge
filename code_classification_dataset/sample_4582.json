{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"-1\\n1\\n2\\n1\\n2\\n36\"]",
    "src_uid": "f3e413954c9c02520fd25bd2cba4747e",
    "prob_desc_notes": "NoteIn the third case, $$$4100 = 2050 + 2050$$$.In the fifth case, $$$22550 = 20500 + 2050$$$.",
    "prob_desc_description": "A number is called 2050-number if it is $$$2050$$$, $$$20500$$$, ..., ($$$2050 \\cdot 10^k$$$ for integer $$$k \\ge 0$$$).Given a number $$$n$$$, you are asked to represent $$$n$$$ as the sum of some (not necessarily distinct) 2050-numbers. Compute the minimum number of 2050-numbers required for that.",
    "prob_desc_output_spec": "For each test case, output the minimum number of 2050-numbers in one line.  If $$$n$$$ cannot be represented as the sum of 2050-numbers, output $$$-1$$$ instead. ",
    "prob_desc_input_spec": "The first line contains a single integer $$$T$$$ ($$$1\\le T\\leq 1\\,000$$$) denoting the number of test cases. The only line of each test case contains a single integer $$$n$$$ ($$$1\\le n\\le 10^{18}$$$) denoting the number to be represented.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_101.jsonl",
    "code_uid": "0ec72625a943261675a4690af2d46e07",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n205\\n2050\\n4100\\n20500\\n22550\\n25308639900\"]",
    "exec_outcome": "PASSED",
    "source_code": "for _ in range(int(input())):\n    n = int(input())\n    a = n//2050\n\n    if n%2050 != 0:\n        print(-1)\n        continue\n\n    sum = 0\n    for i in str(a):\n        sum += int(i)\n\n    if sum:\n        print(sum)\n    else:\n        print(-1)",
    "prob_desc_created_at": "1619188500",
    "tags": [
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}