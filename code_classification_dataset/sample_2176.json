{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"17\", \"71\"]",
    "src_uid": "bc6b8fda79c257e6c4e280d7929ed8a1",
    "prob_desc_notes": "NoteThis image describes first sample case:It is easy to see that summary price is equal to 17.This image describes second sample case:It is easy to see that summary price is equal to 71.",
    "prob_desc_description": "Little Mishka is a great traveller and she visited many countries. After thinking about where to travel this time, she chose XXX — beautiful, but little-known northern country.Here are some interesting facts about XXX:  XXX consists of n cities, k of whose (just imagine!) are capital cities.  All of cities in the country are beautiful, but each is beautiful in its own way. Beauty value of i-th city equals to ci.  All the cities are consecutively connected by the roads, including 1-st and n-th city, forming a cyclic route 1 — 2 — ... — n — 1. Formally, for every 1 ≤ i &lt; n there is a road between i-th and i + 1-th city, and another one between 1-st and n-th city.  Each capital city is connected with each other city directly by the roads. Formally, if city x is a capital city, then for every 1 ≤ i ≤ n,  i ≠ x, there is a road between cities x and i.  There is at most one road between any two cities.  Price of passing a road directly depends on beauty values of cities it connects. Thus if there is a road between cities i and j, price of passing it equals ci·cj.Mishka started to gather her things for a trip, but didn't still decide which route to follow and thus she asked you to help her determine summary price of passing each of the roads in XXX. Formally, for every pair of cities a and b (a &lt; b), such that there is a road between a and b you are to find sum of products ca·cb. Will you help her?",
    "prob_desc_output_spec": "Print the only integer — summary price of passing each of the roads in XXX.",
    "prob_desc_input_spec": "The first line of the input contains two integers n and k (3 ≤ n ≤ 100 000, 1 ≤ k ≤ n) — the number of cities in XXX and the number of capital cities among them. The second line of the input contains n integers c1, c2, ..., cn (1 ≤ ci ≤ 10 000) — beauty values of the cities. The third line of the input contains k distinct integers id1, id2, ..., idk (1 ≤ idi ≤ n) — indices of capital cities. Indices are given in ascending order.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1400,
    "file_name": "train_018.jsonl",
    "code_uid": "65e3138e770d1b3537a3e0c6f9834dac",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4 1\\n2 3 1 2\\n3\", \"5 2\\n3 5 2 2 4\\n1 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, k = [int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\nids = [(int(x)-1) for x in input().split()]\n\ns = sum(c)\nans = 0\nfor i in range(n):\n  ans += (c[i] * c[(i+1)%n])\nfor i in range(k):\n  if (abs(ids[i] - ids[(i+1)%k]) == 1) or (ids[i] == n-1 and ids[0] == 0):\n    ans += c[ids[i]]*c[ids[(i+1)%k]]\ntemp = 0\nfor i in range(k):\n  ans += c[ids[i]] * (s - c[(ids[i]-1)%n] - c[(ids[i]+1)%n] - c[ids[i]])\n  ans -= c[ids[i]]*temp\n  temp += c[ids[i]]\n  \n\nprint(repr(ans))\n",
    "prob_desc_created_at": "1470323700",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}