{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"2\\n1 3\\n1 2\", \"2\\n2 4\\n2 3\", \"0\"]",
    "src_uid": "ff1423b6d0a60e4e3461c30b730dba57",
    "prob_desc_notes": "NoteIn the first sample test case the array will change in this order $$$[3,1,2] \\rightarrow [2,1,3] \\rightarrow [1,2,3]$$$.In the second sample test case it will be $$$[1,8,1,6] \\rightarrow [1,6,1,8] \\rightarrow [1,1,6,8]$$$.In the third sample test case the array is already sorted.",
    "prob_desc_description": "Madeline has an array $$$a$$$ of $$$n$$$ integers. A pair $$$(u, v)$$$ of integers forms an inversion in $$$a$$$ if:  $$$1 \\le u &lt; v \\le n$$$.  $$$a_u &gt; a_v$$$. Madeline recently found a magical paper, which allows her to write two indices $$$u$$$ and $$$v$$$ and swap the values $$$a_u$$$ and $$$a_v$$$. Being bored, she decided to write a list of pairs $$$(u_i, v_i)$$$ with the following conditions:  all the pairs in the list are distinct and form an inversion in $$$a$$$.  all the pairs that form an inversion in $$$a$$$ are in the list.  Starting from the given array, if you swap the values at indices $$$u_1$$$ and $$$v_1$$$, then the values at indices $$$u_2$$$ and $$$v_2$$$ and so on, then after all pairs are processed, the array $$$a$$$ will be sorted in non-decreasing order. Construct such a list or determine that no such list exists. If there are multiple possible answers, you may find any of them.",
    "prob_desc_output_spec": "Print -1 if no such list exists. Otherwise in the first line you should print a single integer $$$m$$$ ($$$0 \\le m \\le \\dfrac{n(n-1)}{2}$$$) — number of pairs in the list. The $$$i$$$-th of the following $$$m$$$ lines should contain two integers $$$u_i, v_i$$$ ($$$1 \\le u_i &lt; v_i\\le n$$$). If there are multiple possible answers, you may find any of them.",
    "prob_desc_input_spec": "The first line of the input contains a single integer $$$n$$$ ($$$1 \\le n \\le 1000$$$) — the length of the array. Next line contains $$$n$$$ integers $$$a_1,a_2,...,a_n$$$ $$$(1 \\le a_i \\le 10^9)$$$  — elements of the array.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 2500,
    "file_name": "train_014.jsonl",
    "code_uid": "9fa4ac57d588cc56fd4005b250b4eb75",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n3 1 2\", \"4\\n1 8 1 6\", \"5\\n1 1 1 2 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "input()\na=list(map(int,input().split()))\nb=sorted((i,-a[j],-j)for j in range(len(a))for i in range(j)if a[i]>a[j])\nprint(len(b))\nfor i,j,k in b:print(i+1,-k+1)",
    "prob_desc_created_at": "1593873900",
    "tags": [
        "constructive algorithms",
        "sortings",
        "greedy"
    ],
    "hidden_unit_tests": ""
}