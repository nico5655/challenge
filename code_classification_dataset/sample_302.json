{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"47\", \"-1\"]",
    "src_uid": "2584fa8c1adb1aa8cd5c28a8610ff72d",
    "prob_desc_notes": null,
    "prob_desc_description": "Petya loves lucky numbers. We all know that lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.Petya wonders eagerly what minimum lucky number has the sum of digits equal to n. Help him cope with the task.",
    "prob_desc_output_spec": "Print on the single line the result — the minimum lucky number, whose sum of digits equals n. If such number does not exist, print -1.",
    "prob_desc_input_spec": "The single line contains an integer n (1 ≤ n ≤ 106) — the sum of digits of the required lucky number.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_001.jsonl",
    "code_uid": "fc8d717613489ee11873b4daa5395a03",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"11\", \"10\"]",
    "exec_outcome": "PASSED",
    "source_code": "v = int(input())\n\ny = v\n\ncount_4 = 0\ncount_7 = 0\n\nwhile(y > 0):\n\tif (y % 7 == 0):\n\t\tcount_7+=1\n\t\ty = y -7\n\telif(y % 4 == 0):\n\t\tcount_4+=1\n\t\ty = y - 4\t\n\telse:\n\t\tcount_7+=1\n\t\ty = y-7\n\ntotal = (4*count_4 + 7 * count_7)\n\nif (total == v):\n\tprint((\"4\"*count_4) + \"7\"*count_7)\n\nelse:\n\tprint(-1)\n",
    "prob_desc_created_at": "1314633600",
    "tags": [
        "implementation",
        "brute force"
    ],
    "hidden_unit_tests": ""
}