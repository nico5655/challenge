{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1 2 3\", \"2 1 3\", \"4 1 2\"]",
    "src_uid": "3cdd85f86c77afd1d3b0d1e951a83635",
    "prob_desc_notes": "NoteIn first sample test vertices of regular triangle can create only angle of 60 degrees, that's why every possible angle is correct.Vertices of square can create 45 or 90 degrees angles only. That's why in second sample test the angle of 45 degrees was chosen, since |45 - 67| &lt; |90 - 67|. Other correct answers are: \"3 1 2\", \"3 2 4\", \"4 2 3\", \"4 3 1\", \"1 3 4\", \"1 4 2\", \"2 4 1\", \"4 1 3\", \"3 1 4\", \"3 4 2\", \"2 4 3\", \"2 3 1\", \"1 3 2\", \"1 2 4\", \"4 2 1\".In third sample test, on the contrary, the angle of 90 degrees was chosen, since |90 - 68| &lt; |45 - 68|. Other correct answers are: \"2 1 4\", \"3 2 1\", \"1 2 3\", \"4 3 2\", \"2 3 4\", \"1 4 3\", \"3 4 1\".",
    "prob_desc_description": "On one quiet day all of sudden Mister B decided to draw angle a on his field. Aliens have already visited his field and left many different geometric figures on it. One of the figures is regular convex n-gon (regular convex polygon with n sides).That's why Mister B decided to use this polygon. Now Mister B must find three distinct vertices v1, v2, v3 such that the angle  (where v2 is the vertex of the angle, and v1 and v3 lie on its sides) is as close as possible to a. In other words, the value  should be minimum possible.If there are many optimal solutions, Mister B should be satisfied with any of them.",
    "prob_desc_output_spec": "Print three space-separated integers: the vertices v1, v2, v3, which form . If there are multiple optimal solutions, print any of them. The vertices are numbered from 1 to n in clockwise order.",
    "prob_desc_input_spec": "First and only line contains two space-separated integers n and a (3 ≤ n ≤ 105, 1 ≤ a ≤ 180) — the number of vertices in the polygon and the needed angle, in degrees.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_034.jsonl",
    "code_uid": "b187677178f990618f073a8662744b74",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3 15\", \"4 67\", \"4 68\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin, stdout\n\nn, a = map(int, stdin.readline().split())\nans = 180 * (n - 2) / n\nf, s, t = 1, 2, 3\n\ndif = 180 / n\ncnt = dif\n\nfor i in range(n - 2):\n    if abs(a - ans) > abs(a - cnt):\n        ans = cnt\n        f, s, t = 2, 1, 3 + i\n    \n    cnt += dif\n\n\nstdout.write(str(f) + ' ' + str(s) + ' ' + str(t))",
    "prob_desc_created_at": "1498574100",
    "tags": [
        "constructive algorithms",
        "geometry",
        "math"
    ],
    "hidden_unit_tests": ""
}