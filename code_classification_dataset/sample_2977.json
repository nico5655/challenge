{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2.500000000000\", \"8.965874696353\"]",
    "src_uid": "de8c909d6ca4f3b2f885fc60be246458",
    "prob_desc_notes": null,
    "prob_desc_description": "Everybody knows that the capital of Berland is connected to Bercouver (the Olympic capital) by a direct road. To improve the road's traffic capacity, there was placed just one traffic sign, limiting the maximum speed. Traffic signs in Berland are a bit peculiar, because they limit the speed only at that point on the road where they are placed. Right after passing the sign it is allowed to drive at any speed.It is known that the car of an average Berland citizen has the acceleration (deceleration) speed of a km/h2, and has maximum speed of v km/h. The road has the length of l km, and the speed sign, limiting the speed to w km/h, is placed d km (1 ≤ d &lt; l) away from the capital of Berland. The car has a zero speed at the beginning of the journey. Find the minimum time that an average Berland citizen will need to get from the capital to Bercouver, if he drives at the optimal speed.The car can enter Bercouver at any speed.",
    "prob_desc_output_spec": "Print the answer with at least five digits after the decimal point.",
    "prob_desc_input_spec": "The first line of the input file contains two integer numbers a and v (1 ≤ a, v ≤ 10000). The second line contains three integer numbers l, d and w (2 ≤ l ≤ 10000; 1 ≤ d &lt; l; 1 ≤ w ≤ 10000).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 2100,
    "file_name": "train_037.jsonl",
    "code_uid": "a29722ae1c580779256ef761736a41cb",
    "prob_desc_memory_limit": "64 megabytes",
    "prob_desc_sample_inputs": "[\"1 1\\n2 1 3\", \"5 70\\n200 170 40\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\ndef getfloats(): return map(float, raw_input().split())\n\ndef calc(v0, v, a, x):\n\tt = (v - v0) / a\n\tx0 = v0 * t + 0.5 * a * t * t\n\tif x0 > x: return (x, (math.sqrt(v0 * v0 + 2 * a * x) - v0) / a)\n\treturn (x0, t)\n\ndef go(v0, v, a, x):\n\tx0, t = calc(v0, v, a, x)\n\treturn t + (x - x0) / v\n\na, v = getfloats()\nl, d, w = getfloats()\nif w > v: w = v\n\nx, t = calc(0, w, a, d)\nif x == d: print go(0, v, a, l)\nelse: print t + go(w, v, a, (d - x) * 0.5) * 2 + go(w, v, a, l - d)",
    "prob_desc_created_at": "1269100800",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}