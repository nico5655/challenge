{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1 47\\n0 0\\n10 55\"]",
    "src_uid": "ce0579e9c5b4c157bc89103c76ddd4c3",
    "prob_desc_notes": null,
    "prob_desc_description": "Vlad, like everyone else, loves to sleep very much.Every day Vlad has to do $$$n$$$ things, each at a certain time. For each of these things, he has an alarm clock set, the $$$i$$$-th of them is triggered on $$$h_i$$$ hours $$$m_i$$$ minutes every day ($$$0 \\le h_i &lt; 24, 0 \\le m_i &lt; 60$$$). Vlad uses the $$$24$$$-hour time format, so after $$$h=12, m=59$$$ comes $$$h=13, m=0$$$ and after $$$h=23, m=59$$$ comes $$$h=0, m=0$$$.This time Vlad went to bed at $$$H$$$ hours $$$M$$$ minutes ($$$0 \\le H &lt; 24, 0 \\le M &lt; 60$$$) and asks you to answer: how much he will be able to sleep until the next alarm clock.If any alarm clock rings at the time when he went to bed, then he will sleep for a period of time of length $$$0$$$.",
    "prob_desc_output_spec": "Output $$$t$$$ lines, each containing the answer to the corresponding test case. As an answer, output two numbers  — the number of hours and minutes that Vlad will sleep, respectively. If any alarm clock rings at the time when he went to bed, the answer will be 0 0.",
    "prob_desc_input_spec": "The first line of input data contains an integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases in the test. The first line of the case contains three integers $$$n$$$, $$$H$$$ and $$$M$$$ ($$$1 \\le n \\le 10, 0 \\le H &lt; 24, 0 \\le M &lt; 60$$$) — the number of alarms and the time Vlad went to bed. The following $$$n$$$ lines contain two numbers each $$$h_i$$$ and $$$m_i$$$ ($$$0 \\le h_i &lt; 24, 0 \\le m_i &lt; 60$$$) — the time of the $$$i$$$ alarm. It is acceptable that two or more alarms will trigger at the same time. Numbers describing time do not contain leading zeros.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_102.jsonl",
    "code_uid": "97358b6fc7d4ce2cb3c167e9a631fafd",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n\\n1 6 13\\n\\n8 0\\n\\n3 6 0\\n\\n12 30\\n\\n14 45\\n\\n6 0\\n\\n2 23 35\\n\\n20 15\\n\\n10 30\"]",
    "exec_outcome": "PASSED",
    "source_code": "tt = int(input())\n\nfor i in range(0, tt):\n    \n    n_a, v_h, v_m = input().split(' ')\n    v_h = int(v_h)\n    v_m = int(v_m)\n\n    ans = []\n    f = False\n    v_t = v_h * 60 + v_m\n    d_cycle = 60 * 24\n\n\n\n    for i in range(0, int(n_a)):\n        al_h, al_m = input().split(' ')\n\n        al_h = int(al_h)\n        al_m = int(al_m)\n\n        dt = (al_h * 60 + al_m) - v_t\n        if(dt == 0):\n            f = True\n        if(dt < 0):\n            dt = dt + d_cycle\n            ans.append(dt)\n        else:\n            ans.append(dt)\n\n            \n    if(f):\n        print(\"0 0\")\n    else:\n        m = 2 ** 32\n        for i in range(0, len(ans)):\n            if(ans[i] < m):\n                m = ans[i]\n        print(m//60,m%60)\n\n",
    "prob_desc_created_at": "1659364500",
    "tags": [
        "implementation",
        "math"
    ],
    "hidden_unit_tests": ""
}