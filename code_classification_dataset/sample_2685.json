{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"-1\\n57\\n239\\n6789\"]",
    "src_uid": "43996d7e052aa628a46d03086f9c5436",
    "prob_desc_notes": "NoteIn the first test case, there are no possible solutions for $$$s$$$ consisting of one digit, because any such solution is divisible by itself.For the second test case, the possible solutions are: $$$23$$$, $$$27$$$, $$$29$$$, $$$34$$$, $$$37$$$, $$$38$$$, $$$43$$$, $$$46$$$, $$$47$$$, $$$49$$$, $$$53$$$, $$$54$$$, $$$56$$$, $$$57$$$, $$$58$$$, $$$59$$$, $$$67$$$, $$$68$$$, $$$69$$$, $$$73$$$, $$$74$$$, $$$76$$$, $$$78$$$, $$$79$$$, $$$83$$$, $$$86$$$, $$$87$$$, $$$89$$$, $$$94$$$, $$$97$$$, and $$$98$$$.For the third test case, one possible solution is $$$239$$$ because $$$239$$$ is not divisible by $$$2$$$, $$$3$$$ or $$$9$$$ and has three digits (none of which equals zero).",
    "prob_desc_description": "You are given a integer $$$n$$$ ($$$n &gt; 0$$$). Find any integer $$$s$$$ which satisfies these conditions, or report that there are no such numbers:In the decimal representation of $$$s$$$:   $$$s &gt; 0$$$,  $$$s$$$ consists of $$$n$$$ digits,  no digit in $$$s$$$ equals $$$0$$$,  $$$s$$$ is not divisible by any of it's digits. ",
    "prob_desc_output_spec": "For each test case, print an integer $$$s$$$ which satisfies the conditions described above, or \"-1\" (without quotes), if no such number exists. If there are multiple possible solutions for $$$s$$$, print any solution.",
    "prob_desc_input_spec": "The input consists of multiple test cases. The first line of the input contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 400$$$), the number of test cases. The next $$$t$$$ lines each describe a test case. Each test case contains one positive integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$). It is guaranteed that the sum of $$$n$$$ for all test cases does not exceed $$$10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1000,
    "file_name": "train_028.jsonl",
    "code_uid": "b94cdc8499c8864743e9d23a8468a2ab",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n1\\n2\\n3\\n4\"]",
    "exec_outcome": "PASSED",
    "source_code": "# def check(n):\n#     strng = str(n)\n#     if not(\"0\" in strng or \"1\" in strng):\n#         if n%2 != 0 and n%3 != 0 and n%5 !=0 and n%7 != 0 :\n#             return True\n#     return False\n\n\ndef solve(n):\n    if n<2:\n        return -1\n    first = \"3\"*(n-1)+\"7\"\n    if int(first)%7 != 0:\n        return first\n    else :\n        return first[:-2]+\"77\"\n\n\n\n\n\ndef main():\n    t= int(input().strip())\n    while t:\n        n = int(input().strip())\n        print(solve(n))\n        t-=1\n\n\nif __name__ == '__main__':\n    main()\n",
    "prob_desc_created_at": "1584628500",
    "tags": [
        "constructive algorithms",
        "number theory"
    ],
    "hidden_unit_tests": ""
}