{
    "prob_desc_time_limit": "1.5 seconds",
    "prob_desc_sample_outputs": "[\"3\\n0\\n0\\n-1\\n1\\n3\"]",
    "src_uid": "dc67f1ad9d93ce83cd83f09fa4842ad4",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given a sequence $$$a$$$ consisting of $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$, and an integer $$$x$$$. Your task is to make the sequence $$$a$$$ sorted (it is considered sorted if the condition $$$a_1 \\le a_2 \\le a_3 \\le \\dots \\le a_n$$$ holds).To make the sequence sorted, you may perform the following operation any number of times you want (possibly zero): choose an integer $$$i$$$ such that $$$1 \\le i \\le n$$$ and $$$a_i &gt; x$$$, and swap the values of $$$a_i$$$ and $$$x$$$.For example, if $$$a = [0, 2, 3, 5, 4]$$$, $$$x = 1$$$, the following sequence of operations is possible:  choose $$$i = 2$$$ (it is possible since $$$a_2 &gt; x$$$), then $$$a = [0, 1, 3, 5, 4]$$$, $$$x = 2$$$;  choose $$$i = 3$$$ (it is possible since $$$a_3 &gt; x$$$), then $$$a = [0, 1, 2, 5, 4]$$$, $$$x = 3$$$;  choose $$$i = 4$$$ (it is possible since $$$a_4 &gt; x$$$), then $$$a = [0, 1, 2, 3, 4]$$$, $$$x = 5$$$. Calculate the minimum number of operations you have to perform so that $$$a$$$ becomes sorted, or report that it is impossible.",
    "prob_desc_output_spec": "For each test case, print one integer — the minimum number of operations you have to perform to make $$$a$$$ sorted, or $$$-1$$$, if it is impossible.",
    "prob_desc_input_spec": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 500$$$) — the number of test cases. Each test case consists of two lines. The first line contains two integers $$$n$$$ and $$$x$$$ ($$$1 \\le n \\le 500$$$, $$$0 \\le x \\le 500$$$) — the number of elements in the sequence and the initial value of $$$x$$$. The second line contains $$$n$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$ ($$$0 \\le a_i \\le 500$$$). The sum of values of $$$n$$$ over all test cases in the input does not exceed $$$500$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": null,
    "file_name": "train_009.jsonl",
    "code_uid": "d8649534e212276bf4466e4fe4fa43e7",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"6\\n4 1\\n2 3 5 4\\n5 6\\n1 1 3 4 4\\n1 10\\n2\\n2 10\\n11 9\\n2 10\\n12 11\\n5 18\\n81 324 218 413 324\"]",
    "exec_outcome": "PASSED",
    "source_code": "for _ in range(int(input())):\n    n, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    for i in range(1, n):\n        if A[i] < A[i - 1]: break\n    else:\n        print(0)\n        continue\n    ans = float(\"inf\")\n    for i in range(n):\n        if A[i] <= x: continue\n        cur = x\n        B = A.copy()\n        B[i] = x\n        B.sort()\n        cnt = 0\n        for j in range(n):\n            if A[j] == B[j]: continue\n            if A[j] <= cur or A[j] > cur and j and cur < B[j - 1]: break\n            cur = A[j]\n            cnt += 1\n        else:\n            ans = min(ans, cnt)\n    print(ans if ans < float(\"inf\") else -1)",
    "prob_desc_created_at": "1606746900",
    "tags": [
        "dp",
        "sortings",
        "greedy"
    ],
    "hidden_unit_tests": ""
}