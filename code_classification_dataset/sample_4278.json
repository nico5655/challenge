{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"0\\n2\\n3\"]",
    "src_uid": "55a1e9236cac9a6044e74b1975331535",
    "prob_desc_notes": "NoteIn the first example, the array $$$a$$$ is already lexicographically smaller than array $$$b$$$, so no operations are required.In the second example, we can swap $$$5$$$ and $$$3$$$ and then swap $$$2$$$ and $$$4$$$, which results in $$$[3, 5, 1]$$$ and $$$[4, 2, 6]$$$. Another correct way is to swap $$$3$$$ and $$$1$$$ and then swap $$$5$$$ and $$$1$$$, which results in $$$[1, 5, 3]$$$ and $$$[2, 4, 6]$$$. Yet another correct way is to swap $$$4$$$ and $$$6$$$ and then swap $$$2$$$ and $$$6$$$, which results in $$$[5, 3, 1]$$$ and $$$[6, 2, 4]$$$.",
    "prob_desc_description": "You are given two arrays $$$a$$$ and $$$b$$$ of length $$$n$$$. Array $$$a$$$ contains each odd integer from $$$1$$$ to $$$2n$$$ in an arbitrary order, and array $$$b$$$ contains each even integer from $$$1$$$ to $$$2n$$$ in an arbitrary order.You can perform the following operation on those arrays:   choose one of the two arrays  pick an index $$$i$$$ from $$$1$$$ to $$$n-1$$$  swap the $$$i$$$-th and the $$$(i+1)$$$-th elements of the chosen array  Compute the minimum number of operations needed to make array $$$a$$$ lexicographically smaller than array $$$b$$$.For two different arrays $$$x$$$ and $$$y$$$ of the same length $$$n$$$, we say that $$$x$$$ is lexicographically smaller than $$$y$$$ if in the first position where $$$x$$$ and $$$y$$$ differ, the array $$$x$$$ has a smaller element than the corresponding element in $$$y$$$.",
    "prob_desc_output_spec": "For each test case, print one integer: the minimum number of operations needed to make array $$$a$$$ lexicographically smaller than array $$$b$$$. We can show that an answer always exists.",
    "prob_desc_input_spec": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$) — the length of the arrays. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 2n$$$, all $$$a_i$$$ are odd and pairwise distinct) — array $$$a$$$. The third line of each test case contains $$$n$$$ integers $$$b_1, b_2, \\ldots, b_n$$$ ($$$1 \\le b_i \\le 2n$$$, all $$$b_i$$$ are even and pairwise distinct) — array $$$b$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1400,
    "file_name": "train_094.jsonl",
    "code_uid": "0dcf69ba8089e25a71c821af0844c4e1",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n2\\n3 1\\n4 2\\n3\\n5 3 1\\n2 4 6\\n5\\n7 5 9 1 3\\n2 4 6 10 8\"]",
    "exec_outcome": "PASSED",
    "source_code": "def get_input():\r\n    al = []\r\n    for c in range(int(input())):\r\n        input()\r\n        a = [int(i) for i in input().split(\" \")]\r\n        b = [int(i) for i in input().split(\" \")]\r\n        al.append([a,b])\r\n    return al\r\ndef solve(a,b):\r\n    j = 1\r\n    di = {}\r\n    for i in range(len(a)):\r\n        while j < b[i]:\r\n            di[j] = i\r\n            j+=2\r\n    ans = 2*len(a) + 1\r\n    for i in range(len(a)):\r\n        ans = min(ans, i + di[a[i]])\r\n    return ans\r\n\r\n            \r\ndef main():\r\n    arr_list = get_input()\r\n    for a,b in arr_list:\r\n        r = solve(a,b)\r\n        print(r)\r\nmain()",
    "prob_desc_created_at": "1631975700",
    "tags": [
        "greedy",
        "math",
        "sortings"
    ],
    "hidden_unit_tests": ""
}