{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"unique\\n5\", \"not unique\"]",
    "src_uid": "bfbd7a73e65d240ee7e8c83cc68ca0a1",
    "prob_desc_notes": "NoteIn the second example the answer is not unique. For example, if α = 10, we'll have such a sequence as 1, 2, 3, and if α = 14, the sequence will be 1, 2, 4.",
    "prob_desc_description": "Every year a race takes place on the motorway between cities A and B. This year Vanya decided to take part in the race and drive his own car that has been around and bears its own noble name — The Huff-puffer.So, Vasya leaves city A on the Huff-puffer, besides, at the very beginning he fills the petrol tank with α liters of petrol (α ≥ 10 is Vanya's favorite number, it is not necessarily integer). Petrol stations are located on the motorway at an interval of 100 kilometers, i.e. the first station is located 100 kilometers away from the city A, the second one is 200 kilometers away from the city A, the third one is 300 kilometers away from the city A and so on. The Huff-puffer spends 10 liters of petrol every 100 kilometers. Vanya checks the petrol tank every time he passes by a petrol station. If the petrol left in the tank is not enough to get to the next station, Vanya fills the tank with α liters of petrol. Otherwise, he doesn't stop at the station and drives on. For example, if α = 43.21, then the car will be fuelled up for the first time at the station number 4, when there'll be 3.21 petrol liters left. After the fuelling up the car will have 46.42 liters. Then Vanya stops at the station number 8 and ends up with 6.42 + 43.21 = 49.63 liters. The next stop is at the station number 12, 9.63 + 43.21 = 52.84. The next stop is at the station number 17 and so on. You won't believe this but the Huff-puffer has been leading in the race! Perhaps it is due to unexpected snow. Perhaps it is due to video cameras that have been installed along the motorway which register speed limit breaking. Perhaps it is due to the fact that Vanya threatened to junk the Huff-puffer unless the car wins. Whatever the reason is, the Huff-puffer is leading, and jealous people together with other contestants wrack their brains trying to think of a way to stop that outrage.One way to do this is to mine the next petrol station where Vanya will stop. Your task is to calculate at which station this will happen and warn Vanya. You don't know the α number, however, you are given the succession of the numbers of the stations where Vanya has stopped. Find the number of the station where the next stop will be.",
    "prob_desc_output_spec": "Print in the first line \"unique\" (without quotes) if the answer can be determined uniquely. In the second line print the number of the station where the next stop will take place. If the answer is not unique, print in the first line \"not unique\".",
    "prob_desc_input_spec": "The first line contains an integer n (1 ≤ n ≤ 1000) which represents the number of petrol stations where Vanya has stopped. The next line has n space-separated integers which represent the numbers of the stations. The numbers are positive and do not exceed 106, they are given in the increasing order. No two numbers in the succession match. It is guaranteed that there exists at least one number α ≥ 10, to which such a succession of stops corresponds.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1800,
    "file_name": "train_006.jsonl",
    "code_uid": "e6c9662e1079a38a6394080ee9d5b85e",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n1 2 4\", \"2\\n1 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "I = lambda: map(int, raw_input().split())\n\nn = input()\nS = [None]*n\nS = I()\n#print S\ncounter = 1\ndecr = 0\nalpha = 0.0\nlower = 0.0\n\nfor i in xrange(n):\n    if(i == 0):\n        alpha = 10*S[0]+10\n        decr = 10*S[0]\n        counter += 1\n    else:\n        decr = 10*(S[i]-S[i-1]) + decr\n        alpha = min(alpha,(decr + 10 )/float (counter))\n        #print \" alpha = \" , alpha\n        if S[i]-1 != S[i-1]:\n            lower = max(lower, ( decr )/float (counter))\n            #print \"lower = \", lower\n        counter += 1\n\nalpha = alpha - 0.0000000001\nif lower == 0.0 : lower = 10.0\n\n#print \" alpha = \" , alpha\n\nfuel = counter*alpha - decr\nleast = counter*lower - decr\n#print fuel , least\n\nif int(fuel)/10 == int(least)/10 :\n    print \"unique\"\n    print S[n-1]+ int(fuel)/10\nelse:\n    print \"not unique\"\n        \n",
    "prob_desc_created_at": "1292140800",
    "tags": [
        "math"
    ],
    "hidden_unit_tests": ""
}