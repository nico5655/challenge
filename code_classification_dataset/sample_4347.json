{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"4\", \"251\", \"47464146\"]",
    "src_uid": "4ce699a5633d6d3073c2daa7e10060bd",
    "prob_desc_notes": "NoteIn the first example, there are $$$4$$$ different mathematical states of this constellation:  $$$a_1=1$$$, $$$a_2=1$$$. $$$a_1=1$$$, $$$a_2=2$$$. $$$a_1=2$$$, $$$a_2=1$$$. $$$a_1=3$$$, $$$a_2=1$$$. ",
    "prob_desc_description": "Mocha wants to be an astrologer. There are $$$n$$$ stars which can be seen in Zhijiang, and the brightness of the $$$i$$$-th star is $$$a_i$$$. Mocha considers that these $$$n$$$ stars form a constellation, and she uses $$$(a_1,a_2,\\ldots,a_n)$$$ to show its state. A state is called mathematical if all of the following three conditions are satisfied:  For all $$$i$$$ ($$$1\\le i\\le n$$$), $$$a_i$$$ is an integer in the range $$$[l_i, r_i]$$$. $$$\\sum \\limits _{i=1} ^ n a_i \\le m$$$. $$$\\gcd(a_1,a_2,\\ldots,a_n)=1$$$. Here, $$$\\gcd(a_1,a_2,\\ldots,a_n)$$$ denotes the greatest common divisor (GCD) of integers $$$a_1,a_2,\\ldots,a_n$$$.Mocha is wondering how many different mathematical states of this constellation exist. Because the answer may be large, you must find it modulo $$$998\\,244\\,353$$$.Two states $$$(a_1,a_2,\\ldots,a_n)$$$ and $$$(b_1,b_2,\\ldots,b_n)$$$ are considered different if there exists $$$i$$$ ($$$1\\le i\\le n$$$) such that $$$a_i \\ne b_i$$$.",
    "prob_desc_output_spec": "Print a single integer — the number of different mathematical states of this constellation, modulo $$$998\\,244\\,353$$$.",
    "prob_desc_input_spec": "The first line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\le n \\le 50$$$, $$$1 \\le m \\le 10^5$$$) — the number of stars and the upper bound of the sum of the brightness of stars. Each of the next $$$n$$$ lines contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le m$$$) — the range of the brightness of the $$$i$$$-th star.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 2200,
    "file_name": "train_095.jsonl",
    "code_uid": "182067a428f77a6560e6827c21e4ab60",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 4\\n1 3\\n1 2\", \"5 10\\n1 10\\n1 10\\n1 10\\n1 10\\n1 10\", \"5 100\\n1 94\\n1 96\\n1 91\\n4 96\\n6 97\"]",
    "exec_outcome": "PASSED",
    "source_code": "\n\n\nimport sys\ninput=sys.stdin.readline #文字列入力はするな！\n\nmod=998244353\nn,m=map(int,input().split())\nl=[0]\nr=[0]\nfor i in range(n):\n    x,y=map(int,input().split())\n    l.append(x)\n    r.append(y)\n\nf=[0]*(m+10)\nfor g in range(m,0,-1):\n    if m//g<n:continue\n    dp=[0]*(n+3)*(m//g+2)\n    def _(i,k):\n        return k*(n+2)+i\n    dp[_(0,0)]=1\n    sdp=[1]*(m//g+3)\n\n    for i in range(1,n+1):\n        for k in range(m//g+2):\n            x,y=(l[i]+g-1)//g,r[i]//g\n            ma=k-x\n            mi=k-y\n            if ma<0:continue\n\n            if mi<=0:dp[_(i,k)]=sdp[ma]\n            else:dp[_(i,k)]=sdp[ma]-sdp[mi-1]\n            dp[_(i,k)]%=mod\n        sdp[0]=dp[_(i,0)]\n        for k in range(1,m//g+2):\n            sdp[k]=sdp[k-1]+dp[_(i,k)]\n            sdp[k]%=mod\n\n    for k in range(m//g+1):\n        f[g]+=dp[_(n,k)]\n        f[g]%=mod\n\nans=[0]*(m+5)\nfor g in range(m,0,-1):\n    ans[g]=f[g]\n    i=2\n    while i*g<=m:\n        ans[g]-=ans[g*i]\n        ans[g]%=mod\n        i+=1\nprint(ans[1])\n\n\n\n\n\n\n\n",
    "prob_desc_created_at": "1629038100",
    "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math",
        "number theory"
    ],
    "hidden_unit_tests": ""
}