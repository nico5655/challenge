{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"15\", \"0\", \"0\"]",
    "src_uid": "9404ec14922a69082f3573bbaf78ccf0",
    "prob_desc_notes": "NoteIn the first sample test, it's optimal to send the first, the second and the third student to the camp. It's also possible to send only the first and the third student, but they'd have a lower sum of $$$b_i$$$.In the second test, in each group of at least two students someone will always think that he is better than everyone else in the subset.",
    "prob_desc_description": "Marcin is a coach in his university. There are $$$n$$$ students who want to attend a training camp. Marcin is a smart coach, so he wants to send only the students that can work calmly with each other.Let's focus on the students. They are indexed with integers from $$$1$$$ to $$$n$$$. Each of them can be described with two integers $$$a_i$$$ and $$$b_i$$$; $$$b_i$$$ is equal to the skill level of the $$$i$$$-th student (the higher, the better). Also, there are $$$60$$$ known algorithms, which are numbered with integers from $$$0$$$ to $$$59$$$. If the $$$i$$$-th student knows the $$$j$$$-th algorithm, then the $$$j$$$-th bit ($$$2^j$$$) is set in the binary representation of $$$a_i$$$. Otherwise, this bit is not set.Student $$$x$$$ thinks that he is better than student $$$y$$$ if and only if $$$x$$$ knows some algorithm which $$$y$$$ doesn't know. Note that two students can think that they are better than each other. A group of students can work together calmly if no student in this group thinks that he is better than everyone else in this group.Marcin wants to send a group of at least two students which will work together calmly and will have the maximum possible sum of the skill levels. What is this sum?",
    "prob_desc_output_spec": "Output one integer which denotes the maximum sum of $$$b_i$$$ over the students in a group of students which can work together calmly. If no group of at least two students can work together calmly, print 0.",
    "prob_desc_input_spec": "The first line contains one integer $$$n$$$ ($$$1 \\leq n \\leq 7000$$$) â€” the number of students interested in the camp. The second line contains $$$n$$$ integers. The $$$i$$$-th of them is $$$a_i$$$ ($$$0 \\leq a_i &lt; 2^{60}$$$). The third line contains $$$n$$$ integers. The $$$i$$$-th of them is $$$b_i$$$ ($$$1 \\leq b_i \\leq 10^9$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_000.jsonl",
    "code_uid": "07395e79ac411d79f3464827b3013755",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n3 2 3 6\\n2 8 5 10\", \"3\\n1 2 3\\n1 2 3\", \"1\\n0\\n1\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin\nfrom collections import *\n\nget_bit = lambda x, i: (x >> i) & 1\nrints = lambda: [int(x) for x in stdin.readline().split()]\nn, a, b = int(input()), rints(), rints()\nmem, ans, mem1 = Counter(a), 0, []\nfor i, j in mem.items():\n    if j > 1:\n        mem1.append(i)\n\nfor i in range(n):\n    for j in mem1:\n        if a[i] | j == j:\n            ans += b[i]\n            break\n\nprint(ans)\n",
    "prob_desc_created_at": "1569143100",
    "tags": [
        "dfs and similar",
        "greedy",
        "graphs",
        "brute force"
    ],
    "hidden_unit_tests": ""
}