{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"3 1 2 3\\n3 1 2 11\\n2 1 2\"]",
    "src_uid": "fcfef9460f9e13af8f5288820d9f7376",
    "prob_desc_notes": "NoteIn the first test case, the bathroom is $$$3$$$ centimeters wide and $$$5$$$ centimeters long. There are three values of $$$a$$$ such that Bethany can tile the floor as described in the statement, namely $$$a=1$$$, $$$a=2$$$ and $$$a=3$$$. The three tilings are represented in the following pictures.   ",
    "prob_desc_description": "Bethany would like to tile her bathroom. The bathroom has width $$$w$$$ centimeters and length $$$l$$$ centimeters. If Bethany simply used the basic tiles of size $$$1 \\times 1$$$ centimeters, she would use $$$w \\cdot l$$$ of them. However, she has something different in mind.   On the interior of the floor she wants to use the $$$1 \\times 1$$$ tiles. She needs exactly $$$(w-2) \\cdot (l-2)$$$ of these.  On the floor boundary she wants to use tiles of size $$$1 \\times a$$$ for some positive integer $$$a$$$. The tiles can also be rotated by $$$90$$$ degrees. For which values of $$$a$$$ can Bethany tile the bathroom floor as described? Note that $$$a$$$ can also be $$$1$$$. ",
    "prob_desc_output_spec": "For each test case, print an integer $$$k$$$ ($$$0\\le k$$$) — the number of valid values of $$$a$$$ for the given test case — followed by $$$k$$$ integers $$$a_1, a_2,\\dots, a_k$$$ ($$$1\\le a_i$$$) — the valid values of $$$a$$$. The values $$$a_1, a_2, \\dots, a_k$$$ have to be sorted from smallest to largest. It is guaranteed that under the problem constraints, the output contains at most $$$200\\,000$$$ integers. ",
    "prob_desc_input_spec": "Each test contains multiple test cases. The first line contains an integer $$$t$$$ ($$$1\\le t\\le 100$$$) — the number of test cases. The descriptions of the $$$t$$$ test cases follow. Each test case consist of a single line, which contains two integers $$$w$$$, $$$l$$$ ($$$3 \\leq w, l \\leq 10^{9}$$$) — the dimensions of the bathroom.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": -1,
    "file_name": "train_085.jsonl",
    "code_uid": "9793299dbbcd90c68c320d42eae1c53a",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n\\n3 5\\n\\n12 12\\n\\n314159265 358979323\"]",
    "exec_outcome": "PASSED",
    "source_code": "\r\nimport math\r\n\r\ndef div(x):\r\n    ans=[]\r\n    for i in range(1,math.floor(math.sqrt(x))+1):\r\n        if x%i==0:\r\n            ans.append(i)\r\n            if x//i!=i:\r\n                ans.append(x//i)\r\n    \r\n    return ans\r\n\r\n\r\n            \r\nt=int(input())\r\nfor _ in range(t):\r\n    w,l=list(map(int,input().split()))\r\n    res=[]\r\n    \r\n    # x=max(w-1,l-2,l)\r\n    # res.append(math.gcd(w-1,l-2,l))\r\n    \r\n    # x=max(w,w-2,l-1)\r\n    # res.append(math.gcd(w,w-2,l-1))\r\n    \r\n    #! Điều kiện này không cần vì chỉ có thể là a=2\r\n    \r\n\r\n    res.append(math.gcd(w,l-2))\r\n    \r\n    \r\n    res.append(math.gcd(w-2,l))\r\n            \r\n    res.append(math.gcd(w-1,l-1))\r\n    \r\n    \r\n    ans=[]\r\n    for num in res:\r\n        ans+=div(num)\r\n\r\n    ans.append(2)\r\n    ans=list(set(ans))\r\n    ans.sort()\r\n    print(len(ans),end=\" \")\r\n    print(*ans)\r\n            ",
    "prob_desc_created_at": "1650798300",
    "tags": [
        "brute force",
        "math"
    ],
    "hidden_unit_tests": ""
}