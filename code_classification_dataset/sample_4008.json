{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"YES\\nYES\\nNO\\nYES\\nNO\\nYES\\nYES\"]",
    "src_uid": "58bf218b0472e22e54cd39a7ce6bb612",
    "prob_desc_notes": "NoteIn the $$$6$$$-th test case Petya can use the $$$3$$$-cycle $$$1 \\to 3 \\to 2 \\to 1$$$ to sort the array.In the $$$7$$$-th test case Petya can apply $$$1 \\to 3 \\to 2 \\to 1$$$ and make $$$a = [1, 4, 2, 3]$$$. Then he can apply $$$2 \\to 4 \\to 3 \\to 2$$$ and finally sort the array.",
    "prob_desc_description": "Petya has an array of integers $$$a_1, a_2, \\ldots, a_n$$$. He only likes sorted arrays. Unfortunately, the given array could be arbitrary, so Petya wants to sort it.Petya likes to challenge himself, so he wants to sort array using only $$$3$$$-cycles. More formally, in one operation he can pick $$$3$$$ pairwise distinct indices $$$i$$$, $$$j$$$, and $$$k$$$ ($$$1 \\leq i, j, k \\leq n$$$) and apply $$$i \\to j \\to k \\to i$$$ cycle to the array $$$a$$$. It simultaneously places $$$a_i$$$ on position $$$j$$$, $$$a_j$$$ on position $$$k$$$, and $$$a_k$$$ on position $$$i$$$, without changing any other element.For example, if $$$a$$$ is $$$[10, 50, 20, 30, 40, 60]$$$ and he chooses $$$i = 2$$$, $$$j = 1$$$, $$$k = 5$$$, then the array becomes $$$[\\underline{50}, \\underline{40}, 20, 30, \\underline{10}, 60]$$$.Petya can apply arbitrary number of $$$3$$$-cycles (possibly, zero). You are to determine if Petya can sort his array $$$a$$$, i. e. make it non-decreasing.",
    "prob_desc_output_spec": "For each test case, print \"YES\" (without quotes) if Petya can sort the array $$$a$$$ using $$$3$$$-cycles, and \"NO\" (without quotes) otherwise. You can print each letter in any case (upper or lower).",
    "prob_desc_input_spec": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\leq t \\leq 5 \\cdot 10^5$$$). Description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 5 \\cdot 10^5$$$) — the length of the array $$$a$$$. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq n$$$). It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_088.jsonl",
    "code_uid": "23a5bf24682942722d488e60ed35c973",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"7\\n1\\n1\\n2\\n2 2\\n2\\n2 1\\n3\\n1 2 3\\n3\\n2 1 3\\n3\\n3 1 2\\n4\\n2 1 4 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "#!/usr/bin/python3.9\n\ndef has_identical(a, n):\n    b = [0 for i in range(1, n+1)]\n    for i in a:\n       b[i]+=1\n       if b[i] > 1:\n           return True \n    return False\t\n                \n\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(lambda x : int(x)-1, input().split()))\n    \n  \n    if not has_identical(a, n):\n        a2 = list(range(n))\n        b = a2.copy() #индексный массив\n        for i in range(n-2):\n            if a2[i] != a[i]:\n                j = b[a[i]] # индекс элемента в массиве b\n                k = (n-1 if j != n-1 else n-2) #индекс последнего или предпоследнего элемента\n                # (i k j)\n                a2[i], a2[j], a2[k] = a2[j], a2[k], a2[i]\n                b[a2[i]], b[a2[j]], b[a2[k]] = i, j, k\n            #print(a, a2, b)\n        if a2[-1] == a[-1]:\n            ans.append(\"YES\")\n        else:\n            ans.append(\"NO\")\n\n    else:\n        ans.append(\"YES\")\n\nfor i in ans:\n    print(i)\n",
    "prob_desc_created_at": "1639322100",
    "tags": [
        "data structures",
        "math"
    ],
    "hidden_unit_tests": ""
}