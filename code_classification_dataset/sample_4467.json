{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"3\", \"2\"]",
    "src_uid": "20783d008f54becf7e47df3279a69fcb",
    "prob_desc_notes": "NoteIn the first example, Monocarp can obtain the strongest armor set and the strongest weapon as follows:  Obtain the $$$2$$$-nd weapon using the $$$1$$$-st armor set and the $$$1$$$-st weapon;  Obtain the $$$3$$$-rd armor set using the $$$1$$$-st armor set and the $$$2$$$-nd weapon;  Obtain the $$$4$$$-th weapon using the $$$3$$$-rd armor set and the $$$2$$$-nd weapon. In the second example, Monocarp can obtain the strongest armor set and the strongest weapon as follows:  Obtain the $$$3$$$-rd armor set using the $$$1$$$-st armor set and the $$$1$$$-st weapon (they synergize well, so Monocarp's power is not $$$2$$$ but $$$3$$$);  Obtain the $$$4$$$-th weapon using the $$$3$$$-rd armor set and the $$$1$$$-st weapon. ",
    "prob_desc_description": "Monocarp plays a computer game. There are $$$n$$$ different sets of armor and $$$m$$$ different weapons in this game. If a character equips the $$$i$$$-th set of armor and wields the $$$j$$$-th weapon, their power is usually equal to $$$i + j$$$; but some combinations of armor and weapons synergize well. Formally, there is a list of $$$q$$$ ordered pairs, and if the pair $$$(i, j)$$$ belongs to this list, the power of the character equipped with the $$$i$$$-th set of armor and wielding the $$$j$$$-th weapon is not $$$i + j$$$, but $$$i + j + 1$$$.Initially, Monocarp's character has got only the $$$1$$$-st armor set and the $$$1$$$-st weapon. Monocarp can obtain a new weapon or a new set of armor in one hour. If he wants to obtain the $$$k$$$-th armor set or the $$$k$$$-th weapon, he must possess a combination of an armor set and a weapon that gets his power to $$$k$$$ or greater. Of course, after Monocarp obtains a weapon or an armor set, he can use it to obtain new armor sets or weapons, but he can go with any of the older armor sets and/or weapons as well.Monocarp wants to obtain the $$$n$$$-th armor set and the $$$m$$$-th weapon. What is the minimum number of hours he has to spend on it? ",
    "prob_desc_output_spec": "Print one integer — the minimum number of hours Monocarp has to spend to obtain both the $$$n$$$-th armor set and the $$$m$$$-th weapon.",
    "prob_desc_input_spec": "The first line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\le n, m \\le 2 \\cdot 10^5$$$) — the number of armor sets and the number of weapons, respectively. The second line contains one integer $$$q$$$ ($$$0 \\le q \\le \\min(2 \\cdot 10^5, nm)$$$) — the number of combinations that synergize well. Then $$$q$$$ lines follow, the $$$i$$$-th line contains two integers $$$a_i$$$ and $$$b_i$$$ ($$$1 \\le a_i \\le n$$$; $$$1 \\le b_i \\le m$$$) meaning that the $$$a_i$$$-th armor set synergizes well with the $$$b_i$$$-th weapon. All pairs $$$(a_i, b_i)$$$ are distinct.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2800,
    "file_name": "train_098.jsonl",
    "code_uid": "6d28f230f0e321edfcdbc48c08eafad4",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"3 4\\n0\", \"3 4\\n2\\n1 1\\n1 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "import io, os, sys\r\n\r\n\r\ninput = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\r\n\r\n\r\ndef armor_and_weapons(n, m, combos):\r\n    current_wave = [(1, 1, 0)]\r\n\r\n    while len(current_wave) > 0:\r\n        next_wave = []\r\n        max_x = 0\r\n\r\n        current_wave.sort(key=lambda x: (-x[1], -x[0]))\r\n        for x, y, hours in current_wave:\r\n            if x > max_x:\r\n                max_x = x\r\n                power = x + y\r\n                if (x, y) in combos:\r\n                    power += 1\r\n\r\n                if x != n:\r\n                    new_x = min(power, n)\r\n\r\n                    next_wave += [(new_x, y, hours + 1)]\r\n                elif power >= m:\r\n                    return hours + 1\r\n\r\n                if y != m:\r\n                    new_y = min(power, m)\r\n\r\n                    next_wave += [(x, new_y, hours + 1)]\r\n                elif power >= n:\r\n                    return hours + 1\r\n\r\n        current_wave = next_wave\r\n\r\n\r\nn, m = map(int, input().split())\r\ncombos = set()\r\nfor _ in range(int(input())):\r\n    ai, bi = map(int, input().split())\r\n    combos.add((ai, bi))\r\nsys.stdout.write(f\"{armor_and_weapons(n, m, combos)}\\n\")\r\n",
    "prob_desc_created_at": "1637573700",
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "shortest paths"
    ],
    "hidden_unit_tests": ""
}