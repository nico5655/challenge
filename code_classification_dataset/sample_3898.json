{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"3\\n0\\n10\\n0\\n1\"]",
    "src_uid": "89768e4c832428b534cae3acbf379c44",
    "prob_desc_notes": "NoteFor the first test cases the pairs are $$$(i, j)$$$ = $$$\\{(2, 4), (2, 8), (3, 8)\\}$$$.   The pair $$$(2, 4)$$$ is true because $$$a_2 = 1$$$, $$$a_4 = 3$$$ and $$$1 &lt; 2 &lt; 3 &lt; 4$$$.  The pair $$$(2, 8)$$$ is true because $$$a_2 = 1$$$, $$$a_8 = 4$$$ and $$$1 &lt; 2 &lt; 4 &lt; 8$$$.  The pair $$$(3, 8)$$$ is true because $$$a_3 = 2$$$, $$$a_8 = 4$$$ and $$$2 &lt; 3 &lt; 4 &lt; 8$$$. ",
    "prob_desc_description": "You are given an array $$$a_1, a_2, \\dots a_n$$$. Count the number of pairs of indices $$$1 \\leq i, j \\leq n$$$ such that $$$a_i &lt; i &lt; a_j &lt; j$$$.",
    "prob_desc_output_spec": "For each test case, output a single integer — the number of pairs of indices satisfying the condition in the statement. Please note, that the answer for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like long long for C++).",
    "prob_desc_input_spec": "The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases. The first line of each test case contains an integer $$$n$$$ ($$$2 \\leq n \\leq 2 \\cdot 10^5$$$) — the length of the array. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$0 \\leq a_i \\leq 10^9$$$) — the elements of the array. It is guaranteed that the sum of $$$n$$$ across all test cases does not exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_086.jsonl",
    "code_uid": "faee873c097b77cff1e7c74eb013f492",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n\\n8\\n\\n1 1 2 3 8 2 1 4\\n\\n2\\n\\n1 2\\n\\n10\\n\\n0 2 1 6 3 4 1 2 8 3\\n\\n2\\n\\n1 1000000000\\n\\n3\\n\\n0 1000000000 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "# Online Python compiler (interpreter) to run Python online.\r\n# Write Python 3 code in this online editor and run it.\r\n\r\nt = int(input())\r\nfor i in range(t):\r\n    toto = 0\r\n    n= int(input())\r\n    array = (list(map(int,input().split())))\r\n    cumulatif=[0]*(n+5)\r\n    for i in range(n) :\r\n        if array[i] < i+1 :\r\n            cumulatif[i+1]=(cumulatif[i]+1)\r\n            toto+=cumulatif[array[i]-1]\r\n        else :\r\n            cumulatif[i+1]=(cumulatif[i])\r\n    print(toto)",
    "prob_desc_created_at": "1657636500",
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "sortings"
    ],
    "hidden_unit_tests": ""
}