{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"Yes\\nNo\\nYes\\nYes\\nYes\\nNo\"]",
    "src_uid": "f5e57cdca91f36f9b2b20eabbe0d355d",
    "prob_desc_notes": "NoteIn the sample, the whole table is not sorted in any column. However, rows 1–3 are sorted in column 1, while rows 4–5 are sorted in column 3.",
    "prob_desc_description": "During the lesson small girl Alyona works with one famous spreadsheet computer program and learns how to edit tables.Now she has a table filled with integers. The table consists of n rows and m columns. By ai, j we will denote the integer located at the i-th row and the j-th column. We say that the table is sorted in non-decreasing order in the column j if ai, j ≤ ai + 1, j for all i from 1 to n - 1.Teacher gave Alyona k tasks. For each of the tasks two integers l and r are given and Alyona has to answer the following question: if one keeps the rows from l to r inclusive and deletes all others, will the table be sorted in non-decreasing order in at least one column? Formally, does there exist such j that ai, j ≤ ai + 1, j for all i from l to r - 1 inclusive.Alyona is too small to deal with this task and asks you to help!",
    "prob_desc_output_spec": "Print \"Yes\" to the i-th line of the output if the table consisting of rows from li to ri inclusive is sorted in non-decreasing order in at least one column. Otherwise, print \"No\".",
    "prob_desc_input_spec": "The first line of the input contains two positive integers n and m (1 ≤ n·m ≤ 100 000) — the number of rows and the number of columns in the table respectively. Note that your are given a constraint that bound the product of these two integers, i.e. the number of elements in the table. Each of the following n lines contains m integers. The j-th integers in the i of these lines stands for ai, j (1 ≤ ai, j ≤ 109). The next line of the input contains an integer k (1 ≤ k ≤ 100 000) — the number of task that teacher gave to Alyona. The i-th of the next k lines contains two integers li and ri (1 ≤ li ≤ ri ≤ n).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_010.jsonl",
    "code_uid": "5bc2cba45120e80fdba29914e4e75429",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5 4\\n1 2 3 5\\n3 1 3 2\\n4 5 2 3\\n5 5 3 2\\n4 4 3 4\\n6\\n1 1\\n2 5\\n4 5\\n3 5\\n1 3\\n1 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "n,m=[int(x) for x in input().split()]\narr=[[int(x) for x in input().split()]for i in range(0,n)]\nv=[[1]*m for i in range(0,n)]#a 2d array of size [n][m]\nfor i in range(0,m):\n     for j in range(1,n):\n          if(arr[j][i]>=arr[j-1][i]):\n               v[j][i]=v[j-1][i]+1#if in increasing order increase value by 1\n               \nbest=[max(i) for i in v]#to store largest value in row\nans=\"\"\nt=int(input())\nfor i in range(0,t):\n     x,y=[int(s) for s in input().split()]\n     if(best[y-1]>=y-x+1):#compare that largest value\n          ans+=\"Yes\\n\"\n     else :\n          ans+=\"No\\n\"\n\nprint(ans)\n\n",
    "prob_desc_created_at": "1487930700",
    "tags": [
        "dp",
        "greedy",
        "two pointers",
        "implementation",
        "data structures",
        "binary search"
    ],
    "hidden_unit_tests": ""
}