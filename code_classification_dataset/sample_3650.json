{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"3\\n1 2 3\\n1\\n3\\n2\\n1 2\\n1\\n2\\n1\\n1\\n-1\\n2 5 4\", \"1\\n2\\n1\\n1\\n-1\\n0 0\"]",
    "src_uid": "0f43df0d2560e55af524e2657f0b2af0",
    "prob_desc_notes": "NoteIn the first sample, Hongcow has the hidden matrix [ [0, 3, 2], [5, 0, 7], [4, 8 ,0],]Here is a more readable version demonstrating the interaction. The column on the left represents Hongcow, while the column on the right represents the contestant. 3              3              1 2 30 0 0              1              32 7 0              2              1 20 0 4              1              23 0 8              1              10 5 4              -1              2 5 4For the second sample, it is possible for off-diagonal elements of the matrix to be zero.",
    "prob_desc_description": "This is an interactive problem. In the interaction section below you will see the information about flushing the output.In this problem, you will be playing a game with Hongcow. How lucky of you!Hongcow has a hidden n by n matrix M. Let Mi, j denote the entry i-th row and j-th column of the matrix. The rows and columns are labeled from 1 to n.The matrix entries are between 0 and 109. In addition, Mi, i = 0 for all valid i. Your task is to find the minimum value along each row, excluding diagonal elements. Formally, for each i, you must find .To do this, you can ask Hongcow some questions.A question consists of giving Hongcow a subset of distinct indices {w1, w2, ..., wk}, with 1 ≤ k ≤ n. Hongcow will respond with n integers. The i-th integer will contain the minimum value of min1 ≤ j ≤ kMi, wj.You may only ask Hongcow at most 20 questions — he thinks you only need that many questions answered.When you are ready to answer, print out a single integer  - 1 on its own line, then n integers on the next line. The i-th integer should be the minimum value in the i-th row of the matrix, excluding the i-th element. Do not forget to flush the final answer as well. Printing the answer does not count as asking a question.You will get Wrong Answer verdict if   Your question or answers are not in the format described in this statement.  You ask strictly more than 20 questions.  Your question contains duplicate indices.  The value of k in your question does not lie in the range from 1 to n, inclusive.  Your final answer is not correct.  You will get Idleness Limit Exceeded if you don't print anything or if you forget to flush the output, including for the final answer (more info about flushing output below).",
    "prob_desc_output_spec": "To print the final answer, print out the string -1 on its own line. Then, the next line should contain n integers. The i-th integer should be the minimum value of the i-th row of the matrix, excluding elements on the diagonal. Do not forget to flush your answer!",
    "prob_desc_input_spec": "The first line of input will contain a single integer n (2 ≤ n ≤ 1, 000).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_076.jsonl",
    "code_uid": "7e153bf7bddc573ec9db5a4f897e2fc0",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n0 0 0\\n2 7 0\\n0 0 4\\n3 0 8\\n0 5 4\", \"2\\n0 0\\n0 0\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\n\nn = int(input())\nmn = [float('inf') for _ in range(n)]\n\nln = len(bin(n)) - 3\n\ncnt = 0\nfor bit in range(ln, -1, -1):\n    query = []\n    inv_query = []\n    for i in range(1, n + 1):\n        if i & (1<<bit):\n            query.append(i)\n        else:\n            inv_query.append(i)\n\n    print(len(query))\n    print(' '.join(map(str, query)))\n    sys.stdout.flush()\n    ans = list(map(int, input().split()))\n    for i in inv_query:\n        mn[i - 1] = min(mn[i - 1], ans[i - 1])\n\n    print(len(inv_query))\n    print(' '.join(map(str, inv_query)))\n    sys.stdout.flush()\n    ans = list(map(int, input().split()))\n    for i in query:\n        mn[i - 1] = min(mn[i - 1], ans[i - 1])\n\nprint(-1)\nprint(' '.join(map(str, mn)))\nsys.stdout.flush()\n",
    "prob_desc_created_at": "1481992500",
    "tags": [
        "bitmasks",
        "interactive",
        "divide and conquer"
    ],
    "hidden_unit_tests": ""
}