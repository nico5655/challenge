{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"5\", \"-5\"]",
    "src_uid": "ec1a29826209a0820e8183cccb2d2f01",
    "prob_desc_notes": "NoteA subsegment [l,  r] (l ≤ r) of array a is the sequence al,  al + 1,  ...,  ar.Splitting of array a of n elements into k subsegments [l1, r1], [l2, r2], ..., [lk, rk] (l1 = 1, rk = n, li = ri - 1 + 1 for all i &gt; 1) is k sequences (al1, ..., ar1), ..., (alk, ..., ark).In the first example you should split the array into subsegments [1, 4] and [5, 5] that results in sequences (1, 2, 3, 4) and (5). The minimums are min(1, 2, 3, 4) = 1 and min(5) = 5. The resulting maximum is max(1, 5) = 5. It is obvious that you can't reach greater result.In the second example the only option you have is to split the array into one subsegment [1, 5], that results in one sequence ( - 4,  - 5,  - 3,  - 2,  - 1). The only minimum is min( - 4,  - 5,  - 3,  - 2,  - 1) =  - 5. The resulting maximum is  - 5.",
    "prob_desc_description": "You are given an array a1, a2, ..., an consisting of n integers, and an integer k. You have to split the array into exactly k non-empty subsegments. You'll then compute the minimum integer on each subsegment, and take the maximum integer over the k obtained minimums. What is the maximum possible integer you can get?Definitions of subsegment and array splitting are given in notes.",
    "prob_desc_output_spec": "Print single integer — the maximum possible integer you can get if you split the array into k non-empty subsegments and take maximum of minimums on the subsegments.",
    "prob_desc_input_spec": "The first line contains two integers n and k (1 ≤ k ≤ n ≤  105) — the size of the array a and the number of subsegments you have to split the array to. The second line contains n integers a1,  a2,  ...,  an ( - 109  ≤  ai ≤  109).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1200,
    "file_name": "train_011.jsonl",
    "code_uid": "4285f0e9eb424eafae86c4c258b9e8cc",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5 2\\n1 2 3 4 5\", \"5 1\\n-4 -5 -3 -2 -1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, k = map(int, input().split())\ntemp = [int(x) for x in input().split()]\nif k > 2:\n    print(max(temp))\nelif k == 1:\n    print(min(temp))\nelse:\n    print(max(temp[0], temp[-1]))\n",
    "prob_desc_created_at": "1508054700",
    "tags": [
        "greedy"
    ],
    "hidden_unit_tests": ""
}