{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"0\\n4\\n21\"]",
    "src_uid": "935bceb69117d06eb75121c805bff69c",
    "prob_desc_notes": "NoteFor the first test case, you can move a car from the $$$3$$$-rd sub-track to the $$$1$$$-st sub-track to obtain $$$0$$$ inconvenience.For the second test case, moving any car won't decrease the inconvenience of the track.",
    "prob_desc_description": "Highway 201 is the most busy street in Rockport. Traffic cars cause a lot of hindrances to races, especially when there are a lot of them. The track which passes through this highway can be divided into $$$n$$$ sub-tracks. You are given an array $$$a$$$ where $$$a_i$$$ represents the number of traffic cars in the $$$i$$$-th sub-track. You define the inconvenience of the track as $$$\\sum\\limits_{i=1}^{n} \\sum\\limits_{j=i+1}^{n} \\lvert a_i-a_j\\rvert$$$, where $$$|x|$$$ is the absolute value of $$$x$$$. You can perform the following operation any (possibly zero) number of times: choose a traffic car and move it from its current sub-track to any other sub-track.Find the minimum inconvenience you can achieve.",
    "prob_desc_output_spec": "For each test case, print a single line containing a single integer: the minimum inconvenience you can achieve by applying the given operation any (possibly zero) number of times.",
    "prob_desc_input_spec": "The first line of input contains a single integer $$$t$$$ ($$$1\\leq t\\leq 10\\,000$$$) â€” the number of test cases. The first line of each test case contains a single integer $$$n$$$ ($$$1\\leq n\\leq 2\\cdot 10^5$$$). The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0\\leq a_i\\leq 10^9$$$). It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_091.jsonl",
    "code_uid": "181c34b71f1b0cce381ff6e9e98f5ec9",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n3\\n1 2 3\\n4\\n0 1 1 0\\n10\\n8 3 6 11 5 2 1 7 10 4\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\r\n\r\ninput = lambda: sys.stdin.buffer.readline().decode().strip()\r\nprint = sys.stdout.write\r\n\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    nums = list(map(int, input().split()))\r\n    total = sum(nums)\r\n    reminder = total % n\r\n    print(str((n - reminder) * reminder) + \"\\n\")\r\n",
    "prob_desc_created_at": "1625668500",
    "tags": [
        "combinatorics",
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}