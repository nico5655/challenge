{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"101 10\", \"30 15\", \"18 18\", \"7000 7000\"]",
    "src_uid": "21672f2906f4f821611ab1b6dfc7f081",
    "prob_desc_notes": "NoteIn the first example, Ciel will take the cards with number 100 and 1, Jiro will take the card with number 10.In the second example, Ciel will take cards with numbers 2, 8, 6, 5, 9 and Jiro will take cards with numbers 4, 7, 1, 3.",
    "prob_desc_description": "Fox Ciel is playing a card game with her friend Fox Jiro. There are n piles of cards on the table. And there is a positive integer on each card.The players take turns and Ciel takes the first turn. In Ciel's turn she takes a card from the top of any non-empty pile, and in Jiro's turn he takes a card from the bottom of any non-empty pile. Each player wants to maximize the total sum of the cards he took. The game ends when all piles become empty.Suppose Ciel and Jiro play optimally, what is the score of the game?",
    "prob_desc_output_spec": "Print two integers: the sum of Ciel's cards and the sum of Jiro's cards if they play optimally.",
    "prob_desc_input_spec": "The first line contain an integer n (1 ≤ n ≤ 100). Each of the next n lines contains a description of the pile: the first integer in the line is si (1 ≤ si ≤ 100) — the number of cards in the i-th pile; then follow si positive integers c1, c2, ..., ck, ..., csi (1 ≤ ck ≤ 1000) — the sequence of the numbers on the cards listed from top of the current pile to bottom of the pile.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 2000,
    "file_name": "train_015.jsonl",
    "code_uid": "e4cdbbc535cd8f7d16d576616dcc7499",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n1 100\\n2 1 10\", \"1\\n9 2 8 6 5 9 4 7 1 3\", \"3\\n3 1 3 2\\n3 5 4 6\\n2 8 7\", \"3\\n3 1000 1000 1000\\n6 1000 1000 1000 1000 1000 1000\\n5 1000 1000 1000 1000 1000\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = input()\ncie = jir = 0\nmid = []\nfor i in xrange(n):\n\tcard = map(int, raw_input().split())\n\ts = card[0]\n\tcard = card[1:]\n\tb = s / 2\n\te = (s + 1) / 2\n\tif(b != e):\n\t\tmid.append(card[b])\n\tcie += sum(card[:b])\n\tjir += sum(card[e:])\n\nl = (len(mid) + 1) / 2\nmid = sorted(mid, reverse = True)\nfor i in xrange(len(mid)):\n\tif(i % 2 == 0):\n\t\tcie += mid[i]\n\telse:\n\t\tjir += mid[i]\nprint cie,jir\n",
    "prob_desc_created_at": "1391442000",
    "tags": [
        "greedy",
        "sortings",
        "games"
    ],
    "hidden_unit_tests": ""
}