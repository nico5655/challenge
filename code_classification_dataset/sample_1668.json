{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"6.000000000000000\", \"40.000000000000000\", \"1.666666666666667\"]",
    "src_uid": "c6fc7121764471c43e99b0c6c82fd7ed",
    "prob_desc_notes": null,
    "prob_desc_description": "Consider a system of n water taps all pouring water into the same container. The i-th water tap can be set to deliver any amount of water from 0 to ai ml per second (this amount may be a real number). The water delivered by i-th tap has temperature ti.If for every  you set i-th tap to deliver exactly xi ml of water per second, then the resulting temperature of water will be  (if , then to avoid division by zero we state that the resulting water temperature is 0).You have to set all the water taps in such a way that the resulting temperature is exactly T. What is the maximum amount of water you may get per second if its temperature has to be T?",
    "prob_desc_output_spec": "Print the maximum possible amount of water with temperature exactly T you can get per second (if it is impossible to obtain water with such temperature, then the answer is considered to be 0). Your answer is considered correct if its absolute or relative error doesn't exceed 10 - 6.",
    "prob_desc_input_spec": "The first line contains two integers n and T (1 ≤ n ≤ 200000, 1 ≤ T ≤ 106) — the number of water taps and the desired temperature of water, respectively. The second line contains n integers a1, a2, ..., an (1 ≤ ai ≤ 106) where ai is the maximum amount of water i-th tap can deliver per second. The third line contains n integers t1, t2, ..., tn (1 ≤ ti ≤ 106) — the temperature of water each tap delivers.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2000,
    "file_name": "train_011.jsonl",
    "code_uid": "4825723fa8d06b43252bdaa6dca8fa28",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 100\\n3 10\\n50 150\", \"3 9\\n5 5 30\\n6 6 10\", \"2 12\\n1 3\\n10 15\"]",
    "exec_outcome": "PASSED",
    "source_code": "R = lambda : map(int, input().split())\nn, temp = R()\na = list(R())\nt = list(R())\nv = sorted([(t[i]-temp,a[i]) for i in range(n)])\n\nr = sum([v[i][1] for i in range(n) if v[i][0]==0])\npos = sum([v[i][0]*v[i][1] for i in range(n) if v[i][0]>0])\nneg = sum([abs(v[i][0])*v[i][1] for i in range(n) if v[i][0]<0])\n\npa = sum([v[i][1] for i in range(n) if v[i][0]>0])\nna = sum([v[i][1] for i in range(n) if v[i][0]<0])\n\nif pos == 0 or neg == 0:\n    print(r); exit();\n\nfor i in range(n):\n    if v[i][0] >= 0:\n        stn = i-1; break;\n\nfor i in range(n):\n    if v[i][0] > 0:\n        stp = i; break;\n\nif neg<pos:\n    r += na\n    rem = neg * 1.0\n    for i in range(stp,n):\n        if v[i][0]*v[i][1]>=rem:\n            r += rem / v[i][0]\n            rem = 0\n        else:\n            r += v[i][1]\n            rem -= v[i][0]*v[i][1]\nelse:\n    r += pa\n    rem = pos * 1.0\n    for i in reversed(range(stn+1)):\n        if abs(v[i][0])*v[i][1]>=rem:\n            r += rem / abs(v[i][0])\n            rem = 0\n        else:\n            r += v[i][1]\n            rem -= abs(v[i][0])*v[i][1]\n\nprint(r)",
    "prob_desc_created_at": "1521698700",
    "tags": [
        "binary search",
        "sortings",
        "greedy"
    ],
    "hidden_unit_tests": ""
}