{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1\\n1\\n1\\n0\", \"1\\n1\\n1\\n2\\n1\\n1\"]",
    "src_uid": "965e51168f9945a456610e8b449dd9df",
    "prob_desc_notes": null,
    "prob_desc_description": "There are n students studying in the 6th grade, in group \"B\" of a berland secondary school. Every one of them has exactly one friend whom he calls when he has some news. Let us denote the friend of the person number i by g(i). Note that the friendships are not mutual, i.e. g(g(i)) is not necessarily equal to i.On day i the person numbered as ai learns the news with the rating of bi (bi ≥ 1). He phones the friend immediately and tells it. While he is doing it, the news becomes old and its rating falls a little and becomes equal to bi - 1. The friend does the same thing — he also calls his friend and also tells the news. The friend of the friend gets the news already rated as bi - 2. It all continues until the rating of the news reaches zero as nobody wants to tell the news with zero rating. More formally, everybody acts like this: if a person x learns the news with a non-zero rating y, he calls his friend g(i) and his friend learns the news with the rating of y - 1 and, if it is possible, continues the process.Let us note that during a day one and the same person may call his friend and tell him one and the same news with different ratings. Thus, the news with the rating of bi will lead to as much as bi calls.Your task is to count the values of resi — how many students learned their first news on day i.The values of bi are known initially, whereas ai is determined from the following formula:  where mod stands for the operation of taking the excess from the cleavage, res0 is considered equal to zero and vi — some given integers.",
    "prob_desc_output_spec": "Print m lines containing one number each. The i-th line should contain resi — for what number of students the first news they've learned over the m days in question, was the news number i. The number of the news is the number of the day on which it can be learned. The days are numbered starting from one in the order in which they are given in the input file. Don't output res0.",
    "prob_desc_input_spec": "The first line contains two space-separated integers n and m (2 ≤ n, m ≤ 105) — the number of students and the number of days. The second line contains n space-separated integers g(i) (1 ≤ g(i) ≤ n, g(i) ≠ i) — the number of a friend of the i-th student. The third line contains m space-separated integers vi (1 ≤ vi ≤ 107). The fourth line contains m space-separated integers bi (1 ≤ bi ≤ 107).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 2200,
    "file_name": "train_029.jsonl",
    "code_uid": "bb4e53c98cdb9769fbad3309ab9dc4f8",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3 4\\n2 3 1\\n1 2 3 4\\n1 2 3 4\", \"8 6\\n7 6 4 2 3 5 5 7\\n10 4 3 8 9 1\\n1 1 1 2 2 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\nrange = xrange\ninput = raw_input\n\ninp = [int(x) for x in sys.stdin.read().split()]; ii = 0\n\nn = inp[ii]; ii += 1\nm = inp[ii]; ii += 1\n\nP0 = [x - 1 for x in inp[ii: ii + n]]; ii += n\nV = [x - 1 for x in inp[ii: ii + m]]; ii += m\nB = inp[ii: ii + m]; ii += m\n\nP = [P0]\nfor _ in range(19):\n    Pprev = P[-1]\n    P.append([Pprev[Pprev[node]] for node in range(n)])\n\nmarked = [[0] * n for _ in range(20)]\n\n# marks [node, node + 2**bit] and returns number of newly marked nodes\ndef mark(bit, node):\n    if marked[bit][node]:\n        return 0\n    marked[bit][node] = 1\n    if bit:\n        return mark(bit - 1, node) + mark(bit - 1, P[bit - 1][node])\n    else:\n        return 1\n\nout = [0]\nfor i in range(m):\n    v = V[i]\n    a = (v + out[-1]) % n\n    b = min(B[i], n)\n\n    ans = 0\n    for bit in range(20):\n        if b & (1 << bit):\n            ans += mark(bit, a)\n            a = P[bit][a]\n    out.append(ans)\n\nout.pop(0)\nprint '\\n'.join(str(x) for x in out)\n",
    "prob_desc_created_at": "1289646000",
    "tags": [
        "dp",
        "dsu"
    ],
    "hidden_unit_tests": ""
}