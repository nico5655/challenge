{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"YES\", \"NO\"]",
    "src_uid": "01cd3f0c6bc2975118075d180bfeba2d",
    "prob_desc_notes": "NoteIn the first sample, if w1 = 1, w2 = 2, w3 = 2.5,  then Alice has a total of 2 + 2 + 2 = 6 weight units, while Bob only has 1 + 1 + 2.5 = 4.5.In the second sample, the fish that Alice caught is a subset of Bob's. Therefore, the total weight of Bob’s fish is always not less than the total weight of Alice’s fish.",
    "prob_desc_description": "It is known that there are k fish species in the polar ocean, numbered from 1 to k. They are sorted by non-decreasing order of their weight, which is a positive number. Let the weight of the i-th type of fish be wi, then 0 &lt; w1 ≤ w2 ≤ ... ≤ wk holds.Polar bears Alice and Bob each have caught some fish, and they are guessing who has the larger sum of weight of the fish he/she's caught. Given the type of the fish they've caught, determine whether it is possible that the fish caught by Alice has a strictly larger total weight than Bob's. In other words, does there exist a sequence of weights wi (not necessary integers), such that the fish caught by Alice has a strictly larger total weight?",
    "prob_desc_output_spec": "Output \"YES\" (without quotes) if it is possible, and \"NO\" (without quotes) otherwise.",
    "prob_desc_input_spec": "The first line contains three integers n, m, k (1 ≤ n, m ≤ 105, 1 ≤ k ≤ 109) — the number of fish caught by Alice and Bob respectively, and the number of fish species. The second line contains n integers each from 1 to k, the list of fish type caught by Alice. The third line contains m integers each from 1 to k, the list of fish type caught by Bob. Note that one may have caught more than one fish for a same species.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_011.jsonl",
    "code_uid": "0fed901075b6ca3d12188cccae96d6ac",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3 3 3\\n2 2 2\\n1 1 3\", \"4 7 9\\n5 2 7 3\\n3 5 2 7 3 8 7\"]",
    "exec_outcome": "PASSED",
    "source_code": "r=lambda:map(int,raw_input().split())\nr()\na=sorted(r(),None,None,True)\nb=sorted(r(),None,None,True)\nif len(a)>len(b):print \"YES\";exit()\nfor i in range(min(len(a),len(b))):\n    if a[i]>b[i]:print \"YES\";exit()\nprint \"NO\"\n\n",
    "prob_desc_created_at": "1366385400",
    "tags": [
        "constructive algorithms",
        "greedy"
    ],
    "hidden_unit_tests": ""
}