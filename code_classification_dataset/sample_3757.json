{
    "prob_desc_time_limit": "4 seconds",
    "prob_desc_sample_outputs": "[\"5\\n9\\n0\\n117\"]",
    "src_uid": "f760f108c66f695e1e51dc6470d29ce7",
    "prob_desc_notes": "NoteLet $$$f(l, r)$$$ denote the extreme value of $$$[a_l, a_{l+1}, \\ldots, a_r]$$$.In the first test case,   $$$f(1, 3) = 3$$$, because YouKn0wWho can perform the following operations on the subarray $$$[5, 4, 3]$$$ (the newly inserted elements are underlined):$$$[5, 4, 3] \\rightarrow [\\underline{3}, \\underline{2}, 4, 3] \\rightarrow [3, 2, \\underline{2}, \\underline{2}, 3] \\rightarrow [\\underline{1}, \\underline{2}, 2, 2, 2, 3]$$$; $$$f(1, 2) = 1$$$, because $$$[5, 4] \\rightarrow [\\underline{2}, \\underline{3}, 4]$$$; $$$f(2, 3) = 1$$$, because $$$[4, 3] \\rightarrow [\\underline{1}, \\underline{3}, 3]$$$; $$$f(1, 1) = f(2, 2) = f(3, 3) = 0$$$, because they are already non-decreasing. So the total sum of extreme values of all subarrays of $$$a = 3 + 1 + 1 + 0 + 0 + 0 = 5$$$.",
    "prob_desc_description": "For an array $$$b$$$ of $$$n$$$ integers, the extreme value of this array is the minimum number of times (possibly, zero) the following operation has to be performed to make $$$b$$$ non-decreasing:   Select an index $$$i$$$ such that $$$1 \\le i \\le |b|$$$, where $$$|b|$$$ is the current length of $$$b$$$.  Replace $$$b_i$$$ with two elements $$$x$$$ and $$$y$$$ such that $$$x$$$ and $$$y$$$ both are positive integers and $$$x + y = b_i$$$.  This way, the array $$$b$$$ changes and the next operation is performed on this modified array. For example, if $$$b = [2, 4, 3]$$$ and index $$$2$$$ gets selected, then the possible arrays after this operation are $$$[2, \\underline{1}, \\underline{3}, 3]$$$, $$$[2, \\underline{2}, \\underline{2}, 3]$$$, or $$$[2, \\underline{3}, \\underline{1}, 3]$$$. And consequently, for this array, this single operation is enough to make it non-decreasing: $$$[2, 4, 3] \\rightarrow [2, \\underline{2}, \\underline{2}, 3]$$$.It's easy to see that every array of positive integers can be made non-decreasing this way.YouKn0wWho has an array $$$a$$$ of $$$n$$$ integers. Help him find the sum of extreme values of all nonempty subarrays of $$$a$$$ modulo $$$998\\,244\\,353$$$. If a subarray appears in $$$a$$$ multiple times, its extreme value should be counted the number of times it appears.An array $$$d$$$ is a subarray of an array $$$c$$$ if $$$d$$$ can be obtained from $$$c$$$ by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.",
    "prob_desc_output_spec": "For each test case, print a single integer  — the sum of extreme values of all subarrays of $$$a$$$ modulo $$$998\\,244\\,353$$$.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10\\,000$$$) — the number of test cases. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$). The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^5$$$). It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 2300,
    "file_name": "train_083.jsonl",
    "code_uid": "cd8b9a9239ea0a48ac46b570813b99fb",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n3\\n5 4 3\\n4\\n3 2 1 4\\n1\\n69\\n8\\n7264 40515 28226 92776 35285 21709 75124 48163\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\r\n\r\ninput = sys.stdin.readline\r\nMOD = 998244353\r\n\r\n\r\n\r\nt=int(input())\r\nfor _ in range(t):\r\n    n = int(input())\r\n    A = list(map(int, input().split()))\r\n    cnt = {}\r\n    ans = 0\r\n\r\n    for l in range(n - 1, -1, -1):\r\n        cnt2 = {}\r\n        a = A[l]\r\n        for k, v in cnt.items():\r\n\r\n            tmp = (a + k - 1) // k    # k: y  ; tmp : K or ceil(ar[i]/y) ;\r\n            x = a // tmp\r\n            if x in cnt2:\r\n                cnt2[x] += v\r\n            else:\r\n                cnt2[x] = v\r\n            ans += (tmp - 1) * (l + 1) * v\r\n            ans %= MOD\r\n        cnt = cnt2\r\n        if a in cnt:\r\n            cnt[a] += 1\r\n        else:\r\n            cnt[a] = 1\r\n\r\n    print(ans)",
    "prob_desc_created_at": "1635604500",
    "tags": [
        "dp",
        "greedy",
        "number theory"
    ],
    "hidden_unit_tests": ""
}