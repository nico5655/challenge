{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1\", \"-1\", \"0\"]",
    "src_uid": "c647e36495fb931ac72702a12c6bfe58",
    "prob_desc_notes": null,
    "prob_desc_description": "One day, Twilight Sparkle is interested in how to sort a sequence of integers a1, a2, ..., an in non-decreasing order. Being a young unicorn, the only operation she can perform is a unit shift. That is, she can move the last element of the sequence to its beginning:a1, a2, ..., an → an, a1, a2, ..., an - 1. Help Twilight Sparkle to calculate: what is the minimum number of operations that she needs to sort the sequence?",
    "prob_desc_output_spec": "If it's impossible to sort the sequence output -1. Otherwise output the minimum number of operations Twilight Sparkle needs to sort it.",
    "prob_desc_input_spec": "The first line contains an integer n (2 ≤ n ≤ 105). The second line contains n integer numbers a1, a2, ..., an (1 ≤ ai ≤ 105).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1200,
    "file_name": "train_003.jsonl",
    "code_uid": "c408114f1cd6c91557fd82f29c30c7d1",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n2 1\", \"3\\n1 3 2\", \"2\\n1 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "t=int(input())\na=list(map(int,input().split()))\nfor i in range(1,t):\n    if a[i-1]>a[i]:\n        if sorted(a)==a[i:]+a[:i]:\n            print(t-i)\n            exit()\n        else:\n            print(-1)\n            exit()\nprint(0)\n",
    "prob_desc_created_at": "1406907000",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}