{
    "prob_desc_time_limit": "4 seconds",
    "prob_desc_sample_outputs": "[\"YES\\n1 2 2 4\", \"YES\\n8\", \"NO\", \"NO\"]",
    "src_uid": "10d6179b479e1238a51154a9a6fc13cb",
    "prob_desc_notes": null,
    "prob_desc_description": "A positive integer $$$x$$$ is called a power of two if it can be represented as $$$x = 2^y$$$, where $$$y$$$ is a non-negative integer. So, the powers of two are $$$1, 2, 4, 8, 16, \\dots$$$.You are given two positive integers $$$n$$$ and $$$k$$$. Your task is to represent $$$n$$$ as the sum of exactly $$$k$$$ powers of two.",
    "prob_desc_output_spec": "If it is impossible to represent $$$n$$$ as the sum of $$$k$$$ powers of two, print NO. Otherwise, print YES, and then print $$$k$$$ positive integers $$$b_1, b_2, \\dots, b_k$$$ such that each of $$$b_i$$$ is a power of two, and $$$\\sum \\limits_{i = 1}^{k} b_i = n$$$. If there are multiple answers, you may print any of them.",
    "prob_desc_input_spec": "The only line of the input contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 10^9$$$, $$$1 \\le k \\le 2 \\cdot 10^5$$$).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1400,
    "file_name": "train_005.jsonl",
    "code_uid": "3886d0ebd4d0231993f1fa17f1744a09",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"9 4\", \"8 1\", \"5 1\", \"3 7\"]",
    "exec_outcome": "PASSED",
    "source_code": "from heapq import heappush\nfrom heapq import heappop\n\na = []\nx = 0\ni = 0\nwhile x < 1000000000:\n    x = pow(2, i)\n    a.append(x)\n    i += 1\n\nn, k = map(int, raw_input().split())\n\nx = n\nh = []\ni = len(a) - 1\nwhile x > 0:\n    if x >= a[i]:\n        x -= a[i]\n        heappush(h, -a[i])\n    else: i -= 1\n\nif k > n or len(h) > k:\n    print 'NO'\nelse:\n    while len(h) < k:\n        x = -heappop(h)\n        if x == 1: break\n        heappush(h, -x / 2)\n        heappush(h, -x / 2)\n\n    if len(h) == k:\n        print 'YES'\n        print ' '.join(map(lambda x: str(-x), h))\n    else:\n        print 'NO'\n",
    "prob_desc_created_at": "1545921300",
    "tags": [
        "bitmasks",
        "greedy"
    ],
    "hidden_unit_tests": ""
}