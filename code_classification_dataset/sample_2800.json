{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"75 110 60\", \"6 4 6\"]",
    "src_uid": "e1abc81cea4395ba675cf6ca93261ae8",
    "prob_desc_notes": null,
    "prob_desc_description": "One day n friends met at a party, they hadn't seen each other for a long time and so they decided to make a group photo together. Simply speaking, the process of taking photos can be described as follows. On the photo, each photographed friend occupies a rectangle of pixels: the i-th of them occupies the rectangle of width wi pixels and height hi pixels. On the group photo everybody stands in a line, thus the minimum pixel size of the photo including all the photographed friends, is W × H, where W is the total sum of all widths and H is the maximum height of all the photographed friends.As is usually the case, the friends made n photos — the j-th (1 ≤ j ≤ n) photo had everybody except for the j-th friend as he was the photographer.Print the minimum size of each made photo in pixels. ",
    "prob_desc_output_spec": "Print n space-separated numbers b1, b2, ..., bn, where bi — the total number of pixels on the minimum photo containing all friends expect for the i-th one.",
    "prob_desc_input_spec": "The first line contains integer n (2 ≤ n ≤ 200 000) — the number of friends.  Then n lines follow: the i-th line contains information about the i-th friend. The line contains a pair of integers wi, hi (1 ≤ wi ≤ 10, 1 ≤ hi ≤ 1000) — the width and height in pixels of the corresponding rectangle.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1100,
    "file_name": "train_031.jsonl",
    "code_uid": "033917f1a29a54ead45c27b68ba4d647",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n1 10\\n5 5\\n10 1\", \"3\\n2 1\\n1 2\\n2 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "n = int(input())\n\nfriends = []\n\nWob = 0\nHob = [0, 0]\n\nfor i in range(n):\n    w, h = [int(j) for j in input().split()]\n    friends.append([w, h])\n    Wob += w\n    if h > Hob[0]:\n        Hob[1] = Hob[0]\n        Hob[0] = h\n    elif h > Hob[1]:\n        Hob[1] = h\n\nfor f in friends:\n    w = Wob - f[0]\n    h = Hob[0]\n    if f[1] == Hob[0]:\n        h = Hob[1]\n    print(w*h, end=\" \")\n\n\n\n\n\n\n",
    "prob_desc_created_at": "1425740400",
    "tags": [
        "dp",
        "implementation",
        "*special",
        "data structures"
    ],
    "hidden_unit_tests": ""
}