{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"YES\\n1 2 2 3 5 4 4\", \"NO\"]",
    "src_uid": "1522d9845b4ea1a903d4c81644797983",
    "prob_desc_notes": null,
    "prob_desc_description": "Vasya has an array $$$a_1, a_2, \\dots, a_n$$$.You don't know this array, but he told you $$$m$$$ facts about this array. The $$$i$$$-th fact is a triple of numbers $$$t_i$$$, $$$l_i$$$ and $$$r_i$$$ ($$$0 \\le t_i \\le 1, 1 \\le l_i &lt; r_i \\le n$$$) and it means:  if $$$t_i=1$$$ then subbarray $$$a_{l_i}, a_{l_i + 1}, \\dots, a_{r_i}$$$ is sorted in non-decreasing order;  if $$$t_i=0$$$ then subbarray $$$a_{l_i}, a_{l_i + 1}, \\dots, a_{r_i}$$$ is not sorted in non-decreasing order. A subarray is not sorted if there is at least one pair of consecutive elements in this subarray such that the former is greater than the latter. For example if $$$a = [2, 1, 1, 3, 2]$$$ then he could give you three facts: $$$t_1=1, l_1=2, r_1=4$$$ (the subarray $$$[a_2, a_3, a_4] = [1, 1, 3]$$$ is sorted), $$$t_2=0, l_2=4, r_2=5$$$ (the subarray $$$[a_4, a_5] = [3, 2]$$$ is not sorted), and $$$t_3=0, l_3=3, r_3=5$$$ (the subarray $$$[a_3, a_5] = [1, 3, 2]$$$ is not sorted).You don't know the array $$$a$$$. Find any array which satisfies all the given facts.",
    "prob_desc_output_spec": "If there is no array that satisfies these facts in only line print NO (in any letter case). If there is a solution, print YES (in any letter case). In second line print $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$) â€” the array $$$a$$$, satisfying all the given facts. If there are multiple satisfying arrays you can print any of them.",
    "prob_desc_input_spec": "The first line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\le n \\le 1000, 1 \\le m \\le 1000$$$). Each of the next $$$m$$$ lines contains three integers $$$t_i$$$, $$$l_i$$$ and $$$r_i$$$ ($$$0 \\le t_i \\le 1, 1 \\le l_i &lt; r_i \\le n$$$). If $$$t_i = 1$$$ then subbarray $$$a_{l_i}, a_{l_i + 1}, \\dots , a_{r_i}$$$ is sorted. Otherwise (if $$$t_i = 0$$$) subbarray $$$a_{l_i}, a_{l_i + 1}, \\dots , a_{r_i}$$$ is not sorted.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1800,
    "file_name": "train_029.jsonl",
    "code_uid": "5ff6d053a3c98357c7ddc7dbd5028eda",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"7 4\\n1 1 3\\n1 2 5\\n0 5 6\\n1 6 7\", \"4 2\\n1 1 4\\n0 2 3\"]",
    "exec_outcome": "PASSED",
    "source_code": "n, m = list(map(int, input().split()))\ns = [[], []]\nfor i in range(m):\n    t, l, r = list(map(int, input().split()))\n    s[t] += [[l, r]]\nyes = True\nlm = [-1] * (n-1)\nfor r in s[1]:\n    for p in range(r[0]-1, r[1]-1):\n        lm[p] = 0\nfor r in s[0]:\n    if sum(lm[r[0]-1:r[1]-1]) == 0:\n        yes = False\n        break\nif not yes:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    a = [500000000]\n    for i in range(n-1):\n        a += [a[-1] + lm[i]]\n    print(*a)\n",
    "prob_desc_created_at": "1561905900",
    "tags": [
        "constructive algorithms",
        "implementation",
        "greedy"
    ],
    "hidden_unit_tests": ""
}