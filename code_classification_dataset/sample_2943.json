{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"14\"]",
    "src_uid": "39fd7843558ed2aa6b8c997c2b8a1fad",
    "prob_desc_notes": "NoteCustomer 1 wants the items 1 and 5.pos(1) = 3, so the new positions are: [1, 3, 4, 2, 5].pos(5) = 5, so the new positions are: [5, 1, 3, 4, 2].Time taken for the first customer is 3 + 5 = 8.Customer 2 wants the items 3 and 1.pos(3) = 3, so the new positions are: [3, 5, 1, 4, 2].pos(1) = 3, so the new positions are: [1, 3, 5, 4, 2].Time taken for the second customer is 3 + 3 = 6.Total time is 8 + 6 = 14.Formally pos(x) is the index of x in the current row.",
    "prob_desc_description": "Ayush is a cashier at the shopping center. Recently his department has started a ''click and collect\" service which allows users to shop online. The store contains k items. n customers have already used the above service. Each user paid for m items. Let aij denote the j-th item in the i-th person's order.Due to the space limitations all the items are arranged in one single row. When Ayush receives the i-th order he will find one by one all the items aij (1 ≤ j ≤ m) in the row. Let pos(x) denote the position of the item x in the row at the moment of its collection. Then Ayush takes time equal to pos(ai1) + pos(ai2) + ... + pos(aim) for the i-th customer.When Ayush accesses the x-th element he keeps a new stock in the front of the row and takes away the x-th element. Thus the values are updating.Your task is to calculate the total time it takes for Ayush to process all the orders.You can assume that the market has endless stock.",
    "prob_desc_output_spec": "Print the only integer t — the total time needed for Ayush to process all the orders.",
    "prob_desc_input_spec": "The first line contains three integers n, m and k (1 ≤ n, k ≤ 100, 1 ≤ m ≤ k) — the number of users, the number of items each user wants to buy and the total number of items at the market. The next line contains k distinct integers pl (1 ≤ pl ≤ k) denoting the initial positions of the items in the store. The items are numbered with integers from 1 to k. Each of the next n lines contains m distinct integers aij (1 ≤ aij ≤ k) — the order of the i-th person.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 2",
    "lang_cluster": "Python",
    "difficulty": 1400,
    "file_name": "train_036.jsonl",
    "code_uid": "ea77e2b0383c54ad8d155eeed8b4be56",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 2 5\\n3 4 1 2 5\\n1 5\\n3 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin\n\nl2i = lambda l: [int(x) for x in l.strip().split()]\n\nn, m, k = l2i(stdin.readline())\nshop = l2i(stdin.readline())\n\ntime = 0\nwhile n != 0:\n    n -= 1\n    for commodity in l2i(stdin.readline()):\n        sw = commodity\n        pos = 0\n        while shop[0] != sw or pos == 0:\n            sw, shop[pos] = shop[pos], sw\n            pos += 1\n        \n        time += pos\n\n    \nprint time\n",
    "prob_desc_created_at": "1461164400",
    "tags": [
        "brute force"
    ],
    "hidden_unit_tests": ""
}