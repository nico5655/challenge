{
    "prob_desc_time_limit": "3 seconds",
    "prob_desc_sample_outputs": "[\"8\", \"1\", \"0\"]",
    "src_uid": "d3b5b76f0853cff6c69b29e68a853ff7",
    "prob_desc_notes": null,
    "prob_desc_description": "Parmida is a clever girl and she wants to participate in Olympiads this year. Of course she wants her partner to be clever too (although he's not)! Parmida has prepared the following test problem for Pashmak.There is a sequence a that consists of n integers a1, a2, ..., an. Let's denote f(l, r, x) the number of indices k such that: l ≤ k ≤ r and ak = x. His task is to calculate the number of pairs of indicies i, j (1 ≤ i &lt; j ≤ n) such that f(1, i, ai) &gt; f(j, n, aj).Help Pashmak with the test.",
    "prob_desc_output_spec": "Print a single integer — the answer to the problem.",
    "prob_desc_input_spec": "The first line of the input contains an integer n (1 ≤ n ≤ 106). The second line contains n space-separated integers a1, a2, ..., an (1 ≤ ai ≤ 109).",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 2",
    "lang_cluster": "Python",
    "difficulty": 1800,
    "file_name": "train_016.jsonl",
    "code_uid": "fa6da38b58288cb7890e59ea4477fd00",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"7\\n1 2 1 1 2 2 1\", \"3\\n1 1 1\", \"5\\n1 2 3 4 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin, stdout\nfrom collections import Counter, defaultdict\nfrom itertools import permutations, combinations\nraw_input = stdin.readline\npr = stdout.write\nmod=10**9+7\n\ndef ni():\n    return int(raw_input())\n\n\ndef li():\n    return map(int,raw_input().split())\n\n\ndef pn(n):\n    stdout.write(str(n)+'\\n')\n\n\ndef pa(arr):\n    pr(' '.join(map(str,arr))+'\\n')\n\n# fast read function for total integer input\n\ndef inp():\n    # this function returns whole input of\n    # space/line seperated integers\n    # Use Ctrl+D to flush stdin.\n    return map(int,stdin.read().split())\n\nrange = xrange # not for python 3.0+\n\n#main code\n\nn=ni()\nBITTree=[0]*(n+1)\ndef gs(i): \n    s = 0\n    i = i+1\n    while i > 0:  \n        s += BITTree[i] \n        i -= i & (-i) \n    return s \ndef ub(i ,v): \n    i += 1\n    while i <= n: \n        BITTree[i] += v \n        i += i & (-i) \n\nl=li()\nl1,l2=[],[]\nd=Counter()\nfor i in range(n-1):\n    d[l[i]]+=1\n    l1.append(d[l[i]])\nd=Counter()\nfor i in range(n-1,0,-1):\n    d[l[i]]+=1\n    l2.append(d[l[i]])\nans=0\nl1=l1[::-1]\nfor i in range(n-1):\n    ub(l2[i]+1,1)\n    ans+=gs(l1[i])\npn(ans)\n",
    "prob_desc_created_at": "1408116600",
    "tags": [
        "data structures",
        "sortings",
        "divide and conquer"
    ],
    "hidden_unit_tests": ""
}