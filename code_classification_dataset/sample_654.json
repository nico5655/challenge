{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"1 4 7\", \"1 1\"]",
    "src_uid": "aab7f7cce0b704051627b625294635bc",
    "prob_desc_notes": "NoteIn the first example, we can swap $$$1$$$ and $$$4$$$ since $$$1+4=5$$$, which is odd.",
    "prob_desc_description": "You're given an array $$$a$$$ of length $$$n$$$. You can perform the following operation on it as many times as you want:  Pick two integers $$$i$$$ and $$$j$$$ $$$(1 \\le i,j \\le n)$$$ such that $$$a_i+a_j$$$ is odd, then swap $$$a_i$$$ and $$$a_j$$$. What is lexicographically the smallest array you can obtain?An array $$$x$$$ is lexicographically smaller than an array $$$y$$$ if there exists an index $$$i$$$ such that $$$x_i&lt;y_i$$$, and $$$x_j=y_j$$$ for all $$$1 \\le j &lt; i$$$. Less formally, at the first index $$$i$$$ in which they differ, $$$x_i&lt;y_i$$$",
    "prob_desc_output_spec": "The only line contains $$$n$$$ space-separated integers, the lexicographically smallest array you can obtain.",
    "prob_desc_input_spec": "The first line contains an integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$) — the number of elements in the array $$$a$$$. The second line contains $$$n$$$ space-separated integers $$$a_1$$$, $$$a_2$$$, $$$\\ldots$$$, $$$a_{n}$$$ ($$$1 \\le a_i \\le 10^9$$$) — the elements of the array $$$a$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1200,
    "file_name": "train_003.jsonl",
    "code_uid": "171fd0476cfd3f8f189b6f0ca271f9d5",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n4 1 7\", \"2\\n1 1\"]",
    "exec_outcome": "PASSED",
    "source_code": "#fuck anotherr python codd \n#this is Mid night python fuck\n\n\nnumber=input()\n \ncomeOnBaby=list(map(int,input().split()))\n\n\n\ncount_baby=0\n\nfor bbu in comeOnBaby:\n    count_baby+=bbu%2\n\n\nif(count_baby==0 or count_baby==len(comeOnBaby)):\n     print(*comeOnBaby)\nelse:\n    #comeOnBaby.sort()\n    print(*sorted(comeOnBaby))",
    "prob_desc_created_at": "1559570700",
    "tags": [
        "sortings"
    ],
    "hidden_unit_tests": ""
}