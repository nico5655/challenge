{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"1\\n2\\n9\\n10\\n26\"]",
    "src_uid": "ea011f93837fdf985f7eaa7a43e22cc8",
    "prob_desc_notes": "NoteExplanations for the two first test cases of the example:  if $$$n = 4$$$, then for every integer $$$x$$$ such that $$$1 \\le x \\le n$$$, $$$\\dfrac{x}{f(f(x))} = 1$$$;  if $$$n = 37$$$, then for some integers $$$x$$$ such that $$$1 \\le x \\le n$$$, $$$\\dfrac{x}{f(f(x))} = 1$$$ (for example, if $$$x = 23$$$, $$$f(f(x)) = 23$$$,$$$\\dfrac{x}{f(f(x))} = 1$$$); and for other values of $$$x$$$, $$$\\dfrac{x}{f(f(x))} = 10$$$ (for example, if $$$x = 30$$$, $$$f(f(x)) = 3$$$, $$$\\dfrac{x}{f(f(x))} = 10$$$). So, there are two different values of $$$g(x)$$$. ",
    "prob_desc_description": "Let's define a function $$$f(x)$$$ ($$$x$$$ is a positive integer) as follows: write all digits of the decimal representation of $$$x$$$ backwards, then get rid of the leading zeroes. For example, $$$f(321) = 123$$$, $$$f(120) = 21$$$, $$$f(1000000) = 1$$$, $$$f(111) = 111$$$.Let's define another function $$$g(x) = \\dfrac{x}{f(f(x))}$$$ ($$$x$$$ is a positive integer as well).Your task is the following: for the given positive integer $$$n$$$, calculate the number of different values of $$$g(x)$$$ among all numbers $$$x$$$ such that $$$1 \\le x \\le n$$$.",
    "prob_desc_output_spec": "For each test case, print one integer — the number of different values of the function $$$g(x)$$$, if $$$x$$$ can be any integer from $$$[1, n]$$$.",
    "prob_desc_input_spec": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases. Each test case consists of one line containing one integer $$$n$$$ ($$$1 \\le n &lt; 10^{100}$$$). This integer is given without leading zeroes.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": null,
    "file_name": "train_020.jsonl",
    "code_uid": "b1705e42199181a59f2604e7ee326801",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n4\\n37\\n998244353\\n1000000007\\n12345678901337426966631415\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import stdin, stdout\nreadline, writeline = stdin.readline, stdout.write\n\n\ndef iint():\n    return int(readline().strip())\n\n\nfor _ in range(iint()):\n    n = readline().strip()\n    writeline(\"{}\\n\".format(len(n)))\n",
    "prob_desc_created_at": "1606746900",
    "tags": [
        "constructive algorithms",
        "number theory",
        "math"
    ],
    "hidden_unit_tests": ""
}