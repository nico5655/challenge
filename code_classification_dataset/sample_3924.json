{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"9\\n15\\n31\\n13\"]",
    "src_uid": "0efa3ce46108ca604d95e15d02757b44",
    "prob_desc_notes": "NoteHere are the sequences with the smallest scores for the example. The underlined elements are the extra integers. Note that there exist other sequences with this smallest score.   $$$\\underline{1}, \\underline{2}, \\underline{3}, \\underline{4}, \\underline{5}, 10$$$  $$$\\underline{7}, 7, \\underline{6}, \\underline{4}, 2, \\underline{2}, \\underline{1}, \\underline{3}, \\underline{5}, \\underline{8}, 10$$$  $$$6, \\underline{1}, 1, \\underline{2}, 5, 7, 3, 3, 9, 10, 10, 1$$$  $$$1, 3, \\underline{1}, 1, 2, \\underline{2}, \\underline{3}, \\underline{4}, \\underline{5}, \\underline{6}, \\underline{7}, \\underline{8}, \\underline{9}, \\underline{10}$$$ ",
    "prob_desc_description": "You are given a sequence of $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$. You are also given $$$x$$$ integers $$$1, 2, \\dots, x$$$.You are asked to insert each of the extra integers into the sequence $$$a$$$. Each integer can be inserted at the beginning of the sequence, at the end of the sequence, or between any elements of the sequence.The score of the resulting sequence $$$a'$$$ is the sum of absolute differences of adjacent elements in it $$$\\left(\\sum \\limits_{i=1}^{n+x-1} |a'_i - a'_{i+1}|\\right)$$$.What is the smallest possible score of the resulting sequence $$$a'$$$?",
    "prob_desc_output_spec": "For each testcase, print a single integer — the smallest sum of absolute differences of adjacent elements of the sequence after you insert the extra integers into it.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of testcases. The first line of each testcase contains two integers $$$n$$$ and $$$x$$$ ($$$1 \\le n, x \\le 2 \\cdot 10^5$$$) — the length of the sequence and the number of extra integers. The second line of each testcase contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 2 \\cdot 10^5$$$). The sum of $$$n$$$ over all testcases doesn't exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_086.jsonl",
    "code_uid": "716ca652241ec25b926459dc85467de7",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n\\n1 5\\n\\n10\\n\\n3 8\\n\\n7 2 10\\n\\n10 2\\n\\n6 1 5 7 3 3 9 10 10 1\\n\\n4 10\\n\\n1 3 1 2\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\r\nfrom array import array\r\n\r\ninput = lambda: sys.stdin.buffer.readline().decode().strip()\r\nout = []\r\n\r\nfor _ in range(int(input())):\r\n    n, x = map(int, input().split())\r\n    a = array('i', [int(x) for x in input().split()])\r\n    mi, ma, ans = 1, x, 10 ** 18\r\n    diff = sum(array('i', [abs(a[i] - a[i - 1]) for i in range(1, n)]))\r\n\r\n    for _ in range(2):\r\n        pre = abs(ma - a[0])\r\n        for i in range(1, n):\r\n            tem = diff - abs(a[i] - a[i - 1]) + abs(mi - a[i - 1])\r\n            ans = min(ans, tem + pre + abs(a[i] - mi), tem + ma - mi + abs(a[i] - ma))\r\n            pre = min(pre, abs(a[i - 1] - ma) + abs(a[i] - ma) - abs(a[i] - a[i - 1]))\r\n\r\n        ans = min(ans, diff + abs(mi - a[-1]) + pre, diff + ma - mi + min(abs(a[0] - ma), abs(a[0] - mi)))\r\n        a.reverse()\r\n    out.append(ans)\r\n\r\nprint('\\n'.join(map(str, out)))\r\n",
    "prob_desc_created_at": "1650638100",
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ],
    "hidden_unit_tests": ""
}