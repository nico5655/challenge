{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"7\", \"100\"]",
    "src_uid": "6bb2793e275426eb076972fab69d0eba",
    "prob_desc_notes": null,
    "prob_desc_description": "There is a given string S consisting of N symbols. Your task is to find the number of ordered pairs of integers i and j such that1. 1 ≤ i, j ≤ N2. S[i] = S[j], that is the i-th symbol of string S is equal to the j-th.",
    "prob_desc_output_spec": "Print a single number which represents the number of pairs i and j with the needed property. Pairs (x, y) and (y, x) should be considered different, i.e. the ordered pairs count.",
    "prob_desc_input_spec": "The single input line contains S, consisting of lowercase Latin letters and digits. It is guaranteed that string S in not empty and its length does not exceed 105.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1500,
    "file_name": "train_004.jsonl",
    "code_uid": "fc92b516d112816ef177feeed05e3455",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"great10\", \"aaaaaaaaaa\"]",
    "exec_outcome": "PASSED",
    "source_code": "def f(x=input()):\n\td = dict()\n\tfor i in x:\n\t\tif i in d: d[i]+=1\n\t\telse: d[i] = 1\n\treturn sum([j*j for _,j in d.items()])\nprint(f())",
    "prob_desc_created_at": "1292862000",
    "tags": [
        "strings"
    ],
    "hidden_unit_tests": ""
}