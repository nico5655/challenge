{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"2\\n4\\n2\\n3\\n4\", \"1\\n2\\n1\\n2\"]",
    "src_uid": "736b35e915e67ca63e07386059aca2e5",
    "prob_desc_notes": "NoteIn the first example, we can get:\"Wu\" of (\"01\", \"00\") is $$$40$$$.\"Wu\" of (\"10\", \"00\") is $$$20$$$.\"Wu\" of (\"11\", \"00\") is $$$0$$$.\"Wu\" of (\"01\", \"11\") is $$$20$$$.\"Wu\" of (\"10\", \"11\") is $$$40$$$.\"Wu\" of (\"11\", \"11\") is $$$60$$$.In the first query, pairs (\"11\", \"00\") and (\"10\", \"00\") satisfy the condition since their \"Wu\" is not greater than $$$20$$$.In the second query, all strings satisfy the condition.In the third query, pairs (\"01\", \"11\") and (\"01\", \"11\") satisfy the condition. Note that since there are two \"01\" strings in the multiset, the answer is $$$2$$$, not $$$1$$$.In the fourth query, since $$$k$$$ was increased, pair (\"10\", \"11\") satisfies the condition too.In the fifth query, since $$$k$$$ was increased, pair (\"11\", \"11\") satisfies the condition too.",
    "prob_desc_description": "Childan is making up a legendary story and trying to sell his forgery — a necklace with a strong sense of \"Wu\" to the Kasouras. But Mr. Kasoura is challenging the truth of Childan's story. So he is going to ask a few questions about Childan's so-called \"personal treasure\" necklace.This \"personal treasure\" is a multiset $$$S$$$ of $$$m$$$ \"01-strings\".A \"01-string\" is a string that contains $$$n$$$ characters \"0\" and \"1\". For example, if $$$n=4$$$, strings \"0110\", \"0000\", and \"1110\" are \"01-strings\", but \"00110\" (there are $$$5$$$ characters, not $$$4$$$) and \"zero\" (unallowed characters) are not.Note that the multiset $$$S$$$ can contain equal elements.Frequently, Mr. Kasoura will provide a \"01-string\" $$$t$$$ and ask Childan how many strings $$$s$$$ are in the multiset $$$S$$$ such that the \"Wu\" value of the pair $$$(s, t)$$$ is not greater than $$$k$$$. Mrs. Kasoura and Mr. Kasoura think that if $$$s_i = t_i$$$ ($$$1\\leq i\\leq n$$$) then the \"Wu\" value of the character pair equals to $$$w_i$$$, otherwise $$$0$$$. The \"Wu\" value of the \"01-string\" pair is the sum of the \"Wu\" values of every character pair. Note that the length of every \"01-string\" is equal to $$$n$$$.For example, if $$$w=[4, 5, 3, 6]$$$, \"Wu\" of (\"1001\", \"1100\") is $$$7$$$ because these strings have equal characters only on the first and third positions, so $$$w_1+w_3=4+3=7$$$.You need to help Childan to answer Mr. Kasoura's queries. That is to find the number of strings in the multiset $$$S$$$ such that the \"Wu\" value of the pair is not greater than $$$k$$$.",
    "prob_desc_output_spec": "For each query, print the answer for this query.",
    "prob_desc_input_spec": "The first line contains three integers $$$n$$$, $$$m$$$, and $$$q$$$ ($$$1\\leq n\\leq 12$$$, $$$1\\leq q, m\\leq 5\\cdot 10^5$$$) — the length of the \"01-strings\", the size of the multiset $$$S$$$, and the number of queries. The second line contains $$$n$$$ integers $$$w_1, w_2, \\ldots, w_n$$$ ($$$0 \\le w_i \\le 100$$$) — the value of the $$$i$$$-th caracter. Each of the next $$$m$$$ lines contains the \"01-string\" $$$s$$$ of length $$$n$$$ — the string in the multiset $$$S$$$. Each of the next $$$q$$$ lines contains the \"01-string\" $$$t$$$ of length $$$n$$$ and integer $$$k$$$ ($$$0\\leq k\\leq 100$$$) — the query.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 1900,
    "file_name": "train_026.jsonl",
    "code_uid": "30f11c77a7665693b48fba9b811689e4",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2 4 5\\n40 20\\n01\\n01\\n10\\n11\\n00 20\\n00 40\\n11 20\\n11 40\\n11 60\", \"1 2 4\\n100\\n0\\n1\\n0 0\\n0 100\\n1 0\\n1 100\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\nfrom collections import Counter\n\nn,m,q=map(int,sys.stdin.readline().split())\nw=list(map(int,sys.stdin.readline().split()))\nS=[int(sys.stdin.readline(),2) for i in range(m)]\nQ=[tuple(sys.stdin.readline().split()) for i in range(q)]\ncounter=Counter(S)\nstmax=100\nre=2**n\nw.reverse()\n\nscore=[None]*(re)\n\nfor i in range(re):\n    ANS=0\n    for j in range(n):\n        if i &(1<<j)==0:\n            ANS+=w[j]\n\n    score[i]=ANS\n\nSTN=[[0 for j in range(stmax+1)] for i in range(re)]\n\nfor i in range(re):\n    for j in range(re):\n        if score[i^j]<=stmax:\n            STN[i][score[i^j]]+=counter[j]\n\n    for j in range(1,stmax+1):\n        STN[i][j]=STN[i][j]+STN[i][j-1]\n\nfor q in Q:\n    sys.stdout.write(str(STN[int(q[0],2)][int(q[1])])+\"\\n\")\n",
    "prob_desc_created_at": "1533737100",
    "tags": [
        "data structures",
        "bitmasks",
        "brute force"
    ],
    "hidden_unit_tests": ""
}