{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"942477.796077000\", \"3983.539484752\"]",
    "src_uid": "49a647a99eab59a61b42515d4289d3cd",
    "prob_desc_notes": "NoteIn first sample, the optimal way is to choose the cake number 1.In second sample, the way to get the maximum volume is to use cakes with indices 1, 2 and 4.",
    "prob_desc_description": "As you know, every birthday party has a cake! This time, Babaei is going to prepare the very special birthday party's cake.Simple cake is a cylinder of some radius and height. The volume of the simple cake is equal to the volume of corresponding cylinder. Babaei has n simple cakes and he is going to make a special cake placing some cylinders on each other.However, there are some additional culinary restrictions. The cakes are numbered in such a way that the cake number i can be placed only on the table or on some cake number j where j &lt; i. Moreover, in order to impress friends Babaei will put the cake i on top of the cake j only if the volume of the cake i is strictly greater than the volume of the cake j.Babaei wants to prepare a birthday cake that has a maximum possible total volume. Help him find this value.",
    "prob_desc_output_spec": "Print the maximum volume of the cake that Babaei can make. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 6. Namely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .",
    "prob_desc_input_spec": "The first line of the input contains a single integer n (1 ≤ n ≤ 100 000) — the number of simple cakes Babaei has. Each of the following n lines contains two integers ri and hi (1 ≤ ri, hi ≤ 10 000), giving the radius and height of the i-th cake.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 2000,
    "file_name": "train_014.jsonl",
    "code_uid": "2e32dbeec14d6d24ed414846b99623c5",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n100 30\\n40 10\", \"4\\n1 1\\n9 7\\n1 4\\n10 7\"]",
    "exec_outcome": "PASSED",
    "source_code": "from sys import *\nt = list(map(int, stdin.read().split()))\np = [t[i + 1] * t[i] ** 2 for i in range(1, len(t), 2)]\nk = {v: j for j, v in enumerate(sorted(set(p)))}\nd = [0] * (len(k) + 1)\nfor v in p: \n    j = k[v]\n    i = j + 1\n    q = 0\n    while j > 0:\n        q = max(d[j], q)\n        j -= j & -j\n    q += v\n    while i < len(d):\n        d[i] = max(d[i], q)\n        i += i & -i\nprint(max(d) * 3.14159265)",
    "prob_desc_created_at": "1455986100",
    "tags": [
        "data structures",
        "dp"
    ],
    "hidden_unit_tests": ""
}