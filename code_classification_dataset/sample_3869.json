{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"10\\n0\\n2\\n7\"]",
    "src_uid": "aec97dc779ba6b1d291fb1031dab93a7",
    "prob_desc_notes": "NoteIn the first test case, you should decrease $$$a_1$$$ $$$10$$$ times to get the sum lower or equal to $$$k = 10$$$.In the second test case, the sum of array $$$a$$$ is already less or equal to $$$69$$$, so you don't need to change it.In the third test case, you can, for example:   set $$$a_4 = a_3 = 1$$$;  decrease $$$a_4$$$ by one, and get $$$a_4 = 0$$$.  As a result, you'll get array $$$[1, 2, 1, 0, 1, 2, 1]$$$ with sum less or equal to $$$8$$$ in $$$1 + 1 = 2$$$ steps.In the fourth test case, you can, for example:   choose $$$a_7$$$ and decrease in by one $$$3$$$ times; you'll get $$$a_7 = -2$$$;  choose $$$4$$$ elements $$$a_6$$$, $$$a_8$$$, $$$a_9$$$ and $$$a_{10}$$$ and them equal to $$$a_7 = -2$$$.  As a result, you'll get array $$$[1, 2, 3, 1, 2, -2, -2, -2, -2, -2]$$$ with sum less or equal to $$$1$$$ in $$$3 + 4 = 7$$$ steps.",
    "prob_desc_description": "You are given an integer array $$$a_1, a_2, \\dots, a_n$$$ and integer $$$k$$$.In one step you can   either choose some index $$$i$$$ and decrease $$$a_i$$$ by one (make $$$a_i = a_i - 1$$$);  or choose two indices $$$i$$$ and $$$j$$$ and set $$$a_i$$$ equal to $$$a_j$$$ (make $$$a_i = a_j$$$). What is the minimum number of steps you need to make the sum of array $$$\\sum\\limits_{i=1}^{n}{a_i} \\le k$$$? (You are allowed to make values of array negative).",
    "prob_desc_output_spec": "For each test case, print one integer — the minimum number of steps to make $$$\\sum\\limits_{i=1}^{n}{a_i} \\le k$$$.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$; $$$1 \\le k \\le 10^{15}$$$) — the size of array $$$a$$$ and upper bound on its sum. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$) — the array itself. It's guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\cdot 10^5$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1600,
    "file_name": "train_085.jsonl",
    "code_uid": "d1d77cb2fd9085a21c5fa0372457b206",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n1 10\\n20\\n2 69\\n6 9\\n7 8\\n1 2 1 3 1 2 1\\n10 1\\n1 2 3 1 2 6 1 6 8 10\"]",
    "exec_outcome": "PASSED",
    "source_code": "import math\r\nfor _ in range(int(input())):\r\n    n, k = map(int, input().split())\r\n    v = [int(i) for i in input().split()]\r\n    v.sort()\r\n    ans=v[0]+n-1\r\n    for i in range(n):\r\n        if i > 0:\r\n            k-=v[i]\r\n        temp=k\r\n        temp/=(n-i)\r\n        temp=math.floor(temp)\r\n        w=temp\r\n        ans=min(ans,max(0,v[0]-w)+n-i-1)    \r\n    print(ans)",
    "prob_desc_created_at": "1640615700",
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "sortings"
    ],
    "hidden_unit_tests": ""
}