{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"]",
    "src_uid": "cdafe800094113515e1de1acb60c4bb5",
    "prob_desc_notes": null,
    "prob_desc_description": "You are given two segments $$$[l_1; r_1]$$$ and $$$[l_2; r_2]$$$ on the $$$x$$$-axis. It is guaranteed that $$$l_1 &lt; r_1$$$ and $$$l_2 &lt; r_2$$$. Segments may intersect, overlap or even coincide with each other.    The example of two segments on the $$$x$$$-axis. Your problem is to find two integers $$$a$$$ and $$$b$$$ such that $$$l_1 \\le a \\le r_1$$$, $$$l_2 \\le b \\le r_2$$$ and $$$a \\ne b$$$. In other words, you have to choose two distinct integer points in such a way that the first point belongs to the segment $$$[l_1; r_1]$$$ and the second one belongs to the segment $$$[l_2; r_2]$$$.It is guaranteed that the answer exists. If there are multiple answers, you can print any of them.You have to answer $$$q$$$ independent queries.",
    "prob_desc_output_spec": "Print $$$2q$$$ integers. For the $$$i$$$-th query print two integers $$$a_i$$$ and $$$b_i$$$ — such numbers that $$$l_{1_i} \\le a_i \\le r_{1_i}$$$, $$$l_{2_i} \\le b_i \\le r_{2_i}$$$ and $$$a_i \\ne b_i$$$. Queries are numbered in order of the input. It is guaranteed that the answer exists. If there are multiple answers, you can print any.",
    "prob_desc_input_spec": "The first line of the input contains one integer $$$q$$$ ($$$1 \\le q \\le 500$$$) — the number of queries. Each of the next $$$q$$$ lines contains four integers $$$l_{1_i}, r_{1_i}, l_{2_i}$$$ and $$$r_{2_i}$$$ ($$$1 \\le l_{1_i}, r_{1_i}, l_{2_i}, r_{2_i} \\le 10^9, l_{1_i} &lt; r_{1_i}, l_{2_i} &lt; r_{2_i}$$$) — the ends of the segments in the $$$i$$$-th query.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_004.jsonl",
    "code_uid": "1126a1e8aa45313dfd6269c685ac7890",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\"]",
    "exec_outcome": "PASSED",
    "source_code": "n=int(input())\nfor i in range(n):\n   k=list(map(int,input().split()))\n   print(k[0],end=' ')\n   if k[0]!=k[2]:\n     print(k[2])\n   else:\n     print(k[3])\n\n\n\n",
    "prob_desc_created_at": "1548254100",
    "tags": [
        "implementation"
    ],
    "hidden_unit_tests": ""
}