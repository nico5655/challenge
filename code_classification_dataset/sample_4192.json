{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"? 3\\n\\n? 2\\n\\n? 4\\n\\n! 4 2 1 3\\n\\n? 2\\n\\n? 3\\n\\n? 2\\n\\n! 1 3 4 2\"]",
    "src_uid": "96ec983bfadc9e96e36ebb8ffc5279d3",
    "prob_desc_notes": "NoteIn the first test case the hidden permutation $$$p = [4, 2, 1, 3]$$$.Before the first query $$$q = [1, 2, 3, 4]$$$ so answer for the query will be $$$q_3 = 3$$$.Before the second query $$$q = [4, 2, 1, 3]$$$ so answer for the query will be $$$q_2 = 2$$$.Before the third query $$$q = [3, 2, 4, 1]$$$ so answer for the query will be $$$q_4 = 1$$$.In the second test case the hidden permutation $$$p = [1, 3, 4, 2]$$$.Empty strings are given only for better readability. There will be no empty lines in the testing system.",
    "prob_desc_description": "This is an interactive problem.The jury has a permutation $$$p$$$ of length $$$n$$$ and wants you to guess it. For this, the jury created another permutation $$$q$$$ of length $$$n$$$. Initially, $$$q$$$ is an identity permutation ($$$q_i = i$$$ for all $$$i$$$).You can ask queries to get $$$q_i$$$ for any $$$i$$$ you want. After each query, the jury will change $$$q$$$ in the following way:   At first, the jury will create a new permutation $$$q'$$$ of length $$$n$$$ such that $$$q'_i = q_{p_i}$$$ for all $$$i$$$.  Then the jury will replace permutation $$$q$$$ with pemutation $$$q'$$$. You can make no more than $$$2n$$$ queries in order to quess $$$p$$$.",
    "prob_desc_output_spec": null,
    "prob_desc_input_spec": "The first line of input contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 1700,
    "file_name": "train_092.jsonl",
    "code_uid": "c8a94476bea447a91eff8d62bcd135f4",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n4\\n\\n3\\n\\n2\\n\\n1\\n\\n4\\n\\n2\\n\\n4\\n\\n4\"]",
    "exec_outcome": "PASSED",
    "source_code": "import sys\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = [0] * n\n    todo = {j for j in range(1, n + 1)}\n    while todo:\n        x = todo.pop()\n        todo.add(x)\n        st, ls = set(), []\n        while True:\n            print('?', x)\n            sys.stdout.flush()\n            y = int(input())\n            if y in st:\n                break\n            else:\n                st.add(y)\n                ls.append(y)\n        if len(ls) == 1:\n            p[x - 1] = x\n            todo.remove(x)\n        else:\n            for j in range(len(ls)):\n                p[ls[j] - 1] = ls[(j + 1) % len(ls)]\n            for x in st:\n                todo.remove(x)\n    print('!', ' '.join(map(str, p)))\n    sys.stdout.flush()",
    "prob_desc_created_at": "1641220500",
    "tags": [
        "dfs and similar",
        "interactive",
        "math"
    ],
    "hidden_unit_tests": ""
}