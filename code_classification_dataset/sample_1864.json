{
    "prob_desc_time_limit": "2 seconds",
    "prob_desc_sample_outputs": "[\"2 1 4 3\", \"6 5 4 3 2 1\"]",
    "src_uid": "8051385dab9d7286f54fd332c64e836e",
    "prob_desc_notes": "NoteIn the first sample, contestant 1 and 2 will be teammates and so do contestant 3 and 4, so the teammate of contestant 1, 2, 3, 4 will be 2, 1, 4, 3 respectively.",
    "prob_desc_description": "There is a programing contest named SnakeUp, 2n people want to compete for it. In order to attend this contest, people need to form teams of exactly two people. You are given the strength of each possible combination of two people. All the values of the strengths are distinct.Every contestant hopes that he can find a teammate so that their team’s strength is as high as possible. That is, a contestant will form a team with highest strength possible by choosing a teammate from ones who are willing to be a teammate with him/her. More formally, two people A and B may form a team if each of them is the best possible teammate (among the contestants that remain unpaired) for the other one. Can you determine who will be each person’s teammate?",
    "prob_desc_output_spec": "Output a line containing 2n numbers. The i-th number should represent the number of teammate of i-th person.",
    "prob_desc_input_spec": "There are 2n lines in the input.  The first line contains an integer n (1 ≤ n ≤ 400) — the number of teams to be formed. The i-th line (i &gt; 1) contains i - 1 numbers ai1, ai2, ... , ai(i - 1). Here aij (1 ≤ aij ≤ 106, all aij are distinct) denotes the strength of a team consisting of person i and person j (people are numbered starting from 1.)",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 1300,
    "file_name": "train_014.jsonl",
    "code_uid": "aec9fe93f3e18f6f2f8e697696cbce0b",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"2\\n6\\n1 2\\n3 4 5\", \"3\\n487060\\n3831 161856\\n845957 794650 976977\\n83847 50566 691206 498447\\n698377 156232 59015 382455 626960\"]",
    "exec_outcome": "PASSED",
    "source_code": "#!/usr/bin/python3\nn = int(input())\ndata = list()\nfor i in range(1,2*n):\n  s=input()\n  k=list(map(int,s.split(\" \")))\n  m=len(k)\n  for j in range(0,m):\n    data.append((k[j],(i,j)))\ndata.sort(key=lambda d:d[0],reverse=True)\nl = len(data)\nmemo = [-1]*(2*n)\nfor i in range(0,l):\n  (d0,d1)=data[i][1]\n  if memo[d0] < 0 and memo[d1] < 0:\n    memo[d0]=d1+1\n    memo[d1]=d0+1\nprint(\" \".join(map(str,memo)))\n    \n  \n",
    "prob_desc_created_at": "1442416500",
    "tags": [
        "implementation",
        "sortings",
        "brute force"
    ],
    "hidden_unit_tests": ""
}