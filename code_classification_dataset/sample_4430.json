{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"0\\n1\\n0\"]",
    "src_uid": "5bffe38e3ac9511a30ee02b4ec5cb1d5",
    "prob_desc_notes": "NoteNote that after applying a few operations, the values of $$$a_1$$$, $$$a_2$$$ and $$$a_3$$$ may become negative.In the first test case, $$$4$$$ is already the Arithmetic Mean of $$$3$$$ and $$$5$$$.$$$d(3, 4, 5) = |3 + 5 - 2 \\cdot 4| = 0$$$In the second test case, we can apply the following operation:$$$(2, 2, 6)$$$ $$$\\xrightarrow[\\text{increment $$$a_2$$$}]{\\text{decrement $$$a_1$$$}}$$$ $$$(1, 3, 6)$$$$$$d(1, 3, 6) = |1 + 6 - 2 \\cdot 3| = 1$$$It can be proven that answer can not be improved any further.In the third test case, we can apply the following operations:$$$(1, 6, 5)$$$ $$$\\xrightarrow[\\text{increment $$$a_3$$$}]{\\text{decrement $$$a_2$$$}}$$$ $$$(1, 5, 6)$$$ $$$\\xrightarrow[\\text{increment $$$a_1$$$}]{\\text{decrement $$$a_2$$$}}$$$ $$$(2, 4, 6)$$$$$$d(2, 4, 6) = |2 + 6 - 2 \\cdot 4| = 0$$$",
    "prob_desc_description": "A number $$$a_2$$$ is said to be the arithmetic mean of two numbers $$$a_1$$$ and $$$a_3$$$, if the following condition holds: $$$a_1 + a_3 = 2\\cdot a_2$$$. We define an arithmetic mean deviation of three numbers $$$a_1$$$, $$$a_2$$$ and $$$a_3$$$ as follows: $$$d(a_1, a_2, a_3) = |a_1 + a_3 - 2 \\cdot a_2|$$$.Arithmetic means a lot to Jeevan. He has three numbers $$$a_1$$$, $$$a_2$$$ and $$$a_3$$$ and he wants to minimize the arithmetic mean deviation $$$d(a_1, a_2, a_3)$$$. To do so, he can perform the following operation any number of times (possibly zero):  Choose $$$i, j$$$ from $$$\\{1, 2, 3\\}$$$ such that $$$i \\ne j$$$ and increment $$$a_i$$$ by $$$1$$$ and decrement $$$a_j$$$ by $$$1$$$ Help Jeevan find out the minimum value of $$$d(a_1, a_2, a_3)$$$ that can be obtained after applying the operation any number of times.",
    "prob_desc_output_spec": "For each test case, output the minimum value of $$$d(a_1, a_2, a_3)$$$ that can be obtained after applying the operation any number of times.",
    "prob_desc_input_spec": "The first line contains a single integer $$$t$$$ $$$(1 \\le t \\le 5000)$$$  — the number of test cases. The first and only line of each test case contains three integers $$$a_1$$$, $$$a_2$$$ and $$$a_3$$$ $$$(1 \\le a_1, a_2, a_3 \\le 10^{8})$$$.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "PyPy 3-64",
    "lang_cluster": "Python",
    "difficulty": 800,
    "file_name": "train_097.jsonl",
    "code_uid": "6976109a28fc64a00f32a33fc4c8bc9d",
    "prob_desc_memory_limit": "256 megabytes",
    "prob_desc_sample_inputs": "[\"3\\n3 4 5\\n2 2 6\\n1 6 5\"]",
    "exec_outcome": "PASSED",
    "source_code": "for x in range(int(input())):\r\n    a,b,c=sorted([int(x) for x in input().split()])\r\n    a1=abs(2*b-a-c)//3\r\n    a2=a1+1\r\n    print (min(abs(a-a1+c-2*(b+a1)) ,abs( a+a1+c-2*(b-a1)) , abs(a-a2+c-2*(b+a2)) ,abs( a+a2+c-2*(b-a2)) ))",
    "prob_desc_created_at": "1636727700",
    "tags": [
        "math",
        "number theory"
    ],
    "hidden_unit_tests": ""
}