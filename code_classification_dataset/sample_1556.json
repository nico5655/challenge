{
    "prob_desc_time_limit": "1 second",
    "prob_desc_sample_outputs": "[\"5\\n3\\n4\\n0\"]",
    "src_uid": "e26b0b117593c159b7f01cfac66a71d1",
    "prob_desc_notes": "NoteIn the first test case, $$$A=\\left\\{0,1,2\\right\\},B=\\left\\{0,1,5\\right\\}$$$ is a possible choice.In the second test case, $$$A=\\left\\{0,1,2\\right\\},B=\\varnothing$$$ is a possible choice.In the third test case, $$$A=\\left\\{0,1,2\\right\\},B=\\left\\{0\\right\\}$$$ is a possible choice.In the fourth test case, $$$A=\\left\\{1,3,5\\right\\},B=\\left\\{2,4,6\\right\\}$$$ is a possible choice.",
    "prob_desc_description": "Given a set of integers (it can contain equal elements).You have to split it into two subsets $$$A$$$ and $$$B$$$ (both of them can contain equal elements or be empty). You have to maximize the value of $$$mex(A)+mex(B)$$$.Here $$$mex$$$ of a set denotes the smallest non-negative integer that doesn't exist in the set. For example:   $$$mex(\\{1,4,0,2,2,1\\})=3$$$  $$$mex(\\{3,3,2,1,3,0,0\\})=4$$$  $$$mex(\\varnothing)=0$$$ ($$$mex$$$ for empty set) The set is splitted into two subsets $$$A$$$ and $$$B$$$ if for any integer number $$$x$$$ the number of occurrences of $$$x$$$ into this set is equal to the sum of the number of occurrences of $$$x$$$ into $$$A$$$ and the number of occurrences of $$$x$$$ into $$$B$$$.",
    "prob_desc_output_spec": "For each test case, print the maximum value of $$$mex(A)+mex(B)$$$.",
    "prob_desc_input_spec": "The input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1\\leq t\\leq 100$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains an integer $$$n$$$ ($$$1\\leq n\\leq 100$$$) — the size of the set. The second line of each testcase contains $$$n$$$ integers $$$a_1,a_2,\\dots a_n$$$ ($$$0\\leq a_i\\leq 100$$$) — the numbers in the set.",
    "prob_desc_output_to": "standard output",
    "prob_desc_input_from": "standard input",
    "lang": "Python 3",
    "lang_cluster": "Python",
    "difficulty": 900,
    "file_name": "train_010.jsonl",
    "code_uid": "7eb26b147ec9a96f4360f3fd674b179d",
    "prob_desc_memory_limit": "512 megabytes",
    "prob_desc_sample_inputs": "[\"4\\n6\\n0 2 1 5 0 1\\n3\\n0 1 2\\n4\\n0 2 0 1\\n6\\n1 2 3 4 5 6\"]",
    "exec_outcome": "PASSED",
    "source_code": "for _ in range(int(input())):\n    x=[]\n    lsta=[]\n    lstb=[]\n    i=int(input())\n    x= list(map(int, input().split()[:i]))\n    x.sort() \n    for j in x:\n        if j not in lsta:\n            lsta.append(j)\n        else:\n            lstb.append(j)\n    a=max(lsta)+2\n    try:\n        b=max(lstb)+2\n    except:\n        b=0\n        val2=0\n    for l in range(a):\n        if l not in lsta:\n            val1=l\n            break\n    for m in range(b):\n        if m not in lstb:\n            val2=m\n            break\n    print(val1+val2)\n        \n        \n        \n    \n    \n",
    "prob_desc_created_at": "1599918300",
    "tags": [
        "implementation",
        "greedy",
        "math"
    ],
    "hidden_unit_tests": ""
}